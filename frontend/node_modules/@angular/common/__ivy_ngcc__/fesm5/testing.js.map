{"version":3,"file":"testing.js","sources":["../../../../../../packages/common/testing/src/location_mock.ts","../../../../../../packages/common/testing/src/mock_location_strategy.ts","../../../../../../packages/common/testing/src/mock_platform_location.ts","../../../../../../packages/common/testing/src/testing.ts","../../../../../../packages/common/testing/public_api.ts","../../../../../../packages/common/testing/index.ts","../../../../../../packages/common/testing/testing.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Location, LocationStrategy, PlatformLocation} from '@angular/common';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {SubscriptionLike} from 'rxjs';\n\n/**\n * A spy for {@link Location} that allows tests to fire simulated location events.\n *\n * @publicApi\n */\n@Injectable()\nexport class SpyLocation implements Location {\n  urlChanges: string[] = [];\n  private _history: LocationState[] = [new LocationState('', '', null)];\n  private _historyIndex: number = 0;\n  /** @internal */\n  _subject: EventEmitter<any> = new EventEmitter();\n  /** @internal */\n  _baseHref: string = '';\n  /** @internal */\n  _platformStrategy: LocationStrategy = null !;\n  /** @internal */\n  _platformLocation: PlatformLocation = null !;\n  /** @internal */\n  _urlChangeListeners: ((url: string, state: unknown) => void)[] = [];\n\n  setInitialPath(url: string) { this._history[this._historyIndex].path = url; }\n\n  setBaseHref(url: string) { this._baseHref = url; }\n\n  path(): string { return this._history[this._historyIndex].path; }\n\n  getState(): unknown { return this._history[this._historyIndex].state; }\n\n  isCurrentPathEqualTo(path: string, query: string = ''): boolean {\n    const givenPath = path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n    const currPath =\n        this.path().endsWith('/') ? this.path().substring(0, this.path().length - 1) : this.path();\n\n    return currPath == givenPath + (query.length > 0 ? ('?' + query) : '');\n  }\n\n  simulateUrlPop(pathname: string) {\n    this._subject.emit({'url': pathname, 'pop': true, 'type': 'popstate'});\n  }\n\n  simulateHashChange(pathname: string) {\n    // Because we don't prevent the native event, the browser will independently update the path\n    this.setInitialPath(pathname);\n    this.urlChanges.push('hash: ' + pathname);\n    this._subject.emit({'url': pathname, 'pop': true, 'type': 'hashchange'});\n  }\n\n  prepareExternalUrl(url: string): string {\n    if (url.length > 0 && !url.startsWith('/')) {\n      url = '/' + url;\n    }\n    return this._baseHref + url;\n  }\n\n  go(path: string, query: string = '', state: any = null) {\n    path = this.prepareExternalUrl(path);\n\n    if (this._historyIndex > 0) {\n      this._history.splice(this._historyIndex + 1);\n    }\n    this._history.push(new LocationState(path, query, state));\n    this._historyIndex = this._history.length - 1;\n\n    const locationState = this._history[this._historyIndex - 1];\n    if (locationState.path == path && locationState.query == query) {\n      return;\n    }\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.urlChanges.push(url);\n    this._subject.emit({'url': url, 'pop': false});\n  }\n\n  replaceState(path: string, query: string = '', state: any = null) {\n    path = this.prepareExternalUrl(path);\n\n    const history = this._history[this._historyIndex];\n    if (history.path == path && history.query == query) {\n      return;\n    }\n\n    history.path = path;\n    history.query = query;\n    history.state = state;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.urlChanges.push('replace: ' + url);\n  }\n\n  forward() {\n    if (this._historyIndex < (this._history.length - 1)) {\n      this._historyIndex++;\n      this._subject.emit({'url': this.path(), 'state': this.getState(), 'pop': true});\n    }\n  }\n\n  back() {\n    if (this._historyIndex > 0) {\n      this._historyIndex--;\n      this._subject.emit({'url': this.path(), 'state': this.getState(), 'pop': true});\n    }\n  }\n  onUrlChange(fn: (url: string, state: unknown) => void) {\n    this._urlChangeListeners.push(fn);\n    this.subscribe(v => { this._notifyUrlChangeListeners(v.url, v.state); });\n  }\n\n  /** @internal */\n  _notifyUrlChangeListeners(url: string = '', state: unknown) {\n    this._urlChangeListeners.forEach(fn => fn(url, state));\n  }\n\n  subscribe(\n      onNext: (value: any) => void, onThrow?: ((error: any) => void)|null,\n      onReturn?: (() => void)|null): SubscriptionLike {\n    return this._subject.subscribe({next: onNext, error: onThrow, complete: onReturn});\n  }\n\n  normalize(url: string): string { return null !; }\n}\n\nclass LocationState {\n  constructor(public path: string, public query: string, public state: any) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationStrategy} from '@angular/common';\nimport {EventEmitter, Injectable} from '@angular/core';\n\n\n\n/**\n * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n * location events.\n *\n * @publicApi\n */\n@Injectable()\nexport class MockLocationStrategy extends LocationStrategy {\n  internalBaseHref: string = '/';\n  internalPath: string = '/';\n  internalTitle: string = '';\n  urlChanges: string[] = [];\n  /** @internal */\n  _subject: EventEmitter<any> = new EventEmitter();\n  private stateChanges: any[] = [];\n  constructor() { super(); }\n\n  simulatePopState(url: string): void {\n    this.internalPath = url;\n    this._subject.emit(new _MockPopStateEvent(this.path()));\n  }\n\n  path(includeHash: boolean = false): string { return this.internalPath; }\n\n  prepareExternalUrl(internal: string): string {\n    if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\n      return this.internalBaseHref + internal.substring(1);\n    }\n    return this.internalBaseHref + internal;\n  }\n\n  pushState(ctx: any, title: string, path: string, query: string): void {\n    // Add state change to changes array\n    this.stateChanges.push(ctx);\n\n    this.internalTitle = title;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    const externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push(externalUrl);\n  }\n\n  replaceState(ctx: any, title: string, path: string, query: string): void {\n    // Reset the last index of stateChanges to the ctx (state) object\n    this.stateChanges[(this.stateChanges.length || 1) - 1] = ctx;\n\n    this.internalTitle = title;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    const externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push('replace: ' + externalUrl);\n  }\n\n  onPopState(fn: (value: any) => void): void { this._subject.subscribe({next: fn}); }\n\n  getBaseHref(): string { return this.internalBaseHref; }\n\n  back(): void {\n    if (this.urlChanges.length > 0) {\n      this.urlChanges.pop();\n      this.stateChanges.pop();\n      const nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n      this.simulatePopState(nextUrl);\n    }\n  }\n\n  forward(): void { throw 'not implemented'; }\n\n  getState(): unknown { return this.stateChanges[(this.stateChanges.length || 1) - 1]; }\n}\n\nclass _MockPopStateEvent {\n  pop: boolean = true;\n  type: string = 'popstate';\n  constructor(public newUrl: string) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationChangeEvent, LocationChangeListener, PlatformLocation} from '@angular/common';\nimport {Inject, Injectable, InjectionToken, Optional} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n/**\n * Parser from https://tools.ietf.org/html/rfc3986#appendix-B\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n *\n * Example: http://www.ics.uci.edu/pub/ietf/uri/#Related\n *\n * Results in:\n *\n * $1 = http:\n * $2 = http\n * $3 = //www.ics.uci.edu\n * $4 = www.ics.uci.edu\n * $5 = /pub/ietf/uri/\n * $6 = <undefined>\n * $7 = <undefined>\n * $8 = #Related\n * $9 = Related\n */\nconst urlParse = /^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\nfunction parseUrl(urlStr: string, baseHref: string) {\n  const verifyProtocol = /^((http[s]?|ftp):\\/\\/)/;\n  let serverBase: string|undefined;\n\n  // URL class requires full URL. If the URL string doesn't start with protocol, we need to add\n  // an arbitrary base URL which can be removed afterward.\n  if (!verifyProtocol.test(urlStr)) {\n    serverBase = 'http://empty.com/';\n  }\n  let parsedUrl: {\n    protocol: string,\n    hostname: string,\n    port: string,\n    pathname: string,\n    search: string,\n    hash: string\n  };\n  try {\n    parsedUrl = new URL(urlStr, serverBase);\n  } catch (e) {\n    const result = urlParse.exec(serverBase || '' + urlStr);\n    if (!result) {\n      throw new Error(`Invalid URL: ${urlStr} with base: ${baseHref}`);\n    }\n    const hostSplit = result[4].split(':');\n    parsedUrl = {\n      protocol: result[1],\n      hostname: hostSplit[0],\n      port: hostSplit[1] || '',\n      pathname: result[5],\n      search: result[6],\n      hash: result[8],\n    };\n  }\n  if (parsedUrl.pathname && parsedUrl.pathname.indexOf(baseHref) === 0) {\n    parsedUrl.pathname = parsedUrl.pathname.substring(baseHref.length);\n  }\n  return {\n    hostname: !serverBase && parsedUrl.hostname || '',\n    protocol: !serverBase && parsedUrl.protocol || '',\n    port: !serverBase && parsedUrl.port || '',\n    pathname: parsedUrl.pathname || '/',\n    search: parsedUrl.search || '',\n    hash: parsedUrl.hash || '',\n  };\n}\n\n/**\n * Mock platform location config\n *\n * @publicApi\n */\nexport interface MockPlatformLocationConfig {\n  startUrl?: string;\n  appBaseHref?: string;\n}\n\n/**\n * Provider for mock platform location config\n *\n * @publicApi\n */\nexport const MOCK_PLATFORM_LOCATION_CONFIG =\n    new InjectionToken<MockPlatformLocationConfig>('MOCK_PLATFORM_LOCATION_CONFIG');\n\n/**\n * Mock implementation of URL state.\n *\n * @publicApi\n */\n@Injectable()\nexport class MockPlatformLocation implements PlatformLocation {\n  private baseHref: string = '';\n  private hashUpdate = new Subject<LocationChangeEvent>();\n  private urlChanges: {\n    hostname: string,\n    protocol: string,\n    port: string,\n    pathname: string,\n    search: string,\n    hash: string,\n    state: unknown\n  }[] = [{hostname: '', protocol: '', port: '', pathname: '/', search: '', hash: '', state: null}];\n\n  constructor(@Inject(MOCK_PLATFORM_LOCATION_CONFIG) @Optional() config?:\n                  MockPlatformLocationConfig) {\n    if (config) {\n      this.baseHref = config.appBaseHref || '';\n\n      const parsedChanges =\n          this.parseChanges(null, config.startUrl || 'http://<empty>/', this.baseHref);\n      this.urlChanges[0] = {...parsedChanges};\n    }\n  }\n\n  get hostname() { return this.urlChanges[0].hostname; }\n  get protocol() { return this.urlChanges[0].protocol; }\n  get port() { return this.urlChanges[0].port; }\n  get pathname() { return this.urlChanges[0].pathname; }\n  get search() { return this.urlChanges[0].search; }\n  get hash() { return this.urlChanges[0].hash; }\n  get state() { return this.urlChanges[0].state; }\n\n\n  getBaseHrefFromDOM(): string { return this.baseHref; }\n\n  onPopState(fn: LocationChangeListener): void {\n    // No-op: a state stack is not implemented, so\n    // no events will ever come.\n  }\n\n  onHashChange(fn: LocationChangeListener): void { this.hashUpdate.subscribe(fn); }\n\n  get href(): string {\n    let url = `${this.protocol}//${this.hostname}${this.port ? ':' + this.port : ''}`;\n    url += `${this.pathname === '/' ? '' : this.pathname}${this.search}${this.hash}`;\n    return url;\n  }\n\n  get url(): string { return `${this.pathname}${this.search}${this.hash}`; }\n\n  private parseChanges(state: unknown, url: string, baseHref: string = '') {\n    // When the `history.state` value is stored, it is always copied.\n    state = JSON.parse(JSON.stringify(state));\n    return {...parseUrl(url, baseHref), state};\n  }\n\n  replaceState(state: any, title: string, newUrl: string): void {\n    const {pathname, search, state: parsedState, hash} = this.parseChanges(state, newUrl);\n\n    this.urlChanges[0] = {...this.urlChanges[0], pathname, search, hash, state: parsedState};\n  }\n\n  pushState(state: any, title: string, newUrl: string): void {\n    const {pathname, search, state: parsedState, hash} = this.parseChanges(state, newUrl);\n    this.urlChanges.unshift({...this.urlChanges[0], pathname, search, hash, state: parsedState});\n  }\n\n  forward(): void { throw new Error('Not implemented'); }\n\n  back(): void {\n    const oldUrl = this.url;\n    const oldHash = this.hash;\n    this.urlChanges.shift();\n    const newHash = this.hash;\n\n    if (oldHash !== newHash) {\n      scheduleMicroTask(() => this.hashUpdate.next({\n        type: 'hashchange', state: null, oldUrl, newUrl: this.url\n      } as LocationChangeEvent));\n    }\n  }\n\n  getState(): unknown { return this.state; }\n}\n\nexport function scheduleMicroTask(cb: () => any) {\n  Promise.resolve(null).then(cb);\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common/testing package.\n */\nexport {SpyLocation} from './location_mock';\nexport {MockLocationStrategy} from './mock_location_strategy';\nexport {MOCK_PLATFORM_LOCATION_CONFIG, MockPlatformLocation, MockPlatformLocationConfig} from './mock_platform_location';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/testing';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}