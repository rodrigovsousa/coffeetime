import { __decorate } from "tslib";
import { Injectable, Renderer2, RendererFactory2 } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * AccessbilityService Serviço de acessibilidade, este serviço prove recursos de contraste
 * de tela e controle do tamanho da fonte apresentadas na tela.
 * @class
 */
import * as ɵngcc0 from '@angular/core';
let AccessbilityService = class AccessbilityService {
    constructor(rendererFactory) {
        /**
         * Propriedade que define tamanho da fonte
         * @type {number}
         */
        this.fontSize = 1.0;
        this.renderer = rendererFactory.createRenderer(null, null);
    }
    /**
     * Medoto para habilitar contraste
     * @public
     * @returns void
     */
    enableHighContrast() {
        this.renderer.addClass(document.body, 'contraste');
    }
    /**
     * Metodo para desabilitar contraste
     * @public
     * @returns void
     */
    disableHighContrast() {
        this.renderer.removeClass(document.body, 'contraste');
    }
    /**
     * Metodo utilizado para aumentar o tamnho da fonte apresentada no display
     * @public
     * @returns void
     */
    increaseFontSize() {
        this.fontSize += 0.1;
        this.renderer.setStyle(document.querySelector('div.layout-wrapper'), 'font-size', this.fontSize + 'em');
    }
    /**
     * Metodo utilizado para diminuir o tamnho da fonte apresentada no display
     * @public
     * @returns void
     */
    decreaseFontSize() {
        this.fontSize -= 0.1;
        this.renderer.setStyle(document.querySelector('div.layout-wrapper'), 'font-size', this.fontSize + 'em');
    }
    addAccessibilityIcons() {
        const elements = document.querySelector('.ui-button-icon-left, ui-button-icon-righ');
        if (elements) {
            this.renderer.setStyle(elements, 'aria-hidden', true);
        }
    }
    addAccessibilityMessages(msg) {
        let type = 'polite';
        if (msg.severity.toLowerCase() !== 'custom' && msg.severity.toLowerCase() !== 'success') {
            type = 'assertive';
        }
        this.renderer.setStyle(document.querySelector('p-toast, p-growl'), 'aria-live', type);
    }
};
AccessbilityService.ɵfac = function AccessbilityService_Factory(t) { return new (t || AccessbilityService)(ɵngcc0.ɵɵinject(ɵngcc0.RendererFactory2)); };
AccessbilityService.ctorParameters = () => [
    { type: RendererFactory2 }
];
AccessbilityService.ɵprov = i0.ɵɵdefineInjectable({ factory: function AccessbilityService_Factory() { return new AccessbilityService(i0.ɵɵinject(i0.RendererFactory2)); }, token: AccessbilityService, providedIn: "root" });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AccessbilityService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc0.RendererFactory2 }]; }, null); })();
export { AccessbilityService };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjZXNzaWJpbGl0eS5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyJuZzovQG51dmVtL2FuZ3VsYXItYmFzZS9saWIvYWNjZXNzaWJpbGl0eS9hY2Nlc3NpYmlsaXR5LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUlILElBQWEsbUJBQW1CLEdBQWhDLE1BQWEsbUJBQW1CO0FBQ2hDLElBR0ksWUFBWSxlQUFpQztBQUNqRCxRQUdJO0FBQ0o7QUFDSTtBQUVKLFdBRE87QUFDUCxRQUFZLGFBQVEsR0FBVyxHQUFHLENBQUM7QUFDbkMsUUFSUSxJQUFJLENBQUMsUUFBUSxHQUFHLGVBQWUsQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ25FLElBQUksQ0FBQztBQUNMLElBT0k7QUFDSjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsSUFBSSxrQkFBa0I7QUFDdEIsUUFBUSxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQzNELElBQUksQ0FBQztBQUNMLElBQ0k7QUFDSjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsSUFBSSxtQkFBbUI7QUFDdkIsUUFBUSxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQzlELElBQUksQ0FBQztBQUNMLElBQ0k7QUFDSjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsSUFBSSxnQkFBZ0I7QUFDcEIsUUFBUSxJQUFJLENBQUMsUUFBUSxJQUFJLEdBQUcsQ0FBQztBQUM3QixRQUFRLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsb0JBQW9CLENBQUMsRUFBRSxXQUFXLEVBQUUsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsQ0FBQztBQUNoSCxJQUFJLENBQUM7QUFDTCxJQUNJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLElBQUksZ0JBQWdCO0FBQ3BCLFFBQVEsSUFBSSxDQUFDLFFBQVEsSUFBSSxHQUFHLENBQUM7QUFDN0IsUUFBUSxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLG9CQUFvQixDQUFDLEVBQUUsV0FBVyxFQUFFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLENBQUM7QUFDaEgsSUFBSSxDQUFDO0FBQ0wsSUFDSSxxQkFBcUI7QUFDekIsUUFBUSxNQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLDJDQUEyQyxDQUFDLENBQUM7QUFDN0YsUUFDUSxJQUFJLFFBQVEsRUFBRTtBQUN0QixZQUFZLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxhQUFhLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDbEUsU0FBUztBQUNULElBQUksQ0FBQztBQUNMLElBQ0ksd0JBQXdCLENBQUMsR0FBdUI7QUFDcEQsUUFBUSxJQUFJLElBQUksR0FBRyxRQUFRLENBQUM7QUFDNUIsUUFBUSxJQUFJLEdBQUcsQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFLEtBQUssUUFBUSxJQUFJLEdBQUcsQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFLEtBQUssU0FBUyxFQUFFO0FBQ2pHLFlBQVksSUFBSSxHQUFHLFdBQVcsQ0FBQztBQUMvQixTQUFTO0FBQ1QsUUFDUSxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLGtCQUFrQixDQUFDLEVBQUUsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQzlGLElBQUksQ0FBQztBQUNMLENBQ0M7d0pBQUE7QUFDRDtBQUE2QyxZQWxFWixnQkFBZ0I7QUFBRztBQUNsRDtBQUxXLG1CQUFtQixvQkFIL0IsVUFBVSxDQUFDLFVBQ1IsVUFBVSxFQUFFO0FBQU0sT0FDckIsQ0FBQyxJQUNXO0tBQW1CLENBcUUvQjs7O2lGQUNEO0FBQUMsU0F0RVksbUJBQW1CO0FBRWhDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgUmVuZGVyZXIyLCBSZW5kZXJlckZhY3RvcnkyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQWNjZXNzYmlsaXR5U2VydmljZSBTZXJ2acOnbyBkZSBhY2Vzc2liaWxpZGFkZSwgZXN0ZSBzZXJ2acOnbyBwcm92ZSByZWN1cnNvcyBkZSBjb250cmFzdGVcbiAqIGRlIHRlbGEgZSBjb250cm9sZSBkbyB0YW1hbmhvIGRhIGZvbnRlIGFwcmVzZW50YWRhcyBuYSB0ZWxhLlxuICogQGNsYXNzXG4gKi9cbkBJbmplY3RhYmxlKHtcbiAgICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIEFjY2Vzc2JpbGl0eVNlcnZpY2Uge1xuXG4gICAgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyXG5cbiAgICBjb25zdHJ1Y3RvcihyZW5kZXJlckZhY3Rvcnk6IFJlbmRlcmVyRmFjdG9yeTIpIHtcbiAgICAgICAgdGhpcy5yZW5kZXJlciA9IHJlbmRlcmVyRmFjdG9yeS5jcmVhdGVSZW5kZXJlcihudWxsLCBudWxsKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBQcm9wcmllZGFkZSBxdWUgZGVmaW5lIHRhbWFuaG8gZGEgZm9udGVcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAqL1xuICAgIHByaXZhdGUgZm9udFNpemU6IG51bWJlciA9IDEuMDtcblxuICAgIC8qKlxuICAgICAqIE1lZG90byBwYXJhIGhhYmlsaXRhciBjb250cmFzdGVcbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIGVuYWJsZUhpZ2hDb250cmFzdCgpIHtcbiAgICAgICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyhkb2N1bWVudC5ib2R5LCAnY29udHJhc3RlJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTWV0b2RvIHBhcmEgZGVzYWJpbGl0YXIgY29udHJhc3RlXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgKi9cbiAgICBkaXNhYmxlSGlnaENvbnRyYXN0KCkge1xuICAgICAgICB0aGlzLnJlbmRlcmVyLnJlbW92ZUNsYXNzKGRvY3VtZW50LmJvZHksICdjb250cmFzdGUnKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBNZXRvZG8gdXRpbGl6YWRvIHBhcmEgYXVtZW50YXIgbyB0YW1uaG8gZGEgZm9udGUgYXByZXNlbnRhZGEgbm8gZGlzcGxheVxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgaW5jcmVhc2VGb250U2l6ZSgpIHtcbiAgICAgICAgdGhpcy5mb250U2l6ZSArPSAwLjE7XG4gICAgICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignZGl2LmxheW91dC13cmFwcGVyJyksICdmb250LXNpemUnLCB0aGlzLmZvbnRTaXplICsgJ2VtJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTWV0b2RvIHV0aWxpemFkbyBwYXJhIGRpbWludWlyIG8gdGFtbmhvIGRhIGZvbnRlIGFwcmVzZW50YWRhIG5vIGRpc3BsYXlcbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIGRlY3JlYXNlRm9udFNpemUoKSB7XG4gICAgICAgIHRoaXMuZm9udFNpemUgLT0gMC4xO1xuICAgICAgICB0aGlzLnJlbmRlcmVyLnNldFN0eWxlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Rpdi5sYXlvdXQtd3JhcHBlcicpLCAnZm9udC1zaXplJywgdGhpcy5mb250U2l6ZSArICdlbScpO1xuICAgIH1cblxuICAgIGFkZEFjY2Vzc2liaWxpdHlJY29ucygpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudWktYnV0dG9uLWljb24tbGVmdCwgdWktYnV0dG9uLWljb24tcmlnaCcpO1xuXG4gICAgICAgIGlmIChlbGVtZW50cykge1xuICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZShlbGVtZW50cywgJ2FyaWEtaGlkZGVuJywgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhZGRBY2Nlc3NpYmlsaXR5TWVzc2FnZXMobXNnOiB7c2V2ZXJpdHk6IHN0cmluZ30pIHtcbiAgICAgICAgbGV0IHR5cGUgPSAncG9saXRlJztcbiAgICAgICAgaWYgKG1zZy5zZXZlcml0eS50b0xvd2VyQ2FzZSgpICE9PSAnY3VzdG9tJyAmJiBtc2cuc2V2ZXJpdHkudG9Mb3dlckNhc2UoKSAhPT0gJ3N1Y2Nlc3MnKSB7XG4gICAgICAgICAgICB0eXBlID0gJ2Fzc2VydGl2ZSc7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnJlbmRlcmVyLnNldFN0eWxlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ3AtdG9hc3QsIHAtZ3Jvd2wnKSwgJ2FyaWEtbGl2ZScsIHR5cGUpO1xuICAgIH1cblxufVxuIl19