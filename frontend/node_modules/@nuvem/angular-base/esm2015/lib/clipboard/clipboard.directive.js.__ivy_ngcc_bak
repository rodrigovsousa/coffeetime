import { __decorate } from "tslib";
import { Directive, Input, Output, EventEmitter, HostListener } from '@angular/core';
import { ClipboardService } from './clipboard.service';
let ClipboardDirective = 
/**
 * Diretiva que expõe seletor para o uso do clipbord
 * @class
 */
class ClipboardDirective {
    /**
     * constructor method
     * @param {ClipboardService} service
     * @constructor
     */
    constructor(service) {
        this.service = service;
        /**
         * onClipboard variable
         * @type {EventEmitter<boolean>}
         */
        this.onClipboard = new EventEmitter();
    }
    /**
     * copy method
     * @event click
     * @returns void
     */
    copy() {
        try {
            this.service.copy(this.clipboard);
            this.onClipboard.emit(true);
        }
        catch (e) {
            this.onClipboard.emit(false);
            throw e;
        }
    }
};
ClipboardDirective.ctorParameters = () => [
    { type: ClipboardService }
];
__decorate([
    Input()
], ClipboardDirective.prototype, "clipboard", void 0);
__decorate([
    Output()
], ClipboardDirective.prototype, "onClipboard", void 0);
__decorate([
    HostListener('click')
], ClipboardDirective.prototype, "copy", null);
ClipboardDirective = __decorate([
    Directive({
        selector: '[clipboard]'
    })
    /**
     * Diretiva que expõe seletor para o uso do clipbord
     * @class
     */
], ClipboardDirective);
export { ClipboardDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpcGJvYXJkLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BudXZlbS9hbmd1bGFyLWJhc2UvIiwic291cmNlcyI6WyJsaWIvY2xpcGJvYXJkL2NsaXBib2FyZC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXJGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBU3ZELElBQWEsa0JBQWtCO0FBSi9COzs7R0FHRztBQUNILE1BQWEsa0JBQWtCO0lBZ0IzQjs7OztPQUlHO0lBQ0gsWUFBb0IsT0FBeUI7UUFBekIsWUFBTyxHQUFQLE9BQU8sQ0FBa0I7UUFaN0M7OztXQUdHO1FBRUgsZ0JBQVcsR0FBMEIsSUFBSSxZQUFZLEVBQVcsQ0FBQztJQU9qQixDQUFDO0lBUWpELEFBTEE7Ozs7T0FJRztJQUNILElBQUk7UUFDQSxJQUFJO1lBQ0EsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ2xDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQy9CO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDUixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUM3QixNQUFNLENBQUMsQ0FBQztTQUNYO0lBQ0wsQ0FBQztDQUNKLENBQUE7O1lBakJnQyxnQkFBZ0I7O0FBZDdDO0lBREMsS0FBSyxFQUFFO3FEQUNVO0FBT2xCO0lBREMsTUFBTSxFQUFFO3VEQUN3RDtBQWVqRTtJQU5DLFlBQVksQ0FBQyxPQUFPLENBQUM7OENBY3JCO0FBckNRLGtCQUFrQjtJQVA5QixTQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsYUFBYTtLQUMxQixDQUFDO0lBQ0Y7OztPQUdHO0dBQ1Usa0JBQWtCLENBc0M5QjtTQXRDWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgSG9zdExpc3RlbmVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IENsaXBib2FyZFNlcnZpY2UgfSBmcm9tICcuL2NsaXBib2FyZC5zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbY2xpcGJvYXJkXSdcbn0pXG4vKipcbiAqIERpcmV0aXZhIHF1ZSBleHDDtWUgc2VsZXRvciBwYXJhIG8gdXNvIGRvIGNsaXBib3JkXG4gKiBAY2xhc3NcbiAqL1xuZXhwb3J0IGNsYXNzIENsaXBib2FyZERpcmVjdGl2ZSB7XG5cbiAgICAvKipcbiAgICAgKiBjbGlwYm9hcmQgdmFyaWFibGVcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgY2xpcGJvYXJkOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBvbkNsaXBib2FyZCB2YXJpYWJsZVxuICAgICAqIEB0eXBlIHtFdmVudEVtaXR0ZXI8Ym9vbGVhbj59XG4gICAgICovXG4gICAgQE91dHB1dCgpXG4gICAgb25DbGlwYm9hcmQ6IEV2ZW50RW1pdHRlcjxib29sZWFuPiA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcblxuICAgIC8qKlxuICAgICAqIGNvbnN0cnVjdG9yIG1ldGhvZFxuICAgICAqIEBwYXJhbSB7Q2xpcGJvYXJkU2VydmljZX0gc2VydmljZVxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgc2VydmljZTogQ2xpcGJvYXJkU2VydmljZSkge31cblxuICAgIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJylcbiAgICAvKipcbiAgICAgKiBjb3B5IG1ldGhvZFxuICAgICAqIEBldmVudCBjbGlja1xuICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgKi9cbiAgICBjb3B5KCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgdGhpcy5zZXJ2aWNlLmNvcHkodGhpcy5jbGlwYm9hcmQpO1xuICAgICAgICAgICAgdGhpcy5vbkNsaXBib2FyZC5lbWl0KHRydWUpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICB0aGlzLm9uQ2xpcGJvYXJkLmVtaXQoZmFsc2UpO1xuICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==