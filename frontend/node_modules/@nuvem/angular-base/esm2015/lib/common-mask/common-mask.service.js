import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 *
 * Class CommonMaskService serviço para inserção de mascara de data em campos input
 * @class
 */
let CommonMaskService = class CommonMaskService {
    constructor() {
        /**
         * DATE_SEPARATOR property
         * @type {string}
         */
        this.DATE_SEPARATOR = '/';
    }
    /**
     * Metodo para formatar valor digitado no padrão dd/mm/yyyy
     * @param $event
     * @returns void
     */
    dateMask($event) {
        if ($event.target.value) {
            let date = $event.target.value.replace(/[^0-9]/g, '').substr(0, 8);
            if (date.length >= 3) {
                date = date.replace(/^(\d{2})(\d{1,2})/, '$1' + this.DATE_SEPARATOR + '$2');
            }
            if (date.length >= 6) {
                date = date.replace(/^(\S{5})(\d{1,4})/, '$1' + this.DATE_SEPARATOR + '$2');
            }
            $event.target.value = date;
        }
    }
};
CommonMaskService.ɵprov = i0.ɵɵdefineInjectable({ factory: function CommonMaskService_Factory() { return new CommonMaskService(); }, token: CommonMaskService, providedIn: "root" });
CommonMaskService = __decorate([
    Injectable({
        providedIn: 'root',
    })
], CommonMaskService);
export { CommonMaskService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLW1hc2suc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BudXZlbS9hbmd1bGFyLWJhc2UvIiwic291cmNlcyI6WyJsaWIvY29tbW9uLW1hc2svY29tbW9uLW1hc2suc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFFM0M7Ozs7R0FJRztBQUlILElBQWEsaUJBQWlCLEdBQTlCLE1BQWEsaUJBQWlCO0lBQTlCO1FBRUk7OztXQUdHO1FBQ2MsbUJBQWMsR0FBRyxHQUFHLENBQUM7S0FzQnpDO0lBcEJHOzs7O09BSUc7SUFDSCxRQUFRLENBQUMsTUFBTTtRQUNYLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUU7WUFDckIsSUFBSSxJQUFJLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBRW5FLElBQUksSUFBSSxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7Z0JBQ3BCLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLG1CQUFtQixFQUFFLElBQUksR0FBRyxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxDQUFDO2FBQzdFO1lBRUQsSUFBSSxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtnQkFDcEIsSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsbUJBQW1CLEVBQUUsSUFBSSxHQUFHLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLENBQUM7YUFDN0U7WUFFRCxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7U0FDOUI7SUFDTCxDQUFDO0NBQ0osQ0FBQTs7QUE1QlksaUJBQWlCO0lBSDdCLFVBQVUsQ0FBQztRQUNWLFVBQVUsRUFBRSxNQUFNO0tBQ25CLENBQUM7R0FDVyxpQkFBaUIsQ0E0QjdCO1NBNUJZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKlxuICogQ2xhc3MgQ29tbW9uTWFza1NlcnZpY2Ugc2VydmnDp28gcGFyYSBpbnNlcsOnw6NvIGRlIG1hc2NhcmEgZGUgZGF0YSBlbSBjYW1wb3MgaW5wdXRcbiAqIEBjbGFzcyBcbiAqL1xuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIENvbW1vbk1hc2tTZXJ2aWNlIHtcblxuICAgIC8qKlxuICAgICAqIERBVEVfU0VQQVJBVE9SIHByb3BlcnR5XG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBwcml2YXRlIHJlYWRvbmx5IERBVEVfU0VQQVJBVE9SID0gJy8nO1xuXG4gICAgLyoqXG4gICAgICogTWV0b2RvIHBhcmEgZm9ybWF0YXIgdmFsb3IgZGlnaXRhZG8gbm8gcGFkcsOjbyBkZC9tbS95eXl5XG4gICAgICogQHBhcmFtICRldmVudFxuICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgKi9cbiAgICBkYXRlTWFzaygkZXZlbnQpIHtcbiAgICAgICAgaWYgKCRldmVudC50YXJnZXQudmFsdWUpIHtcbiAgICAgICAgICAgIGxldCBkYXRlID0gJGV2ZW50LnRhcmdldC52YWx1ZS5yZXBsYWNlKC9bXjAtOV0vZywgJycpLnN1YnN0cigwLCA4KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKGRhdGUubGVuZ3RoID49IDMpIHtcbiAgICAgICAgICAgICAgZGF0ZSA9IGRhdGUucmVwbGFjZSgvXihcXGR7Mn0pKFxcZHsxLDJ9KS8sICckMScgKyB0aGlzLkRBVEVfU0VQQVJBVE9SICsgJyQyJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChkYXRlLmxlbmd0aCA+PSA2KSB7XG4gICAgICAgICAgICAgIGRhdGUgPSBkYXRlLnJlcGxhY2UoL14oXFxTezV9KShcXGR7MSw0fSkvLCAnJDEnICsgdGhpcy5EQVRFX1NFUEFSQVRPUiArICckMicpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAkZXZlbnQudGFyZ2V0LnZhbHVlID0gZGF0ZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==