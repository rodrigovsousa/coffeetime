import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import { HttpErrorResponse } from '@angular/common/http';
import { ErrorStackService } from './error-stack.service';
import * as i0 from "@angular/core";
import * as i1 from "./error-stack.service";
/**
 * Class ErrorStackProviderService
 * @class
 */
let ErrorStackProviderService = class ErrorStackProviderService {
    /**
     * Metodo construtor responsável por injetar o serviso de erros
     * @param {ErrorStackService} errorStackService
     */
    constructor(errorStackService) {
        this.errorStackService = errorStackService;
    }
    /**
     * Metodo responsável pela identificação de erros
     * @param {Error} error
     * @returns Boolean
     */
    shouldHandle(error) {
        return error instanceof HttpErrorResponse;
    }
    /**
     * Metodo pela adição de erros
     * @param {HttpErrorResponse} error
     * @returns void
     */
    handle(error) {
        this.errorStackService.create(error);
    }
};
ErrorStackProviderService.ctorParameters = () => [
    { type: ErrorStackService }
];
ErrorStackProviderService.ɵprov = i0.ɵɵdefineInjectable({ factory: function ErrorStackProviderService_Factory() { return new ErrorStackProviderService(i0.ɵɵinject(i1.ErrorStackService)); }, token: ErrorStackProviderService, providedIn: "root" });
ErrorStackProviderService = __decorate([
    Injectable({
        providedIn: 'root',
    })
], ErrorStackProviderService);
export { ErrorStackProviderService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3Itc3RhY2stcHJvdmlkZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BudXZlbS9hbmd1bGFyLWJhc2UvIiwic291cmNlcyI6WyJsaWIvZXJyb3Ivc2VydmljZXMvZXJyb3Itc3RhY2stcHJvdmlkZXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7O0FBRTFEOzs7R0FHRztBQUlILElBQWEseUJBQXlCLEdBQXRDLE1BQWEseUJBQXlCO0lBRWxDOzs7T0FHRztJQUNILFlBQW9CLGlCQUFvQztRQUFwQyxzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO0lBQUcsQ0FBQztJQUU1RDs7OztPQUlHO0lBQ0gsWUFBWSxDQUFDLEtBQVk7UUFDckIsT0FBTyxLQUFLLFlBQVksaUJBQWlCLENBQUM7SUFDOUMsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxNQUFNLENBQUMsS0FBd0I7UUFDM0IsSUFBSSxDQUFDLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6QyxDQUFDO0NBRUosQ0FBQTs7WUFwQjBDLGlCQUFpQjs7O0FBTi9DLHlCQUF5QjtJQUhyQyxVQUFVLENBQUM7UUFDUixVQUFVLEVBQUUsTUFBTTtLQUNyQixDQUFDO0dBQ1cseUJBQXlCLENBMEJyQztTQTFCWSx5QkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBFcnJvclByb3ZpZGVyIH0gZnJvbSAnLi4vcHJvdmlkZXJzL2Vycm9yLnByb3ZpZGVyJztcbmltcG9ydCB7IEh0dHBFcnJvclJlc3BvbnNlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgRXJyb3JTdGFja1NlcnZpY2UgfSBmcm9tICcuL2Vycm9yLXN0YWNrLnNlcnZpY2UnO1xuXG4vKipcbiAqIENsYXNzIEVycm9yU3RhY2tQcm92aWRlclNlcnZpY2VcbiAqIEBjbGFzc1xuICovXG5ASW5qZWN0YWJsZSh7XG4gICAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBFcnJvclN0YWNrUHJvdmlkZXJTZXJ2aWNlIGltcGxlbWVudHMgRXJyb3JQcm92aWRlciB7XG5cbiAgICAvKipcbiAgICAgKiBNZXRvZG8gY29uc3RydXRvciByZXNwb25zw6F2ZWwgcG9yIGluamV0YXIgbyBzZXJ2aXNvIGRlIGVycm9zXG4gICAgICogQHBhcmFtIHtFcnJvclN0YWNrU2VydmljZX0gZXJyb3JTdGFja1NlcnZpY2VcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVycm9yU3RhY2tTZXJ2aWNlOiBFcnJvclN0YWNrU2VydmljZSkge31cblxuICAgIC8qKlxuICAgICAqIE1ldG9kbyByZXNwb25zw6F2ZWwgcGVsYSBpZGVudGlmaWNhw6fDo28gZGUgZXJyb3NcbiAgICAgKiBAcGFyYW0ge0Vycm9yfSBlcnJvclxuICAgICAqIEByZXR1cm5zIEJvb2xlYW5cbiAgICAgKi9cbiAgICBzaG91bGRIYW5kbGUoZXJyb3I6IEVycm9yKTogQm9vbGVhbiB7XG4gICAgICAgIHJldHVybiBlcnJvciBpbnN0YW5jZW9mIEh0dHBFcnJvclJlc3BvbnNlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE1ldG9kbyBwZWxhIGFkacOnw6NvIGRlIGVycm9zXG4gICAgICogQHBhcmFtIHtIdHRwRXJyb3JSZXNwb25zZX0gZXJyb3JcbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgaGFuZGxlKGVycm9yOiBIdHRwRXJyb3JSZXNwb25zZSkge1xuICAgICAgICB0aGlzLmVycm9yU3RhY2tTZXJ2aWNlLmNyZWF0ZShlcnJvcik7XG4gICAgfVxuXG59XG4iXX0=