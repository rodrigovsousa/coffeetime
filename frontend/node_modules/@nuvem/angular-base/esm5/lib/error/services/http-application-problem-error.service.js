import { __decorate } from "tslib";
import { Injectable, NgZone } from '@angular/core';
import { HttpErrorResponse } from '@angular/common/http';
import { NotificationProvider } from '../providers/notification.provider';
import { ApplicationProblemType } from '../types/application-problem.type';
import * as i0 from "@angular/core";
import * as i1 from "../providers/notification.provider";
/**
 * Serviço HttpApplicationProblemErrorService
 * @class
 */
var HttpApplicationProblemErrorService = /** @class */ (function () {
    /**
     * Metodo construtor responsável por injetar serviço NotificationProvider
     * @param {NotificationProvider} notification
     * @constructor
     */
    function HttpApplicationProblemErrorService(notification, ngZone) {
        this.notification = notification;
        this.ngZone = ngZone;
    }
    /**
     * Metodo responsável pela identificação de erros
     * @public
     * @param {Error | HttpErrorResponse} error
     * @returns Boolean
     */
    HttpApplicationProblemErrorService.prototype.shouldHandle = function (error) {
        return error instanceof HttpErrorResponse &&
            error.headers.get('Content-Type') === 'application/problem+json' &&
            error.error;
    };
    /**
     * Metodo pela adição de erros
     * @public
     * @param {HttpErrorResponse} error
     * @returns void
     */
    HttpApplicationProblemErrorService.prototype.handle = function (error) {
        var _this = this;
        this.ngZone.run(function () {
            _this.notification.addErrorProblem(new ApplicationProblemType(error.error.type, error.error.title, error.error.detail, error.error.status, error.error.instance));
        });
    };
    HttpApplicationProblemErrorService.ctorParameters = function () { return [
        { type: NotificationProvider },
        { type: NgZone }
    ]; };
    HttpApplicationProblemErrorService.ɵprov = i0.ɵɵdefineInjectable({ factory: function HttpApplicationProblemErrorService_Factory() { return new HttpApplicationProblemErrorService(i0.ɵɵinject(i1.NotificationProvider), i0.ɵɵinject(i0.NgZone)); }, token: HttpApplicationProblemErrorService, providedIn: "root" });
    HttpApplicationProblemErrorService = __decorate([
        Injectable({
            providedIn: 'root',
        })
    ], HttpApplicationProblemErrorService);
    return HttpApplicationProblemErrorService;
}());
export { HttpApplicationProblemErrorService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cC1hcHBsaWNhdGlvbi1wcm9ibGVtLWVycm9yLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbnV2ZW0vYW5ndWxhci1iYXNlLyIsInNvdXJjZXMiOlsibGliL2Vycm9yL3NlcnZpY2VzL2h0dHAtYXBwbGljYXRpb24tcHJvYmxlbS1lcnJvci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUMxRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQzs7O0FBRzNFOzs7R0FHRztBQUlIO0lBRUk7Ozs7T0FJRztJQUNILDRDQUFvQixZQUFrQyxFQUFVLE1BQWM7UUFBMUQsaUJBQVksR0FBWixZQUFZLENBQXNCO1FBQVUsV0FBTSxHQUFOLE1BQU0sQ0FBUTtJQUFJLENBQUM7SUFFbkY7Ozs7O09BS0c7SUFDSCx5REFBWSxHQUFaLFVBQWEsS0FBZ0M7UUFDekMsT0FBTyxLQUFLLFlBQVksaUJBQWlCO1lBQ3JDLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxLQUFLLDBCQUEwQjtZQUNoRSxLQUFLLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILG1EQUFNLEdBQU4sVUFBTyxLQUF3QjtRQUEvQixpQkFVQztRQVRHLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDO1lBQ1osS0FBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQzdCLElBQUksc0JBQXNCLENBQ3RCLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUNoQixLQUFLLENBQUMsS0FBSyxDQUFDLEtBQUssRUFDakIsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQ2xCLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUNsQixLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDbkMsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDOztnQkE5QmlDLG9CQUFvQjtnQkFBa0IsTUFBTTs7O0lBUHJFLGtDQUFrQztRQUg5QyxVQUFVLENBQUM7WUFDUixVQUFVLEVBQUUsTUFBTTtTQUNyQixDQUFDO09BQ1csa0NBQWtDLENBc0M5Qzs2Q0FuREQ7Q0FtREMsQUF0Q0QsSUFzQ0M7U0F0Q1ksa0NBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIdHRwRXJyb3JSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE5vdGlmaWNhdGlvblByb3ZpZGVyIH0gZnJvbSAnLi4vcHJvdmlkZXJzL25vdGlmaWNhdGlvbi5wcm92aWRlcic7XG5pbXBvcnQgeyBBcHBsaWNhdGlvblByb2JsZW1UeXBlIH0gZnJvbSAnLi4vdHlwZXMvYXBwbGljYXRpb24tcHJvYmxlbS50eXBlJztcbmltcG9ydCB7IEVycm9yUHJvdmlkZXIgfSBmcm9tICcuLi9wcm92aWRlcnMvZXJyb3IucHJvdmlkZXInO1xuXG4vKipcbiAqIFNlcnZpw6dvIEh0dHBBcHBsaWNhdGlvblByb2JsZW1FcnJvclNlcnZpY2VcbiAqIEBjbGFzc1xuICovXG5ASW5qZWN0YWJsZSh7XG4gICAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBIdHRwQXBwbGljYXRpb25Qcm9ibGVtRXJyb3JTZXJ2aWNlIGltcGxlbWVudHMgRXJyb3JQcm92aWRlciB7XG5cbiAgICAvKipcbiAgICAgKiBNZXRvZG8gY29uc3RydXRvciByZXNwb25zw6F2ZWwgcG9yIGluamV0YXIgc2VydmnDp28gTm90aWZpY2F0aW9uUHJvdmlkZXJcbiAgICAgKiBAcGFyYW0ge05vdGlmaWNhdGlvblByb3ZpZGVyfSBub3RpZmljYXRpb25cbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5vdGlmaWNhdGlvbjogTm90aWZpY2F0aW9uUHJvdmlkZXIsIHByaXZhdGUgbmdab25lOiBOZ1pvbmUpIHsgfVxuXG4gICAgLyoqXG4gICAgICogTWV0b2RvIHJlc3BvbnPDoXZlbCBwZWxhIGlkZW50aWZpY2HDp8OjbyBkZSBlcnJvc1xuICAgICAqIEBwdWJsaWMgXG4gICAgICogQHBhcmFtIHtFcnJvciB8IEh0dHBFcnJvclJlc3BvbnNlfSBlcnJvclxuICAgICAqIEByZXR1cm5zIEJvb2xlYW5cbiAgICAgKi9cbiAgICBzaG91bGRIYW5kbGUoZXJyb3I6IEVycm9yIHwgSHR0cEVycm9yUmVzcG9uc2UpOiBCb29sZWFuIHtcbiAgICAgICAgcmV0dXJuIGVycm9yIGluc3RhbmNlb2YgSHR0cEVycm9yUmVzcG9uc2UgJiYgXG4gICAgICAgICAgICBlcnJvci5oZWFkZXJzLmdldCgnQ29udGVudC1UeXBlJykgPT09ICdhcHBsaWNhdGlvbi9wcm9ibGVtK2pzb24nICYmIFxuICAgICAgICAgICAgZXJyb3IuZXJyb3I7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTWV0b2RvIHBlbGEgYWRpw6fDo28gZGUgZXJyb3NcbiAgICAgKiBAcHVibGljIFxuICAgICAqIEBwYXJhbSB7SHR0cEVycm9yUmVzcG9uc2V9IGVycm9yXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIGhhbmRsZShlcnJvcjogSHR0cEVycm9yUmVzcG9uc2UpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5uZ1pvbmUucnVuKCgpID0+IHsgXG4gICAgICAgICAgICB0aGlzLm5vdGlmaWNhdGlvbi5hZGRFcnJvclByb2JsZW0oXG4gICAgICAgICAgICAgICAgbmV3IEFwcGxpY2F0aW9uUHJvYmxlbVR5cGUoXG4gICAgICAgICAgICAgICAgICAgIGVycm9yLmVycm9yLnR5cGUsXG4gICAgICAgICAgICAgICAgICAgIGVycm9yLmVycm9yLnRpdGxlLFxuICAgICAgICAgICAgICAgICAgICBlcnJvci5lcnJvci5kZXRhaWwsXG4gICAgICAgICAgICAgICAgICAgIGVycm9yLmVycm9yLnN0YXR1cyxcbiAgICAgICAgICAgICAgICAgICAgZXJyb3IuZXJyb3IuaW5zdGFuY2UpKTtcbiAgICAgICAgfSk7XG4gICAgfVxufSJdfQ==