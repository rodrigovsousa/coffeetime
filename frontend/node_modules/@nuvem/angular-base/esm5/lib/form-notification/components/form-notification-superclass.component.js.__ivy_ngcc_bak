import { __decorate } from "tslib";
import { FormNotificationService } from '../services/form-notification.service';
import { Directive, Input } from "@angular/core";
import { FieldFormNotification } from '../types/field-form-notification.type';
var FormNotificationComponentSuperclass = /** @class */ (function () {
    /**
     * Metodo construtor responsavel por carregar o serviço de validação
     * @param formNotificationService
     */
    function FormNotificationComponentSuperclass(formNotificationService) {
        this.formNotificationService = formNotificationService;
    }
    /**
     * Metodo Inicial para subscrição no endpoint responsável por validar o formulário
     */
    FormNotificationComponentSuperclass.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.formNotificationService
            .notifications(this.form, this.name)
            .subscribe(function (notification) {
            if (notification instanceof FieldFormNotification) {
                _this.message = notification.message;
            }
            else {
                _this.message = null;
            }
        });
    };
    /**
     * Metodo responsavel por realizar a saida das subscrições do endpont de validação
     */
    FormNotificationComponentSuperclass.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    FormNotificationComponentSuperclass.ctorParameters = function () { return [
        { type: FormNotificationService }
    ]; };
    __decorate([
        Input()
    ], FormNotificationComponentSuperclass.prototype, "name", void 0);
    __decorate([
        Input()
    ], FormNotificationComponentSuperclass.prototype, "form", void 0);
    FormNotificationComponentSuperclass = __decorate([
        Directive({
            selector: 'form-notification-component-superclass'
        })
    ], FormNotificationComponentSuperclass);
    return FormNotificationComponentSuperclass;
}());
export { FormNotificationComponentSuperclass };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1ub3RpZmljYXRpb24tc3VwZXJjbGFzcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbnV2ZW0vYW5ndWxhci1iYXNlLyIsInNvdXJjZXMiOlsibGliL2Zvcm0tbm90aWZpY2F0aW9uL2NvbXBvbmVudHMvZm9ybS1ub3RpZmljYXRpb24tc3VwZXJjbGFzcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUdwRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUs5RTtJQVVJOzs7T0FHRztJQUNILDZDQUFzQix1QkFBZ0Q7UUFBaEQsNEJBQXVCLEdBQXZCLHVCQUF1QixDQUF5QjtJQUFHLENBQUM7SUFFMUU7O09BRUc7SUFDSCxzREFBUSxHQUFSO1FBQUEsaUJBVUM7UUFURyxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyx1QkFBdUI7YUFDM0MsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQzthQUNuQyxTQUFTLENBQUMsVUFBQyxZQUE4QjtZQUN0QyxJQUFJLFlBQVksWUFBWSxxQkFBcUIsRUFBRTtnQkFDL0MsS0FBSSxDQUFDLE9BQU8sR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDO2FBQ3ZDO2lCQUFNO2dCQUNILEtBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO2FBQ3ZCO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDWCxDQUFDO0lBRUQ7O09BRUc7SUFDSCx5REFBVyxHQUFYO1FBQ0ksSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNwQyxDQUFDOztnQkF0QjhDLHVCQUF1Qjs7SUFWN0Q7UUFBUixLQUFLLEVBQUU7cUVBQWM7SUFFYjtRQUFSLEtBQUssRUFBRTtxRUFBYztJQU5iLG1DQUFtQztRQUgvQyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsd0NBQXdDO1NBQ3JELENBQUM7T0FDVyxtQ0FBbUMsQ0FzQy9DO0lBQUQsMENBQUM7Q0FBQSxBQXRDRCxJQXNDQztTQXRDWSxtQ0FBbUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGb3JtTm90aWZpY2F0aW9uU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL2Zvcm0tbm90aWZpY2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgRGlyZWN0aXZlLCBPbkluaXQsIE9uRGVzdHJveSwgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSBcInJ4anNcIjtcbmltcG9ydCB7IEZvcm1Ob3RpZmljYXRpb24gfSBmcm9tICcuLi90eXBlcy9mb3JtLW5vdGlmaWNhdGlvbi50eXBlJztcbmltcG9ydCB7IEZpZWxkRm9ybU5vdGlmaWNhdGlvbiB9IGZyb20gJy4uL3R5cGVzL2ZpZWxkLWZvcm0tbm90aWZpY2F0aW9uLnR5cGUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ2Zvcm0tbm90aWZpY2F0aW9uLWNvbXBvbmVudC1zdXBlcmNsYXNzJ1xufSlcbmV4cG9ydCBjbGFzcyBGb3JtTm90aWZpY2F0aW9uQ29tcG9uZW50U3VwZXJjbGFzcyBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcblxuICAgIHByaXZhdGUgc3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG5cbiAgICBASW5wdXQoKSBuYW1lOiBTdHJpbmc7XG5cbiAgICBASW5wdXQoKSBmb3JtOiBTdHJpbmc7XG5cbiAgICBtZXNzYWdlOiBTdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBNZXRvZG8gY29uc3RydXRvciByZXNwb25zYXZlbCBwb3IgY2FycmVnYXIgbyBzZXJ2acOnbyBkZSB2YWxpZGHDp8Ojb1xuICAgICAqIEBwYXJhbSBmb3JtTm90aWZpY2F0aW9uU2VydmljZVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBmb3JtTm90aWZpY2F0aW9uU2VydmljZTogRm9ybU5vdGlmaWNhdGlvblNlcnZpY2UpIHt9XG5cbiAgICAvKipcbiAgICAgKiBNZXRvZG8gSW5pY2lhbCBwYXJhIHN1YnNjcmnDp8OjbyBubyBlbmRwb2ludCByZXNwb25zw6F2ZWwgcG9yIHZhbGlkYXIgbyBmb3JtdWzDoXJpb1xuICAgICAqL1xuICAgIG5nT25Jbml0KCk6IHZvaWQge1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbiA9IHRoaXMuZm9ybU5vdGlmaWNhdGlvblNlcnZpY2VcbiAgICAgICAgICAgIC5ub3RpZmljYXRpb25zKHRoaXMuZm9ybSwgdGhpcy5uYW1lKVxuICAgICAgICAgICAgLnN1YnNjcmliZSgobm90aWZpY2F0aW9uOiBGb3JtTm90aWZpY2F0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKG5vdGlmaWNhdGlvbiBpbnN0YW5jZW9mIEZpZWxkRm9ybU5vdGlmaWNhdGlvbikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1lc3NhZ2UgPSBub3RpZmljYXRpb24ubWVzc2FnZTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1lc3NhZ2UgPSBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE1ldG9kbyByZXNwb25zYXZlbCBwb3IgcmVhbGl6YXIgYSBzYWlkYSBkYXMgc3Vic2NyacOnw7VlcyBkbyBlbmRwb250IGRlIHZhbGlkYcOnw6NvXG4gICAgICovXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgfVxuXG59XG4iXX0=