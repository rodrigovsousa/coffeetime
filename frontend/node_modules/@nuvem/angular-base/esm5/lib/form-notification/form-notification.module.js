import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { FormNotificationErrorProvider } from './services/form-notification-error-provider.service';
import { FormNotificationService } from './services/form-notification.service';
import { ErrorProvider } from '../error/providers/error.provider';
import { CommonModule } from '@angular/common';
import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { FormNotificationInterceptor } from './interceptor/form-notification.interceptor';
import { FormNotificationComponentSuperclass } from './components/form-notification-superclass.component';
/**
 * Módulo para adicionar funcionalidade de notificação de erros de formulários.
 * @module
 */
var FormNotificationBaseModule = /** @class */ (function () {
    function FormNotificationBaseModule() {
    }
    FormNotificationBaseModule = __decorate([
        NgModule({
            imports: [
                CommonModule
            ],
            declarations: [FormNotificationComponentSuperclass],
            exports: [FormNotificationComponentSuperclass],
            providers: [
                FormNotificationService,
                {
                    provide: ErrorProvider,
                    useClass: FormNotificationErrorProvider,
                    multi: true,
                },
                {
                    provide: HTTP_INTERCEPTORS,
                    useClass: FormNotificationInterceptor,
                    multi: true,
                },
            ],
        })
    ], FormNotificationBaseModule);
    return FormNotificationBaseModule;
}());
export { FormNotificationBaseModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1ub3RpZmljYXRpb24ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG51dmVtL2FuZ3VsYXItYmFzZS8iLCJzb3VyY2VzIjpbImxpYi9mb3JtLW5vdGlmaWNhdGlvbi9mb3JtLW5vdGlmaWNhdGlvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0scURBQXFELENBQUM7QUFDcEcsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDL0UsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUMxRixPQUFPLEVBQUUsbUNBQW1DLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUUxRzs7O0dBR0c7QUFxQkg7SUFBQTtJQUEwQyxDQUFDO0lBQTlCLDBCQUEwQjtRQXBCdEMsUUFBUSxDQUFDO1lBQ04sT0FBTyxFQUFFO2dCQUNMLFlBQVk7YUFDZjtZQUNELFlBQVksRUFBRSxDQUFFLG1DQUFtQyxDQUFFO1lBQ3JELE9BQU8sRUFBRSxDQUFFLG1DQUFtQyxDQUFDO1lBQy9DLFNBQVMsRUFBRTtnQkFDUCx1QkFBdUI7Z0JBQ3ZCO29CQUNJLE9BQU8sRUFBRSxhQUFhO29CQUN0QixRQUFRLEVBQUUsNkJBQTZCO29CQUN2QyxLQUFLLEVBQUUsSUFBSTtpQkFDZDtnQkFDRDtvQkFDSSxPQUFPLEVBQUUsaUJBQWlCO29CQUMxQixRQUFRLEVBQUUsMkJBQTJCO29CQUNyQyxLQUFLLEVBQUUsSUFBSTtpQkFDZDthQUNKO1NBQ0osQ0FBQztPQUNXLDBCQUEwQixDQUFJO0lBQUQsaUNBQUM7Q0FBQSxBQUEzQyxJQUEyQztTQUE5QiwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybU5vdGlmaWNhdGlvbkVycm9yUHJvdmlkZXIgfSBmcm9tICcuL3NlcnZpY2VzL2Zvcm0tbm90aWZpY2F0aW9uLWVycm9yLXByb3ZpZGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgRm9ybU5vdGlmaWNhdGlvblNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2Zvcm0tbm90aWZpY2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgRXJyb3JQcm92aWRlciB9IGZyb20gJy4uL2Vycm9yL3Byb3ZpZGVycy9lcnJvci5wcm92aWRlcic7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgSFRUUF9JTlRFUkNFUFRPUlMgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBGb3JtTm90aWZpY2F0aW9uSW50ZXJjZXB0b3IgfSBmcm9tICcuL2ludGVyY2VwdG9yL2Zvcm0tbm90aWZpY2F0aW9uLmludGVyY2VwdG9yJztcbmltcG9ydCB7IEZvcm1Ob3RpZmljYXRpb25Db21wb25lbnRTdXBlcmNsYXNzIH0gZnJvbSAnLi9jb21wb25lbnRzL2Zvcm0tbm90aWZpY2F0aW9uLXN1cGVyY2xhc3MuY29tcG9uZW50JztcblxuLyoqXG4gKiBNw7NkdWxvIHBhcmEgYWRpY2lvbmFyIGZ1bmNpb25hbGlkYWRlIGRlIG5vdGlmaWNhw6fDo28gZGUgZXJyb3MgZGUgZm9ybXVsw6FyaW9zLlxuICogQG1vZHVsZVxuICovXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtcbiAgICAgICAgQ29tbW9uTW9kdWxlXG4gICAgXSxcbiAgICBkZWNsYXJhdGlvbnM6IFsgRm9ybU5vdGlmaWNhdGlvbkNvbXBvbmVudFN1cGVyY2xhc3MgXSxcbiAgICBleHBvcnRzOiBbIEZvcm1Ob3RpZmljYXRpb25Db21wb25lbnRTdXBlcmNsYXNzXSxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgRm9ybU5vdGlmaWNhdGlvblNlcnZpY2UsXG4gICAgICAgIHtcbiAgICAgICAgICAgIHByb3ZpZGU6IEVycm9yUHJvdmlkZXIsXG4gICAgICAgICAgICB1c2VDbGFzczogRm9ybU5vdGlmaWNhdGlvbkVycm9yUHJvdmlkZXIsXG4gICAgICAgICAgICBtdWx0aTogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogSFRUUF9JTlRFUkNFUFRPUlMsXG4gICAgICAgICAgICB1c2VDbGFzczogRm9ybU5vdGlmaWNhdGlvbkludGVyY2VwdG9yLFxuICAgICAgICAgICAgbXVsdGk6IHRydWUsXG4gICAgICAgIH0sXG4gICAgXSxcbn0pXG5leHBvcnQgY2xhc3MgRm9ybU5vdGlmaWNhdGlvbkJhc2VNb2R1bGUgeyB9XG4iXX0=