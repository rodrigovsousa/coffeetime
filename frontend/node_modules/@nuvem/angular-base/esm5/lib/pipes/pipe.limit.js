import { __decorate } from "tslib";
import { Pipe } from '@angular/core';
/**
 *
 * Cria PIPE para valores com restrição de valores a serem apresentados.
 *
 * Usage:
 * {{ value | limit:20 }}
 * {{ value | limit:20:"..." }}
*/
import * as ɵngcc0 from '@angular/core';
var LimitPipe = /** @class */ (function () {
    function LimitPipe() {
    }
    LimitPipe.prototype.transform = function (value, limit, ellipsis) {
        if (limit === void 0) { limit = 25; }
        if (ellipsis === void 0) { ellipsis = '...'; }
        return value.length > limit
            ? "" + value.substr(0, limit) + ellipsis
            : value;
    };
LimitPipe.ɵfac = function LimitPipe_Factory(t) { return new (t || LimitPipe)(); };
LimitPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "limit", type: LimitPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LimitPipe, [{
        type: Pipe,
        args: [{
                name: 'limit'
            }]
    }], function () { return []; }, null); })();
    return LimitPipe;
}());
export { LimitPipe };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGlwZS5saW1pdC5qcyIsInNvdXJjZXMiOlsibmc6L0BudXZlbS9hbmd1bGFyLWJhc2UvbGliL3BpcGVzL3BpcGUubGltaXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRXBEO0FBQ0E7QUFDQTtBQUNBO0FBQUc7QUFDTTtBQUNnQjtBQUNNLEVBQzdCOztBQU1GO0FBQTZDLElBQTdDO0FBQXVCLElBT3ZCLENBQUM7QUFDRCxJQU5JLDZCQUFTLEdBQVQsVUFBVSxLQUFhLEVBQUUsS0FBVSxFQUFFLFFBQWdCO0FBQ3pELFFBRDZCLHNCQUFBLEVBQUEsVUFBVTtBQUFJLFFBQUYseUJBQUEsRUFBQSxnQkFBZ0I7QUFDekQsUUFBUSxPQUFPLEtBQUssQ0FBQyxNQUFNLEdBQUcsS0FBSztBQUNuQyxZQUFZLENBQUMsQ0FBQyxLQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxHQUFHLFFBQVU7QUFDcEQsWUFBWSxDQUFDLENBQUMsS0FBSyxDQUFDO0FBQ3BCLElBQUksQ0FBQztJQU5RLFNBQVMsd0JBSnJCLElBQUksQ0FBQyxjQUNGLElBQUksRUFBRSxPQUFPLFVBQ2hCLENBQUM7S0FFVyxTQUFTLENBT3JCOzs7Ozs7Z0RBQ0Q7QUFBQyxJQURELGdCQUFDO0FBQ0EsQ0FEQSxBQVBELElBT0M7QUFDRCxTQVJhLFNBQVM7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKlxuICogQ3JpYSBQSVBFIHBhcmEgdmFsb3JlcyBjb20gcmVzdHJpw6fDo28gZGUgdmFsb3JlcyBhIHNlcmVtIGFwcmVzZW50YWRvcy5cbiAqIFxuICogVXNhZ2U6XG4gKiB7eyB2YWx1ZSB8IGxpbWl0OjIwIH19XG4gKiB7eyB2YWx1ZSB8IGxpbWl0OjIwOlwiLi4uXCIgfX1cbiovXG5cbkBQaXBlKHtcbiAgICBuYW1lOiAnbGltaXQnXG59KVxuXG5leHBvcnQgY2xhc3MgTGltaXRQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG5cbiAgICB0cmFuc2Zvcm0odmFsdWU6IHN0cmluZywgbGltaXQgPSAyNSwgZWxsaXBzaXMgPSAnLi4uJykge1xuICAgICAgICByZXR1cm4gdmFsdWUubGVuZ3RoID4gbGltaXRcbiAgICAgICAgICAgID8gYCR7dmFsdWUuc3Vic3RyKDAsIGxpbWl0KX0ke2VsbGlwc2lzfWBcbiAgICAgICAgICAgIDogdmFsdWU7XG4gICAgfVxufVxuIl19