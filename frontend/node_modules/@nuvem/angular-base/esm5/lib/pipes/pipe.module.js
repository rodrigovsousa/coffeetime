import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { CpfPipe } from './cpf.pipe';
import { CepPipe } from './cep.pipe';
import { CnpjPipe } from './cnpj.pipe';
import { RegexPipe } from './pipe.regex';
import { LimitPipe } from './pipe.limit';
/**
 *
 *  Export do módulo
 */
import * as ɵngcc0 from '@angular/core';
var PipeModule = /** @class */ (function () {
    function PipeModule() {
    }
PipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PipeModule });
PipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PipeModule_Factory(t) { return new (t || PipeModule)(); }, imports: [[]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PipeModule, { declarations: function () { return [CepPipe,
        CpfPipe,
        CnpjPipe,
        RegexPipe,
        LimitPipe]; }, exports: function () { return [CepPipe,
        CpfPipe,
        CnpjPipe,
        RegexPipe,
        LimitPipe]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PipeModule, [{
        type: NgModule,
        args: [{
                imports: [],
                declarations: [
                    CepPipe,
                    CpfPipe,
                    CnpjPipe,
                    RegexPipe,
                    LimitPipe,
                ],
                exports: [
                    CepPipe,
                    CpfPipe,
                    CnpjPipe,
                    RegexPipe,
                    LimitPipe,
                ]
            }]
    }], function () { return []; }, null); })();
    return PipeModule;
}());
export { PipeModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGlwZS5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIm5nOi9AbnV2ZW0vYW5ndWxhci1iYXNlL2xpYi9waXBlcy9waXBlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN2QyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFFekM7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFrQkg7QUFDbUIsSUFEbkI7QUFBd0IsSUFBQyxDQUFDO0lBQWIsVUFBVSx3QkFqQnRCLFFBQVEsQ0FBQyxjQUNOO0dBQU8sRUFBRSxFQUFFLGNBQ1gsWUFBWSxFQUFFLGtCQUNWLE9BQU8sa0JBQ1AsT0FBTyxrQkFDUCxRQUFRLGtCQUNSLFNBQVM7aUJBQ1QsU0FBUyxlQUNaLGNBQ0QsT0FBTyxFQUFFLGtCQUNMLE9BQU8sa0JBQ1AsT0FBTyxrQkFDUCxRQUFRO09BQ1IsU0FBUztpQkFDVDtRQUFTO0lBQ1osVUFDSixDQUFDLFFBQ1csVUFBVSxDQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0RBQzFCO0FBQUMsSUFEd0IsaUJBQUM7QUFDekIsQ0FEeUIsQUFBMUIsSUFBMEI7QUFDMUIsU0FEYSxVQUFVO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ3BmUGlwZSB9IGZyb20gJy4vY3BmLnBpcGUnO1xuaW1wb3J0IHsgQ2VwUGlwZSB9IGZyb20gJy4vY2VwLnBpcGUnO1xuaW1wb3J0IHsgQ25walBpcGUgfSBmcm9tICcuL2NucGoucGlwZSc7XG5pbXBvcnQgeyBSZWdleFBpcGUgfSBmcm9tICcuL3BpcGUucmVnZXgnO1xuaW1wb3J0IHsgTGltaXRQaXBlIH0gZnJvbSAnLi9waXBlLmxpbWl0JztcblxuLyoqXG4gKlxuICogIEV4cG9ydCBkbyBtw7NkdWxvXG4gKi9cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW10sXG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIENlcFBpcGUsXG4gICAgICAgIENwZlBpcGUsXG4gICAgICAgIENucGpQaXBlLFxuICAgICAgICBSZWdleFBpcGUsXG4gICAgICAgIExpbWl0UGlwZSxcbiAgICBdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgQ2VwUGlwZSxcbiAgICAgICAgQ3BmUGlwZSxcbiAgICAgICAgQ25walBpcGUsXG4gICAgICAgIFJlZ2V4UGlwZSxcbiAgICAgICAgTGltaXRQaXBlLFxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgUGlwZU1vZHVsZSB7fVxuIl19