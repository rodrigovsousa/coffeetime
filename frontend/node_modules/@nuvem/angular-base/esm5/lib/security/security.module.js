import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { LogoutDirective } from './authentication/logout.directive';
import { UserDirective } from './authentication/user.directive';
import { LoginSuccessComponent } from './authentication/login-success.component';
import { HasRoleDirective } from './authentication/authorization/has-role.directive';
import { RouterModule } from '@angular/router';
import { HttpClientModule } from '@angular/common/http';
import { HideWhileLoginComponent } from './authentication/hide-while-login.component';
import { AUTH_CONFIG } from './config/auth-config';
import { AuthorizationService } from './authentication/authorization/authorization.service';
import { AuthenticationService } from './authentication/authentication.service';
import { Authorization } from './authentication/authorization/authorization';
import { Authentication } from './authentication/authentication';
import { NotAuthenticatedErrorProvider } from './authentication/not-authenticated-error-provider.service';
import { ErrorProvider } from '../error/providers/error.provider';
import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { JWTAuthInterceptor } from './token/jwt-auth.interceptor';
import { Token } from './token/token';
import { JWTTokenService } from './token/jwt-token.service';
/**
 * O modulo de segurança contem funcionalidades para autenticação, autorização, redirecionamento
 * para login, gerenciamento de tokens JWT e obtenção e armazenamento de dados de usuário.
 * @class
 */
var SecurityModule = /** @class */ (function () {
    function SecurityModule() {
    }
    SecurityModule_1 = SecurityModule;
    /**
     * forRoot method
     * @public
     * @static
     * @returns ModuleWithProviders
     */
    SecurityModule.forRoot = function (config) {
        return {
            ngModule: SecurityModule_1,
            providers: [
                { provide: AUTH_CONFIG, useValue: config },
                config.tokenStorageIndex ?
                    [
                        { provide: Token, useClass: JWTTokenService },
                        { provide: HTTP_INTERCEPTORS, useClass: JWTAuthInterceptor, multi: true }
                    ] : []
            ]
        };
    };
    var SecurityModule_1;
    SecurityModule = SecurityModule_1 = __decorate([
        NgModule({
            imports: [
                CommonModule,
                RouterModule,
                HttpClientModule
            ],
            declarations: [
                LogoutDirective,
                UserDirective,
                LoginSuccessComponent,
                HasRoleDirective,
                HideWhileLoginComponent
            ],
            providers: [
                AuthorizationService,
                AuthenticationService,
                { provide: ErrorProvider, useClass: NotAuthenticatedErrorProvider, multi: true },
                { provide: Authorization, useClass: AuthorizationService },
                { provide: Authentication, useClass: AuthenticationService }
            ],
            exports: [
                LogoutDirective,
                UserDirective,
                LoginSuccessComponent,
                HasRoleDirective,
                HideWhileLoginComponent
            ]
        })
    ], SecurityModule);
    return SecurityModule;
}());
export { SecurityModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VjdXJpdHkubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG51dmVtL2FuZ3VsYXItYmFzZS8iLCJzb3VyY2VzIjpbImxpYi9zZWN1cml0eS9zZWN1cml0eS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDcEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQ2pGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUN0RixPQUFPLEVBQUUsV0FBVyxFQUFjLE1BQU0sc0JBQXNCLENBQUM7QUFDL0QsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sc0RBQXNELENBQUM7QUFDNUYsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDaEYsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNqRSxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSwyREFBMkQsQ0FBQztBQUMxRyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDbEUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDekQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDbEUsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN0QyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFNUQ7Ozs7R0FJRztBQTZCSDtJQUFBO0lBc0JBLENBQUM7dUJBdEJZLGNBQWM7SUFFdkI7Ozs7O09BS0c7SUFDSSxzQkFBTyxHQUFkLFVBQWUsTUFBa0I7UUFDN0IsT0FBTztZQUNILFFBQVEsRUFBRSxnQkFBYztZQUN4QixTQUFTLEVBQUU7Z0JBQ1AsRUFBRSxPQUFPLEVBQUUsV0FBVyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUU7Z0JBQzFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO29CQUN4Qjt3QkFDRSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLGVBQWUsRUFBRTt3QkFDN0MsRUFBRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsUUFBUSxFQUFFLGtCQUFrQixFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUU7cUJBQzFFLENBQUMsQ0FBQyxDQUFDLEVBQUU7YUFDWDtTQUNKLENBQUM7SUFDTixDQUFDOztJQXBCUSxjQUFjO1FBNUIxQixRQUFRLENBQUM7WUFDTixPQUFPLEVBQUU7Z0JBQ0wsWUFBWTtnQkFDWixZQUFZO2dCQUNaLGdCQUFnQjthQUNuQjtZQUNELFlBQVksRUFBRTtnQkFDVixlQUFlO2dCQUNmLGFBQWE7Z0JBQ2IscUJBQXFCO2dCQUNyQixnQkFBZ0I7Z0JBQ2hCLHVCQUF1QjthQUMxQjtZQUNELFNBQVMsRUFBRTtnQkFDUCxvQkFBb0I7Z0JBQ3BCLHFCQUFxQjtnQkFDckIsRUFBRSxPQUFPLEVBQUUsYUFBYSxFQUFFLFFBQVEsRUFBRSw2QkFBNkIsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFO2dCQUNoRixFQUFFLE9BQU8sRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFFLG9CQUFvQixFQUFFO2dCQUMxRCxFQUFFLE9BQU8sRUFBRSxjQUFjLEVBQUUsUUFBUSxFQUFFLHFCQUFxQixFQUFFO2FBQy9EO1lBQ0QsT0FBTyxFQUFFO2dCQUNMLGVBQWU7Z0JBQ2YsYUFBYTtnQkFDYixxQkFBcUI7Z0JBQ3JCLGdCQUFnQjtnQkFDaEIsdUJBQXVCO2FBQzFCO1NBQ0osQ0FBQztPQUNXLGNBQWMsQ0FzQjFCO0lBQUQscUJBQUM7Q0FBQSxBQXRCRCxJQXNCQztTQXRCWSxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBMb2dvdXREaXJlY3RpdmUgfSBmcm9tICcuL2F1dGhlbnRpY2F0aW9uL2xvZ291dC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgVXNlckRpcmVjdGl2ZSB9IGZyb20gJy4vYXV0aGVudGljYXRpb24vdXNlci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTG9naW5TdWNjZXNzQ29tcG9uZW50IH0gZnJvbSAnLi9hdXRoZW50aWNhdGlvbi9sb2dpbi1zdWNjZXNzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBIYXNSb2xlRGlyZWN0aXZlIH0gZnJvbSAnLi9hdXRoZW50aWNhdGlvbi9hdXRob3JpemF0aW9uL2hhcy1yb2xlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgSHR0cENsaWVudE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IEhpZGVXaGlsZUxvZ2luQ29tcG9uZW50IH0gZnJvbSAnLi9hdXRoZW50aWNhdGlvbi9oaWRlLXdoaWxlLWxvZ2luLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBVVRIX0NPTkZJRywgQXV0aENvbmZpZyB9IGZyb20gJy4vY29uZmlnL2F1dGgtY29uZmlnJztcbmltcG9ydCB7IEF1dGhvcml6YXRpb25TZXJ2aWNlIH0gZnJvbSAnLi9hdXRoZW50aWNhdGlvbi9hdXRob3JpemF0aW9uL2F1dGhvcml6YXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBBdXRoZW50aWNhdGlvblNlcnZpY2UgfSBmcm9tICcuL2F1dGhlbnRpY2F0aW9uL2F1dGhlbnRpY2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgQXV0aG9yaXphdGlvbiB9IGZyb20gJy4vYXV0aGVudGljYXRpb24vYXV0aG9yaXphdGlvbi9hdXRob3JpemF0aW9uJztcbmltcG9ydCB7IEF1dGhlbnRpY2F0aW9uIH0gZnJvbSAnLi9hdXRoZW50aWNhdGlvbi9hdXRoZW50aWNhdGlvbic7XG5pbXBvcnQgeyBOb3RBdXRoZW50aWNhdGVkRXJyb3JQcm92aWRlciB9IGZyb20gJy4vYXV0aGVudGljYXRpb24vbm90LWF1dGhlbnRpY2F0ZWQtZXJyb3ItcHJvdmlkZXIuc2VydmljZSc7XG5pbXBvcnQgeyBFcnJvclByb3ZpZGVyIH0gZnJvbSAnLi4vZXJyb3IvcHJvdmlkZXJzL2Vycm9yLnByb3ZpZGVyJztcbmltcG9ydCB7IEhUVFBfSU5URVJDRVBUT1JTIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgSldUQXV0aEludGVyY2VwdG9yIH0gZnJvbSAnLi90b2tlbi9qd3QtYXV0aC5pbnRlcmNlcHRvcic7XG5pbXBvcnQgeyBUb2tlbiB9IGZyb20gJy4vdG9rZW4vdG9rZW4nO1xuaW1wb3J0IHsgSldUVG9rZW5TZXJ2aWNlIH0gZnJvbSAnLi90b2tlbi9qd3QtdG9rZW4uc2VydmljZSc7XG5cbi8qKlxuICogTyBtb2R1bG8gZGUgc2VndXJhbsOnYSBjb250ZW0gZnVuY2lvbmFsaWRhZGVzIHBhcmEgYXV0ZW50aWNhw6fDo28sIGF1dG9yaXphw6fDo28sIHJlZGlyZWNpb25hbWVudG8gXG4gKiBwYXJhIGxvZ2luLCBnZXJlbmNpYW1lbnRvIGRlIHRva2VucyBKV1QgZSBvYnRlbsOnw6NvIGUgYXJtYXplbmFtZW50byBkZSBkYWRvcyBkZSB1c3XDoXJpby5cbiAqIEBjbGFzc1xuICovXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxuICAgICAgICBSb3V0ZXJNb2R1bGUsXG4gICAgICAgIEh0dHBDbGllbnRNb2R1bGVcbiAgICBdLFxuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBMb2dvdXREaXJlY3RpdmUsXG4gICAgICAgIFVzZXJEaXJlY3RpdmUsXG4gICAgICAgIExvZ2luU3VjY2Vzc0NvbXBvbmVudCxcbiAgICAgICAgSGFzUm9sZURpcmVjdGl2ZSxcbiAgICAgICAgSGlkZVdoaWxlTG9naW5Db21wb25lbnRcbiAgICBdLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICBBdXRob3JpemF0aW9uU2VydmljZSxcbiAgICAgICAgQXV0aGVudGljYXRpb25TZXJ2aWNlLFxuICAgICAgICB7IHByb3ZpZGU6IEVycm9yUHJvdmlkZXIsIHVzZUNsYXNzOiBOb3RBdXRoZW50aWNhdGVkRXJyb3JQcm92aWRlciwgbXVsdGk6IHRydWUgfSxcbiAgICAgICAgeyBwcm92aWRlOiBBdXRob3JpemF0aW9uLCB1c2VDbGFzczogQXV0aG9yaXphdGlvblNlcnZpY2UgfSxcbiAgICAgICAgeyBwcm92aWRlOiBBdXRoZW50aWNhdGlvbiwgdXNlQ2xhc3M6IEF1dGhlbnRpY2F0aW9uU2VydmljZSB9XG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIExvZ291dERpcmVjdGl2ZSxcbiAgICAgICAgVXNlckRpcmVjdGl2ZSxcbiAgICAgICAgTG9naW5TdWNjZXNzQ29tcG9uZW50LFxuICAgICAgICBIYXNSb2xlRGlyZWN0aXZlLFxuICAgICAgICBIaWRlV2hpbGVMb2dpbkNvbXBvbmVudFxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgU2VjdXJpdHlNb2R1bGUge1xuXG4gICAgLyoqXG4gICAgICogZm9yUm9vdCBtZXRob2RcbiAgICAgKiBAcHVibGljXG4gICAgICogQHN0YXRpY1xuICAgICAqIEByZXR1cm5zIE1vZHVsZVdpdGhQcm92aWRlcnNcbiAgICAgKi9cbiAgICBzdGF0aWMgZm9yUm9vdChjb25maWc6IEF1dGhDb25maWcpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcbiAgICAgICAgcmV0dXJuIHsgXG4gICAgICAgICAgICBuZ01vZHVsZTogU2VjdXJpdHlNb2R1bGUsIFxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgICAgICAgICAgeyBwcm92aWRlOiBBVVRIX0NPTkZJRywgdXNlVmFsdWU6IGNvbmZpZyB9LFxuICAgICAgICAgICAgICAgIGNvbmZpZy50b2tlblN0b3JhZ2VJbmRleCA/IFxuICAgICAgICAgICAgICAgICAgWyBcbiAgICAgICAgICAgICAgICAgICAgeyBwcm92aWRlOiBUb2tlbiwgdXNlQ2xhc3M6IEpXVFRva2VuU2VydmljZSB9LFxuICAgICAgICAgICAgICAgICAgICB7IHByb3ZpZGU6IEhUVFBfSU5URVJDRVBUT1JTLCB1c2VDbGFzczogSldUQXV0aEludGVyY2VwdG9yLCBtdWx0aTogdHJ1ZSB9XG4gICAgICAgICAgICAgICAgICBdIDogW11cbiAgICAgICAgICAgIF1cbiAgICAgICAgfTtcbiAgICB9XG5cbn1cbiJdfQ==