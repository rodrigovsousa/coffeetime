import { Observable } from 'rxjs';
import { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';
import { HttpInterceptor } from '@angular/common/http';
import { BlockUiService } from './block-ui.service';
/**
 * Class BlockUiInterceptor
 * @class
 */
import * as ɵngcc0 from '@angular/core';
export declare class BlockUiInterceptor implements HttpInterceptor {
    private service;
    /**
     * constructor method
     * @constructor
     * @param {BlockUiService} service
     */
    constructor(service: BlockUiService);
    /**
     * intercept method
     * @public
     * @param {HttpRequest<any>} req
     * @param {HttpHandler} next
     * @return Observable<HttpEvent<any>>
     */
    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
    /**
     * isMutation method
     * @private
     * @param {string} method
     * @return boolean
     */
    private isMutation;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BlockUiInterceptor, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxvY2stdWkuaW50ZXJjZXB0b3IuZC50cyIsInNvdXJjZXMiOlsiYmxvY2stdWkuaW50ZXJjZXB0b3IuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBIdHRwRXZlbnQsIEh0dHBIYW5kbGVyLCBIdHRwUmVxdWVzdCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IEh0dHBJbnRlcmNlcHRvciB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IEJsb2NrVWlTZXJ2aWNlIH0gZnJvbSAnLi9ibG9jay11aS5zZXJ2aWNlJztcbi8qKlxuICogQ2xhc3MgQmxvY2tVaUludGVyY2VwdG9yXG4gKiBAY2xhc3NcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQmxvY2tVaUludGVyY2VwdG9yIGltcGxlbWVudHMgSHR0cEludGVyY2VwdG9yIHtcbiAgICBwcml2YXRlIHNlcnZpY2U7XG4gICAgLyoqXG4gICAgICogY29uc3RydWN0b3IgbWV0aG9kXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtCbG9ja1VpU2VydmljZX0gc2VydmljZVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHNlcnZpY2U6IEJsb2NrVWlTZXJ2aWNlKTtcbiAgICAvKipcbiAgICAgKiBpbnRlcmNlcHQgbWV0aG9kXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSB7SHR0cFJlcXVlc3Q8YW55Pn0gcmVxXG4gICAgICogQHBhcmFtIHtIdHRwSGFuZGxlcn0gbmV4dFxuICAgICAqIEByZXR1cm4gT2JzZXJ2YWJsZTxIdHRwRXZlbnQ8YW55Pj5cbiAgICAgKi9cbiAgICBpbnRlcmNlcHQocmVxOiBIdHRwUmVxdWVzdDxhbnk+LCBuZXh0OiBIdHRwSGFuZGxlcik6IE9ic2VydmFibGU8SHR0cEV2ZW50PGFueT4+O1xuICAgIC8qKlxuICAgICAqIGlzTXV0YXRpb24gbWV0aG9kXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWV0aG9kXG4gICAgICogQHJldHVybiBib29sZWFuXG4gICAgICovXG4gICAgcHJpdmF0ZSBpc011dGF0aW9uO1xufVxuIl19