import { HttpErrorResponse } from '@angular/common/http';
import { FormNotificationService } from './form-notification.service';
import { ErrorProvider } from '../../error/providers/error.provider';
/**
 * Provedor de error para criação de erros de notificação.
 * @class
 */
import * as ɵngcc0 from '@angular/core';
export declare class FormNotificationErrorProvider implements ErrorProvider {
    private formNotificationService;
    /**
     * Método construtor
     * @param {FormtNotificationService} formNotificationService
     * @constructor
     */
    constructor(formNotificationService: FormNotificationService);
    /**
     * Método responsável pela identificação de erros
     * @public
     * @param {Error | HttpErrorResponse} error
     * @returns Boolean
     */
    shouldHandle(error: Error | HttpErrorResponse): Boolean;
    /**
     * Método para emissão de erros
     * @public
     * @param {HttpErrorResponse} error
     * @returns void
     */
    handle(error: HttpErrorResponse): void;
    /**
     * Método iteração de violações e emissão de erros
     * @param values
     */
    violation(form: string, values: ({
        field: string;
        message: string;
    })[]): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FormNotificationErrorProvider, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1ub3RpZmljYXRpb24tZXJyb3ItcHJvdmlkZXIuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJmb3JtLW5vdGlmaWNhdGlvbi1lcnJvci1wcm92aWRlci5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cEVycm9yUmVzcG9uc2UgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBGb3JtTm90aWZpY2F0aW9uU2VydmljZSB9IGZyb20gJy4vZm9ybS1ub3RpZmljYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBFcnJvclByb3ZpZGVyIH0gZnJvbSAnLi4vLi4vZXJyb3IvcHJvdmlkZXJzL2Vycm9yLnByb3ZpZGVyJztcbi8qKlxuICogUHJvdmVkb3IgZGUgZXJyb3IgcGFyYSBjcmlhw6fDo28gZGUgZXJyb3MgZGUgbm90aWZpY2HDp8Ojby5cbiAqIEBjbGFzc1xuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBGb3JtTm90aWZpY2F0aW9uRXJyb3JQcm92aWRlciBpbXBsZW1lbnRzIEVycm9yUHJvdmlkZXIge1xuICAgIHByaXZhdGUgZm9ybU5vdGlmaWNhdGlvblNlcnZpY2U7XG4gICAgLyoqXG4gICAgICogTcOpdG9kbyBjb25zdHJ1dG9yXG4gICAgICogQHBhcmFtIHtGb3JtdE5vdGlmaWNhdGlvblNlcnZpY2V9IGZvcm1Ob3RpZmljYXRpb25TZXJ2aWNlXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZm9ybU5vdGlmaWNhdGlvblNlcnZpY2U6IEZvcm1Ob3RpZmljYXRpb25TZXJ2aWNlKTtcbiAgICAvKipcbiAgICAgKiBNw6l0b2RvIHJlc3BvbnPDoXZlbCBwZWxhIGlkZW50aWZpY2HDp8OjbyBkZSBlcnJvc1xuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0ge0Vycm9yIHwgSHR0cEVycm9yUmVzcG9uc2V9IGVycm9yXG4gICAgICogQHJldHVybnMgQm9vbGVhblxuICAgICAqL1xuICAgIHNob3VsZEhhbmRsZShlcnJvcjogRXJyb3IgfCBIdHRwRXJyb3JSZXNwb25zZSk6IEJvb2xlYW47XG4gICAgLyoqXG4gICAgICogTcOpdG9kbyBwYXJhIGVtaXNzw6NvIGRlIGVycm9zXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSB7SHR0cEVycm9yUmVzcG9uc2V9IGVycm9yXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIGhhbmRsZShlcnJvcjogSHR0cEVycm9yUmVzcG9uc2UpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIE3DqXRvZG8gaXRlcmHDp8OjbyBkZSB2aW9sYcOnw7VlcyBlIGVtaXNzw6NvIGRlIGVycm9zXG4gICAgICogQHBhcmFtIHZhbHVlc1xuICAgICAqL1xuICAgIHZpb2xhdGlvbihmb3JtOiBzdHJpbmcsIHZhbHVlczogKHtcbiAgICAgICAgZmllbGQ6IHN0cmluZztcbiAgICAgICAgbWVzc2FnZTogc3RyaW5nO1xuICAgIH0pW10pOiB2b2lkO1xufVxuIl19