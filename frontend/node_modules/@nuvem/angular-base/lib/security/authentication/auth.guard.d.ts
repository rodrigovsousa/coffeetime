import { CanActivate, CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';
import { Authentication } from './authentication';
import { User } from './user';
/**
 * Guard que verifica se usuário está autenticado antes do usuário acessar uma rota.
 * Se for verificar que o usuário não está autenticado, é feito um redirecionamento para o login.
 * @class
 */
import * as ɵngcc0 from '@angular/core';
export declare class AuthGuard implements CanActivate, CanActivateChild {
    private authenticationService;
    /**
     * Método construtor responsável pela injeção do serviço de autenticação
     * @constructor
     * @param {Authentication} auth
     */
    constructor(authenticationService: Authentication<User>);
    /**
     * Método responsável por identificar se o usuário está autenticado
     * @public
     * @param {ActivatedRouteSnapshot} route
     * @param {RouterStateSnapshot} state
     * @returns boolean
     */
    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean;
    /**
     * Método responsável por atuar somente em rotas filhas de modo independente
     * @public
     * @param {ActivatedRouteSnapshot} route
     * @param {RouterStateSnapshot} state
     * @returns boolean
     */
    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AuthGuard, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC5ndWFyZC5kLnRzIiwic291cmNlcyI6WyJhdXRoLmd1YXJkLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYW5BY3RpdmF0ZSwgQ2FuQWN0aXZhdGVDaGlsZCwgQWN0aXZhdGVkUm91dGVTbmFwc2hvdCwgUm91dGVyU3RhdGVTbmFwc2hvdCB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBBdXRoZW50aWNhdGlvbiB9IGZyb20gJy4vYXV0aGVudGljYXRpb24nO1xuaW1wb3J0IHsgVXNlciB9IGZyb20gJy4vdXNlcic7XG4vKipcbiAqIEd1YXJkIHF1ZSB2ZXJpZmljYSBzZSB1c3XDoXJpbyBlc3TDoSBhdXRlbnRpY2FkbyBhbnRlcyBkbyB1c3XDoXJpbyBhY2Vzc2FyIHVtYSByb3RhLlxuICogU2UgZm9yIHZlcmlmaWNhciBxdWUgbyB1c3XDoXJpbyBuw6NvIGVzdMOhIGF1dGVudGljYWRvLCDDqSBmZWl0byB1bSByZWRpcmVjaW9uYW1lbnRvIHBhcmEgbyBsb2dpbi5cbiAqIEBjbGFzc1xuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBdXRoR3VhcmQgaW1wbGVtZW50cyBDYW5BY3RpdmF0ZSwgQ2FuQWN0aXZhdGVDaGlsZCB7XG4gICAgcHJpdmF0ZSBhdXRoZW50aWNhdGlvblNlcnZpY2U7XG4gICAgLyoqXG4gICAgICogTcOpdG9kbyBjb25zdHJ1dG9yIHJlc3BvbnPDoXZlbCBwZWxhIGluamXDp8OjbyBkbyBzZXJ2acOnbyBkZSBhdXRlbnRpY2HDp8Ojb1xuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBwYXJhbSB7QXV0aGVudGljYXRpb259IGF1dGhcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihhdXRoZW50aWNhdGlvblNlcnZpY2U6IEF1dGhlbnRpY2F0aW9uPFVzZXI+KTtcbiAgICAvKipcbiAgICAgKiBNw6l0b2RvIHJlc3BvbnPDoXZlbCBwb3IgaWRlbnRpZmljYXIgc2UgbyB1c3XDoXJpbyBlc3TDoSBhdXRlbnRpY2Fkb1xuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0ge0FjdGl2YXRlZFJvdXRlU25hcHNob3R9IHJvdXRlXG4gICAgICogQHBhcmFtIHtSb3V0ZXJTdGF0ZVNuYXBzaG90fSBzdGF0ZVxuICAgICAqIEByZXR1cm5zIGJvb2xlYW5cbiAgICAgKi9cbiAgICBjYW5BY3RpdmF0ZShyb3V0ZTogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCwgc3RhdGU6IFJvdXRlclN0YXRlU25hcHNob3QpOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIE3DqXRvZG8gcmVzcG9uc8OhdmVsIHBvciBhdHVhciBzb21lbnRlIGVtIHJvdGFzIGZpbGhhcyBkZSBtb2RvIGluZGVwZW5kZW50ZVxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0ge0FjdGl2YXRlZFJvdXRlU25hcHNob3R9IHJvdXRlXG4gICAgICogQHBhcmFtIHtSb3V0ZXJTdGF0ZVNuYXBzaG90fSBzdGF0ZVxuICAgICAqIEByZXR1cm5zIGJvb2xlYW5cbiAgICAgKi9cbiAgICBjYW5BY3RpdmF0ZUNoaWxkKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LCBzdGF0ZTogUm91dGVyU3RhdGVTbmFwc2hvdCk6IGJvb2xlYW47XG59XG4iXX0=