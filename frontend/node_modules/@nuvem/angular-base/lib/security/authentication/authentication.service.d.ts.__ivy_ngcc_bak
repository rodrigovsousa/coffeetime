import { AuthConfig } from '../config/auth-config';
import { Observable, BehaviorSubject } from 'rxjs';
import { User } from './user';
import { Authentication } from './authentication';
import { HttpClient } from '@angular/common/http';
export declare function isAuthenticated(config: AuthConfig): boolean;
export declare function redirect(config: AuthConfig): void;
/**
 * Serviço de autenticação
 * @class
 */
export declare class AuthenticationService<U extends User> extends Authentication<U> {
    private config;
    private http;
    loginNotifications: BehaviorSubject<User>;
    constructor(config: AuthConfig, http: HttpClient);
    /**
     * Método para verificar se o usuário esta autenticado na aplicação
     * @returns boolean
     * @public
     */
    isAuthenticated(): boolean;
    /**
     * Método responsável por realizar redirecionamentos
     * @returns void
     * @public
     */
    redirect(): void;
    /**
     * Método responsável pelo login da aplicação
     * @public
     * @param {User} user
     * @returns Observable<any>
     */
    login(): void;
    /**
     * Método responsável pelo logou da aplicação
     * @public
     * @returns void
     */
    logout(): void;
    /**
     * Método responsável por obter os dados do usuário logado
     * @public
     * @returns Observable<any>
     */
    getUserDetails(): Observable<U>;
    private setUser;
    getUser(): U;
    getLoginNotifications(): Observable<User>;
}
