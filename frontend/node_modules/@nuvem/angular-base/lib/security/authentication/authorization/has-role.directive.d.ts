import { TemplateRef, ViewContainerRef, OnDestroy } from '@angular/core';
import { Authorization } from './authorization';
import { Authentication } from '../authentication';
import { User } from '../user';
/**
 * HasRoleDirective diretiva para checagem da existência de permissões de acesso para o usuário logado.
 * @class
 */
import * as ɵngcc0 from '@angular/core';
export declare class HasRoleDirective implements OnDestroy {
    private templateRef;
    private viewContainer;
    private authorization;
    private authentication;
    private loginNotifications;
    /**
     * Método construtor responsável por carregar o serviço de autorização e serviço de identificação de mudança
     * @param {TemplateRef<any>} templateRef
     * @param {ViewContainerRef} viewContainer
     * @param {Authorization} authorization
     * @param {Authentication<User>} authentication
     */
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, authorization: Authorization, authentication: Authentication<User>);
    /**
     * Propriedade para identificar regras de acesso aos itens
     * @type {string}
     */
    set hasRole(hasRole: string | string[]);
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<HasRoleDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<HasRoleDirective, "[hasRole]", never, { "hasRole": "hasRole"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzLXJvbGUuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImhhcy1yb2xlLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUZW1wbGF0ZVJlZiwgVmlld0NvbnRhaW5lclJlZiwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBdXRob3JpemF0aW9uIH0gZnJvbSAnLi9hdXRob3JpemF0aW9uJztcbmltcG9ydCB7IEF1dGhlbnRpY2F0aW9uIH0gZnJvbSAnLi4vYXV0aGVudGljYXRpb24nO1xuaW1wb3J0IHsgVXNlciB9IGZyb20gJy4uL3VzZXInO1xuLyoqXG4gKiBIYXNSb2xlRGlyZWN0aXZlIGRpcmV0aXZhIHBhcmEgY2hlY2FnZW0gZGEgZXhpc3TDqm5jaWEgZGUgcGVybWlzc8O1ZXMgZGUgYWNlc3NvIHBhcmEgbyB1c3XDoXJpbyBsb2dhZG8uXG4gKiBAY2xhc3NcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSGFzUm9sZURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSB0ZW1wbGF0ZVJlZjtcbiAgICBwcml2YXRlIHZpZXdDb250YWluZXI7XG4gICAgcHJpdmF0ZSBhdXRob3JpemF0aW9uO1xuICAgIHByaXZhdGUgYXV0aGVudGljYXRpb247XG4gICAgcHJpdmF0ZSBsb2dpbk5vdGlmaWNhdGlvbnM7XG4gICAgLyoqXG4gICAgICogTcOpdG9kbyBjb25zdHJ1dG9yIHJlc3BvbnPDoXZlbCBwb3IgY2FycmVnYXIgbyBzZXJ2acOnbyBkZSBhdXRvcml6YcOnw6NvIGUgc2VydmnDp28gZGUgaWRlbnRpZmljYcOnw6NvIGRlIG11ZGFuw6dhXG4gICAgICogQHBhcmFtIHtUZW1wbGF0ZVJlZjxhbnk+fSB0ZW1wbGF0ZVJlZlxuICAgICAqIEBwYXJhbSB7Vmlld0NvbnRhaW5lclJlZn0gdmlld0NvbnRhaW5lclxuICAgICAqIEBwYXJhbSB7QXV0aG9yaXphdGlvbn0gYXV0aG9yaXphdGlvblxuICAgICAqIEBwYXJhbSB7QXV0aGVudGljYXRpb248VXNlcj59IGF1dGhlbnRpY2F0aW9uXG4gICAgICovXG4gICAgY29uc3RydWN0b3IodGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT4sIHZpZXdDb250YWluZXI6IFZpZXdDb250YWluZXJSZWYsIGF1dGhvcml6YXRpb246IEF1dGhvcml6YXRpb24sIGF1dGhlbnRpY2F0aW9uOiBBdXRoZW50aWNhdGlvbjxVc2VyPik7XG4gICAgLyoqXG4gICAgICogUHJvcHJpZWRhZGUgcGFyYSBpZGVudGlmaWNhciByZWdyYXMgZGUgYWNlc3NvIGFvcyBpdGVuc1xuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgc2V0IGhhc1JvbGUoaGFzUm9sZTogc3RyaW5nIHwgc3RyaW5nW10pO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG4iXX0=