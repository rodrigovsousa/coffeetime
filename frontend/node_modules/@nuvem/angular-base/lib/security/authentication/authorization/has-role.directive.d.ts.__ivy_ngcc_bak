import { TemplateRef, ViewContainerRef, OnDestroy } from '@angular/core';
import { Authorization } from './authorization';
import { Authentication } from '../authentication';
import { User } from '../user';
/**
 * HasRoleDirective diretiva para checagem da existência de permissões de acesso para o usuário logado.
 * @class
 */
export declare class HasRoleDirective implements OnDestroy {
    private templateRef;
    private viewContainer;
    private authorization;
    private authentication;
    private loginNotifications;
    /**
     * Método construtor responsável por carregar o serviço de autorização e serviço de identificação de mudança
     * @param {TemplateRef<any>} templateRef
     * @param {ViewContainerRef} viewContainer
     * @param {Authorization} authorization
     * @param {Authentication<User>} authentication
     */
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, authorization: Authorization, authentication: Authentication<User>);
    /**
     * Propriedade para identificar regras de acesso aos itens
     * @type {string}
     */
    set hasRole(hasRole: string | string[]);
    ngOnDestroy(): void;
}
