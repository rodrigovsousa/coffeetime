(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/common/http'),require('primeng'),require('@nuvem/angular-base'),require('@angular/common'),require('primeng/table'),require('primeng/api'),require('@angular/forms'),require('primeng/button'),require('primeng/dropdown'),require('primeng/toast'),require('@angular/router'),require('primeng/confirmdialog'),require('primeng/calendar'),require('primeng/inputtextarea'),require('primeng/inputmask'),require('primeng/radiobutton'),require('@angular/cdk/scrolling'),require('primeng/inputtext'),exports, require('@angular/common/http'), require('@angular/core'), require('@angular/common'), require('primeng'), require('primeng/table'), require('@nuvem/angular-base'), require('primeng/button'), require('primeng/dropdown'), require('@angular/forms'), require('rxjs'), require('rxjs/operators'), require('primeng/api'), require('primeng/toast'), require('@angular/router'), require('primeng/inputtext'), require('primeng/calendar'), require('primeng/inputtextarea'), require('primeng/inputmask'), require('primeng/radiobutton'), require('primeng/confirmdialog'), require('primeng/autocomplete'), require('@angular/cdk/scrolling'), require('@angular/animations')) :
    typeof define === 'function' && define.amd ? define('@nuvem/primeng-components', ['@angular/core','@angular/common/http','primeng','@nuvem/angular-base','@angular/common','primeng/table','primeng/api','@angular/forms','primeng/button','primeng/dropdown','primeng/toast','@angular/router','primeng/confirmdialog','primeng/calendar','primeng/inputtextarea','primeng/inputmask','primeng/radiobutton','@angular/cdk/scrolling','primeng/inputtext','exports', '@angular/common/http', '@angular/core', '@angular/common', 'primeng', 'primeng/table', '@nuvem/angular-base', 'primeng/button', 'primeng/dropdown', '@angular/forms', 'rxjs', 'rxjs/operators', 'primeng/api', 'primeng/toast', '@angular/router', 'primeng/inputtext', 'primeng/calendar', 'primeng/inputtextarea', 'primeng/inputmask', 'primeng/radiobutton', 'primeng/confirmdialog', 'primeng/autocomplete', '@angular/cdk/scrolling', '@angular/animations'], factory) :
    (global = global || self, factory(global.ng.core,global.ng.common.http,global.primeng,global.nuvem.angularBase,global.ng.common,global.primeng.table,global.primeng.api,global.ng.forms,global.primeng.button,global.primeng.dropdown,global.primeng.toast,global.ng.router,global.primeng.confirmdialog,global.primeng.calendar,global.primeng.inputtextarea,global.primeng.inputmask,global.primeng.radiobutton,global.ng.cdk.scrolling,global.primeng.inputtext,(global.nuvem = global.nuvem || {}, global.nuvem['primeng-components'] = {}), global.ng.common.http, global.ng.core, global.ng.common, global.primeng, global['primeng/table'], global['@nuvem/angular-base'], global['primeng/button'], global['primeng/dropdown'], global.ng.forms, global.rxjs, global.rxjs.operators, global['primeng/api'], global['primeng/toast'], global.ng.router, global['primeng/inputtext'], global['primeng/calendar'], global['primeng/inputtextarea'], global.inputmask, global.radiobutton, global['primeng/confirmdialog'], global['primeng/autocomplete'], global.ng.cdk.scrolling, global.ng.animations));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,ɵngcc5,ɵngcc6,ɵngcc7,ɵngcc8,ɵngcc9,ɵngcc10,ɵngcc11,ɵngcc12,ɵngcc13,ɵngcc14,ɵngcc15,ɵngcc16,ɵngcc17,ɵngcc18,exports, http, core, common, primeng, table, angularBase, button, dropdown, forms, rxjs, operators, api, toast, router, inputtext, calendar, inputtextarea, inputmask, radiobutton, confirmdialog, autocomplete, scrolling, animations) { 
function DatatableComponent_basis_show_column_6_Template(rf, ctx) { if (rf & 1) {
    var _r943 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "basis-show-column", 11);
    ɵngcc0.ɵɵlistener("updateVisibleColumns", function DatatableComponent_basis_show_column_6_Template_basis_show_column_updateVisibleColumns_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r943); var ctx_r942 = ɵngcc0.ɵɵnextContext(); return ctx_r942.updateVisibleColumns($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r933 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("columns", ctx_r933.columns);
} }
function DatatableComponent_ng_template_10_div_0_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 17);
    ɵngcc0.ɵɵelementStart(1, "span", 18);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r948 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r948.horizontalButtonsHeader);
} }
function DatatableComponent_ng_template_10_div_0_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
var _c0 = function (a2, a3) { return { "horizontal-buttons": true, "ui-sm-12": true, "ui-g-8": a2, "ui-g-12": a3 }; };
function DatatableComponent_ng_template_10_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_10_div_0_div_1_Template, 3, 1, "div", 15);
    ɵngcc0.ɵɵelementStart(2, "div", 2);
    ɵngcc0.ɵɵtemplate(3, DatatableComponent_ng_template_10_div_0_ng_container_3_Template, 1, 0, "ng-container", 16);
    ɵngcc0.ɵɵprojection(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r945 = ɵngcc0.ɵɵnextContext(2);
    var _r940 = ɵngcc0.ɵɵreference(16);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r945.showHorizontalButtonsHeader);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(3, _c0, ctx_r945.showHorizontalButtonsHeader, !ctx_r945.showHorizontalButtonsHeader));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r940);
} }
function DatatableComponent_ng_template_10_th_2_p_sortIcon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "p-sortIcon", 21);
} if (rf & 2) {
    var col_r950 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("field", col_r950.field);
} }
var _c1 = function (a0) { return { "display": a0 }; };
function DatatableComponent_ng_template_10_th_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "th", 19);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵtemplate(2, DatatableComponent_ng_template_10_th_2_p_sortIcon_2_Template, 1, 1, "p-sortIcon", 20);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var col_r950 = ctx.$implicit;
    var ctx_r946 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("pSortableColumn", col_r950.sortable ? col_r950.field : null)("ngStyle", ɵngcc0.ɵɵpureFunction1(4, _c1, ctx_r946.visibleColumns[col_r950.field]));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", col_r950.header, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", col_r950.sortable);
} }
function DatatableComponent_ng_template_10_tr_3_th_1_Template(rf, ctx) { if (rf & 1) {
    var _r956 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "th", 23);
    ɵngcc0.ɵɵelementStart(1, "basis-filter-column", 24);
    ɵngcc0.ɵɵlistener("outputEvent", function DatatableComponent_ng_template_10_tr_3_th_1_Template_basis_filter_column_outputEvent_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r956); var col_r954 = ctx.$implicit; var ctx_r955 = ɵngcc0.ɵɵnextContext(3); return ctx_r955.filterColumn(col_r954.field, $event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var col_r954 = ctx.$implicit;
    var ctx_r953 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(8, _c1, ctx_r953.visibleColumns[col_r954.field]));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("listaOriginal", ctx_r953.filterSelectOptions)("lista", ctx_r953.filterSelectOptions)("field", col_r954.field)("updateFiltro", ctx_r953.updateFilterColumn)("filterType", col_r954.filterType)("tableType", ctx_r953.type)("customFilterOptions", ctx_r953.customFilterOptions);
} }
function DatatableComponent_ng_template_10_tr_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_10_tr_3_th_1_Template, 2, 10, "th", 22);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var columns_r944 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", columns_r944);
} }
function DatatableComponent_ng_template_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DatatableComponent_ng_template_10_div_0_Template, 5, 6, "div", 12);
    ɵngcc0.ɵɵelementStart(1, "tr");
    ɵngcc0.ɵɵtemplate(2, DatatableComponent_ng_template_10_th_2_Template, 3, 6, "th", 13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, DatatableComponent_ng_template_10_tr_3_Template, 2, 1, "tr", 8);
} if (rf & 2) {
    var columns_r944 = ctx.$implicit;
    var ctx_r935 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r935.verticalButtons);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", columns_r944);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r935.filterOnColumn);
} }
function DatatableComponent_ng_template_11_td_1_ng_container_1_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 29);
} if (rf & 2) {
    var col_r963 = ɵngcc0.ɵɵnextContext(2).$implicit;
    var rowData_r958 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("innerHTML", rowData_r958[col_r963.field], ɵngcc0.ɵɵsanitizeHtml);
} }
var _c2 = function (a0, a1) { return { rowData: a0, col: a1 }; };
function DatatableComponent_ng_template_11_td_1_ng_container_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 30);
} if (rf & 2) {
    var col_r963 = ɵngcc0.ɵɵnextContext(2).$implicit;
    var rowData_r958 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", col_r963.bodyTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(2, _c2, rowData_r958, col_r963));
} }
function DatatableComponent_ng_template_11_td_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_11_td_1_ng_container_1_span_1_Template, 1, 1, "span", 27);
    ɵngcc0.ɵɵtemplate(2, DatatableComponent_ng_template_11_td_1_ng_container_1_ng_container_2_Template, 1, 5, "ng-container", 28);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var col_r963 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !col_r963.bodyTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", col_r963.bodyTemplate);
} }
function DatatableComponent_ng_template_11_td_1_ng_container_2_ng_template_2_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 29);
} if (rf & 2) {
    var col_r963 = ɵngcc0.ɵɵnextContext(3).$implicit;
    var rowData_r958 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("innerHTML", rowData_r958[col_r963.field], ɵngcc0.ɵɵsanitizeHtml);
} }
var _c3 = function () { return { "width": "100%" }; };
function DatatableComponent_ng_template_11_td_1_ng_container_2_ng_template_2_div_1_Template(rf, ctx) { if (rf & 1) {
    var _r984 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 34);
    ɵngcc0.ɵɵelementStart(1, "div", 35);
    ɵngcc0.ɵɵelementStart(2, "div", 34);
    ɵngcc0.ɵɵelementStart(3, "span", 36);
    ɵngcc0.ɵɵelementStart(4, "input", 37);
    ɵngcc0.ɵɵlistener("ngModelChange", function DatatableComponent_ng_template_11_td_1_ng_container_2_ng_template_2_div_1_Template_input_ngModelChange_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r984); var col_r963 = ɵngcc0.ɵɵnextContext(3).$implicit; var rowData_r958 = ɵngcc0.ɵɵnextContext().$implicit; return (rowData_r958[col_r963.field] = $event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "label");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var col_r963 = ɵngcc0.ɵɵnextContext(3).$implicit;
    var rowData_r958 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵstyleMap(ɵngcc0.ɵɵpureFunction0(4, _c3));
    ɵngcc0.ɵɵproperty("ngModel", rowData_r958[col_r963.field]);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(col_r963.header);
} }
var _c4 = function (a0, a1) { return { "rowData": a0, "col": a1 }; };
function DatatableComponent_ng_template_11_td_1_ng_container_2_ng_template_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 30);
} if (rf & 2) {
    var col_r963 = ɵngcc0.ɵɵnextContext(3).$implicit;
    var rowData_r958 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", col_r963.inputTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(2, _c4, rowData_r958, col_r963));
} }
function DatatableComponent_ng_template_11_td_1_ng_container_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DatatableComponent_ng_template_11_td_1_ng_container_2_ng_template_2_span_0_Template, 1, 1, "span", 27);
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_11_td_1_ng_container_2_ng_template_2_div_1_Template, 7, 5, "div", 33);
    ɵngcc0.ɵɵtemplate(2, DatatableComponent_ng_template_11_td_1_ng_container_2_ng_template_2_ng_container_2_Template, 1, 5, "ng-container", 28);
} if (rf & 2) {
    var col_r963 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("ngIf", !col_r963.outputTemplate && col_r963.editable == false);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !col_r963.inputTemplate && col_r963.editable != false);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", col_r963.inputTemplate);
} }
function DatatableComponent_ng_template_11_td_1_ng_container_2_ng_template_3_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 29);
} if (rf & 2) {
    var col_r963 = ɵngcc0.ɵɵnextContext(3).$implicit;
    var rowData_r958 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("innerHTML", rowData_r958[col_r963.field], ɵngcc0.ɵɵsanitizeHtml);
} }
function DatatableComponent_ng_template_11_td_1_ng_container_2_ng_template_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 30);
} if (rf & 2) {
    var col_r963 = ɵngcc0.ɵɵnextContext(3).$implicit;
    var rowData_r958 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", col_r963.outputTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(2, _c2, rowData_r958, col_r963));
} }
function DatatableComponent_ng_template_11_td_1_ng_container_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DatatableComponent_ng_template_11_td_1_ng_container_2_ng_template_3_span_0_Template, 1, 1, "span", 27);
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_11_td_1_ng_container_2_ng_template_3_ng_container_1_Template, 1, 5, "ng-container", 28);
} if (rf & 2) {
    var col_r963 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("ngIf", !col_r963.outputTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", col_r963.outputTemplate);
} }
function DatatableComponent_ng_template_11_td_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "p-cellEditor");
    ɵngcc0.ɵɵtemplate(2, DatatableComponent_ng_template_11_td_1_ng_container_2_ng_template_2_Template, 3, 3, "ng-template", 31);
    ɵngcc0.ɵɵtemplate(3, DatatableComponent_ng_template_11_td_1_ng_container_2_ng_template_3_Template, 2, 2, "ng-template", 32);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} }
function DatatableComponent_ng_template_11_td_1_div_3_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r1002 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 42);
    ɵngcc0.ɵɵlistener("click", function DatatableComponent_ng_template_11_td_1_div_3_button_1_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1002); var rowData_r958 = ɵngcc0.ɵɵnextContext(3).$implicit; var ctx_r1001 = ɵngcc0.ɵɵnextContext(); return ctx_r1001.onRowEditInitEvent($event, rowData_r958); });
    ɵngcc0.ɵɵtext(1, "Editar");
    ɵngcc0.ɵɵelementEnd();
} }
function DatatableComponent_ng_template_11_td_1_div_3_button_2_Template(rf, ctx) { if (rf & 1) {
    var _r1005 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 43);
    ɵngcc0.ɵɵlistener("click", function DatatableComponent_ng_template_11_td_1_div_3_button_2_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1005); var rowData_r958 = ɵngcc0.ɵɵnextContext(3).$implicit; var ctx_r1004 = ɵngcc0.ɵɵnextContext(); return ctx_r1004.onRowEditSaveEvent($event, rowData_r958); });
    ɵngcc0.ɵɵtext(1, "Salvar");
    ɵngcc0.ɵɵelementEnd();
} }
function DatatableComponent_ng_template_11_td_1_div_3_button_3_Template(rf, ctx) { if (rf & 1) {
    var _r1008 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 44);
    ɵngcc0.ɵɵlistener("click", function DatatableComponent_ng_template_11_td_1_div_3_button_3_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1008); var ctx_r1009 = ɵngcc0.ɵɵnextContext(3); var rowData_r958 = ctx_r1009.$implicit; var ri_r961 = ctx_r1009.rowIndex; var ctx_r1007 = ɵngcc0.ɵɵnextContext(); return ctx_r1007.onRowEditCancelEvent($event, rowData_r958, ri_r961); });
    ɵngcc0.ɵɵtext(1, "Cancelar");
    ɵngcc0.ɵɵelementEnd();
} }
function DatatableComponent_ng_template_11_td_1_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 38);
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_11_td_1_div_3_button_1_Template, 2, 0, "button", 39);
    ɵngcc0.ɵɵtemplate(2, DatatableComponent_ng_template_11_td_1_div_3_button_2_Template, 2, 0, "button", 40);
    ɵngcc0.ɵɵtemplate(3, DatatableComponent_ng_template_11_td_1_div_3_button_3_Template, 2, 0, "button", 41);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var editing_r960 = ɵngcc0.ɵɵnextContext(2).editing;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !editing_r960);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", editing_r960);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", editing_r960);
} }
function DatatableComponent_ng_template_11_td_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 23);
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_11_td_1_ng_container_1_Template, 3, 2, "ng-container", 8);
    ɵngcc0.ɵɵtemplate(2, DatatableComponent_ng_template_11_td_1_ng_container_2_Template, 4, 0, "ng-container", 8);
    ɵngcc0.ɵɵtemplate(3, DatatableComponent_ng_template_11_td_1_div_3_Template, 4, 3, "div", 26);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var col_r963 = ctx.$implicit;
    var isLast_r964 = ctx.last;
    var ctx_r962 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(4, _c1, ctx_r962.visibleColumns[col_r963.field]));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r962.editMode);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r962.editMode);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", isLast_r964);
} }
var _c5 = function (a0) { return { "editing": a0 }; };
function DatatableComponent_ng_template_11_Template(rf, ctx) { if (rf & 1) {
    var _r1012 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "tr", 25);
    ɵngcc0.ɵɵlistener("mouseover", function DatatableComponent_ng_template_11_Template_tr_mouseover_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1012); var ctx_r1011 = ɵngcc0.ɵɵnextContext(); return ctx_r1011.editarLinhaOver($event); })("mouseleave", function DatatableComponent_ng_template_11_Template_tr_mouseleave_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1012); var ctx_r1013 = ɵngcc0.ɵɵnextContext(); return ctx_r1013.editarLinhaOut($event); });
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_11_td_1_Template, 4, 6, "td", 22);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var rowData_r958 = ctx.$implicit;
    var columns_r959 = ctx.columns;
    var editing_r960 = ctx.editing;
    ɵngcc0.ɵɵproperty("pSelectableRow", rowData_r958)("pContextMenuRow", rowData_r958)("pEditableRow", rowData_r958)("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c5, editing_r960));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", columns_r959);
} }
function DatatableComponent_12_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
} if (rf & 2) {
    var ctx_r1014 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1014.emptyMessage, " ");
} }
function DatatableComponent_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DatatableComponent_12_ng_template_0_Template, 1, 1, "ng-template");
} }
function DatatableComponent_p_footer_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p-footer");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r938 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r938.paginationFooterText(ctx_r938.footerMsg), " ");
} }
function DatatableComponent_div_14_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function DatatableComponent_div_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 45);
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_div_14_ng_container_1_Template, 1, 0, "ng-container", 16);
    ɵngcc0.ɵɵprojection(2, 1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r939 = ɵngcc0.ɵɵnextContext();
    var _r940 = ɵngcc0.ɵɵreference(16);
    ɵngcc0.ɵɵstyleProp("position", ctx_r939.enableButtonsScroll ? "sticky" : "")("top", ctx_r939.enableButtonsScroll ? "15%" : "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r940);
} }
function DatatableComponent_ng_template_15_basis_datatable_button_0_Template(rf, ctx) { if (rf & 1) {
    var _r1021 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "basis-datatable-button", 50);
    ɵngcc0.ɵɵlistener("click", function DatatableComponent_ng_template_15_basis_datatable_button_0_Template_basis_datatable_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1021); var ctx_r1020 = ɵngcc0.ɵɵnextContext(2); return ctx_r1020.onClick("edit", $event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1016 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassProp("horizontal-button", !ctx_r1016.verticalButtons);
    ɵngcc0.ɵɵproperty("bTooltip", ctx_r1016.selectedRow != null ? "Editar" : "Escolha um registro para editar.")("disabled", ctx_r1016.selectedRow == null);
} }
function DatatableComponent_ng_template_15_basis_datatable_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r1023 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "basis-datatable-button", 51);
    ɵngcc0.ɵɵlistener("click", function DatatableComponent_ng_template_15_basis_datatable_button_1_Template_basis_datatable_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1023); var ctx_r1022 = ɵngcc0.ɵɵnextContext(2); return ctx_r1022.onClick("view", $event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1017 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassProp("horizontal-button", !ctx_r1017.verticalButtons);
    ɵngcc0.ɵɵproperty("bTooltip", ctx_r1017.selectedRow != null ? "Visualizar" : "Escolha um registro para visualizar.")("disabled", ctx_r1017.selectedRow == null);
} }
function DatatableComponent_ng_template_15_basis_datatable_button_2_Template(rf, ctx) { if (rf & 1) {
    var _r1025 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "basis-datatable-button", 52);
    ɵngcc0.ɵɵlistener("click", function DatatableComponent_ng_template_15_basis_datatable_button_2_Template_basis_datatable_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1025); var ctx_r1024 = ɵngcc0.ɵɵnextContext(2); return ctx_r1024.onClick("delete", $event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1018 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassProp("horizontal-button", !ctx_r1018.verticalButtons);
    ɵngcc0.ɵɵproperty("bTooltip", ctx_r1018.selectedRow != null ? "Excluir" : "Escolha um registro para excluir.")("disabled", ctx_r1018.selectedRow == null);
} }
function DatatableComponent_ng_template_15_datatable_splitbutton_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "datatable-splitbutton", 53);
} if (rf & 2) {
    var ctx_r1019 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r1019.splitButton.class);
    ɵngcc0.ɵɵproperty("icon", ctx_r1019.splitButton.icon)("items", ctx_r1019.splitButton.itens)("label", ctx_r1019.splitButton.label)("method", ctx_r1019.splitButton.method);
} }
function DatatableComponent_ng_template_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DatatableComponent_ng_template_15_basis_datatable_button_0_Template, 1, 4, "basis-datatable-button", 46);
    ɵngcc0.ɵɵtemplate(1, DatatableComponent_ng_template_15_basis_datatable_button_1_Template, 1, 4, "basis-datatable-button", 47);
    ɵngcc0.ɵɵtemplate(2, DatatableComponent_ng_template_15_basis_datatable_button_2_Template, 1, 4, "basis-datatable-button", 48);
    ɵngcc0.ɵɵtemplate(3, DatatableComponent_ng_template_15_datatable_splitbutton_3_Template, 1, 6, "datatable-splitbutton", 49);
} if (rf & 2) {
    var ctx_r941 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r941.disableEdit && ctx_r941.checkRolesToButton("rulesToShowView") && ctx_r941.checkRolesToButton("rulesToHideView"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r941.disableView && ctx_r941.checkRolesToButton("rulesToShowEdit") && ctx_r941.checkRolesToButton("rulesToHideEdit"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r941.disableDelete && ctx_r941.checkRolesToButton("rulesToShowDelete") && ctx_r941.checkRolesToButton("rulesToHideDelete"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r941.splitButton);
} }
var _c6 = [[["horizontalButtons"]], "*"];
var _c7 = function (a0, a1) { return { "ui-g-2": a0, "ui-g-5": a1 }; };
var _c8 = function (a0, a1, a2, a3) { return { "ui-g-11": a0, "ui-g-12": a1, "edicao-tabela": a2, "editing-row": a3 }; };
var _c9 = ["horizontalButtons", "*"];
function FilterColumn_div_1_Template(rf, ctx) { if (rf & 1) {
    var _r1029 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 2);
    ɵngcc0.ɵɵelementStart(2, "div", 3);
    ɵngcc0.ɵɵelementStart(3, "span", 4);
    ɵngcc0.ɵɵelementStart(4, "input", 5);
    ɵngcc0.ɵɵlistener("input", function FilterColumn_div_1_Template_input_input_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r1029); var ctx_r1028 = ɵngcc0.ɵɵnextContext(); return ctx_r1028.filtrar($event); })("ngModelChange", function FilterColumn_div_1_Template_input_ngModelChange_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r1029); var ctx_r1030 = ɵngcc0.ɵɵnextContext(); return ctx_r1030.filtro = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "label");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1026 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1026.filtro);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1026.header ? ctx_r1026.header : "Filtro");
} }
var _c10 = function () { return { standalone: true }; };
function FilterColumn_div_2_Template(rf, ctx) { if (rf & 1) {
    var _r1032 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "p-multiSelect", 6);
    ɵngcc0.ɵɵlistener("onChange", function FilterColumn_div_2_Template_p_multiSelect_onChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r1032); var ctx_r1031 = ɵngcc0.ɵɵnextContext(); return ctx_r1031.filtrar($event); })("ngModelChange", function FilterColumn_div_2_Template_p_multiSelect_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r1032); var ctx_r1033 = ɵngcc0.ɵɵnextContext(); return ctx_r1033.filtro = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1027 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleMap(ɵngcc0.ɵɵpureFunction0(7, _c3));
    ɵngcc0.ɵɵproperty("options", ctx_r1027.getCustomFilterOptions())("defaultLabel", ctx_r1027.header ? ctx_r1027.header : "\u00A0")("optionLabel", "label")("ngModelOptions", ɵngcc0.ɵɵpureFunction0(8, _c10))("ngModel", ctx_r1027.filtro);
} }
var _c11 = function () { return { width: "100%" }; };
var _c12 = ["form-notification", ""];
var _c13 = ["*"];
function ErrorStackComponent_ng_template_0_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵelementStart(1, "th", 9);
    ɵngcc0.ɵɵtext(2, "Data");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "th", 9);
    ɵngcc0.ɵɵtext(4, "C\u00F3digo de identifica\u00E7\u00E3o");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "th");
    ɵngcc0.ɵɵtext(6, "Mensagem");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "th", 10);
    ɵngcc0.ɵɵtext(8, "A\u00E7\u00E3o");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function ErrorStackComponent_ng_template_0_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵelementStart(1, "td", 9);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "date");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "td", 9);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "td");
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "td", 10);
    ɵngcc0.ɵɵelement(9, "button", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var error_r1040 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(3, 4, error_r1040.createdAt, "dd/MM/y H:mm:ss"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(error_r1040.correlationId || "Indispon\u00EDvel");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(error_r1040.message);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("clipboard", error_r1040.fullMessage);
} }
function ErrorStackComponent_ng_template_0_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵelementStart(1, "td", 12);
    ɵngcc0.ɵɵtext(2, " Nenhum erro foi registrado at\u00E9 o momento. ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function ErrorStackComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵelementStart(1, "div", 3);
    ɵngcc0.ɵɵelementStart(2, "div", 4);
    ɵngcc0.ɵɵelementStart(3, "h1");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "p-table", 5);
    ɵngcc0.ɵɵtemplate(6, ErrorStackComponent_ng_template_0_ng_template_6_Template, 9, 0, "ng-template", 6);
    ɵngcc0.ɵɵtemplate(7, ErrorStackComponent_ng_template_0_ng_template_7_Template, 10, 7, "ng-template", 7);
    ɵngcc0.ɵɵtemplate(8, ErrorStackComponent_ng_template_0_ng_template_8_Template, 3, 0, "ng-template", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1035 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1035.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("value", ctx_r1035.errors)("paginator", false)("rows", 5);
} }
function ErrorStackComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
var _c14 = function (a0) { return [a0]; };
var _c15 = ["datatable"];
var _c16 = function () { return ["../save"]; };
function CrudListComponent_button_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "button", 6);
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("routerLink", ɵngcc0.ɵɵpureFunction0(1, _c16));
} }
var _c17 = [[["", "nForm", ""]], [["p-column"]]];
var _c18 = ["[nForm]", "p-column"];
var _c19 = ["input"];
var _c20 = ["nInputText", ""];
function InputTextComponent_nValidationMessage_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "nValidationMessage", 6);
} if (rf & 2) {
    var ctx_r1046 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("control", ctx_r1046.formControl);
} }
var _c21 = function (a0) { return { "ng-invalid ng-dirty": a0 }; };
var _c22 = ["nCalendar", ""];
function CalendarComponent_nValidationMessage_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "nValidationMessage", 6);
} if (rf & 2) {
    var ctx_r1049 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("control", ctx_r1049.formControl);
} }
var _c23 = ["nTextArea", ""];
function TextAreaComponent_nValidationMessage_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "nValidationMessage", 6);
} if (rf & 2) {
    var ctx_r1052 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("control", ctx_r1052.formControl);
} }
var _c24 = ["nDropdown", ""];
function DropdownComponent_nValidationMessage_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "nValidationMessage", 6);
} if (rf & 2) {
    var ctx_r1055 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("control", ctx_r1055.formControl);
} }
var _c25 = ["nInputMask", ""];
function InputMaskComponent_nValidationMessage_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "nValidationMessage", 6);
} if (rf & 2) {
    var ctx_r1058 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("control", ctx_r1058.formControl);
} }
var _c26 = ["nCheck", ""];
function FormComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵelement(1, "button", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1059 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("label", ctx_r1059.saveLabel)("disabled", ctx_r1059.form.disabled || ctx_r1059.form.invalid);
} }
var _c27 = ["*", [["", "nButton", ""]]];
var _c28 = ["*", "[nButton]"];
function ValidationMessageComponent_ng_container_0_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1, " campo obrigat\u00F3rio ");
    ɵngcc0.ɵɵelementContainerEnd();
} }
function ValidationMessageComponent_ng_container_0_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r1062 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" tamanho m\u00EDnimo ", ctx_r1062.control.errors.minlength.requiredLength, " ");
} }
function ValidationMessageComponent_ng_container_0_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r1063 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" tamanho m\u00E1ximo ", ctx_r1063.control.errors.maxlength.requiredLength, " ");
} }
function ValidationMessageComponent_ng_container_0_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r1064 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" valor m\u00EDnimo ", ctx_r1064.control.errors.min.min, " ");
} }
function ValidationMessageComponent_ng_container_0_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r1065 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" valor m\u00E1ximo ", ctx_r1065.control.errors.max.max, " ");
} }
function ValidationMessageComponent_ng_container_0_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1, " campo inv\u00E1lido ");
    ɵngcc0.ɵɵelementContainerEnd();
} }
function ValidationMessageComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 1);
    ɵngcc0.ɵɵtemplate(2, ValidationMessageComponent_ng_container_0_ng_container_2_Template, 2, 0, "ng-container", 0);
    ɵngcc0.ɵɵtemplate(3, ValidationMessageComponent_ng_container_0_ng_container_3_Template, 2, 1, "ng-container", 0);
    ɵngcc0.ɵɵtemplate(4, ValidationMessageComponent_ng_container_0_ng_container_4_Template, 2, 1, "ng-container", 0);
    ɵngcc0.ɵɵtemplate(5, ValidationMessageComponent_ng_container_0_ng_container_5_Template, 2, 1, "ng-container", 0);
    ɵngcc0.ɵɵtemplate(6, ValidationMessageComponent_ng_container_0_ng_container_6_Template, 2, 1, "ng-container", 0);
    ɵngcc0.ɵɵtemplate(7, ValidationMessageComponent_ng_container_0_ng_container_7_Template, 2, 0, "ng-container", 0);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r1060 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1060.control.errors.required);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1060.control.errors.minlength);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1060.control.errors.maxlength);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1060.control.errors.min);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1060.control.errors.max);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1060.control.errors.email || ctx_r1060.control.errors.pattern);
} }
var _c29 = ["nAutoComplete", ""];
function AutoCompleteComponent_nValidationMessage_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "nValidationMessage", 6);
} if (rf & 2) {
    var ctx_r1069 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("control", ctx_r1069.formControl);
} }
function AutoCompleteCustomComponent_input_1_Template(rf, ctx) { if (rf & 1) {
    var _r1077 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 6, 7);
    ɵngcc0.ɵɵlistener("click", function AutoCompleteCustomComponent_input_1_Template_input_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1077); var ctx_r1076 = ɵngcc0.ɵɵnextContext(); return ctx_r1076.onInputClick($event); })("input", function AutoCompleteCustomComponent_input_1_Template_input_input_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1077); var ctx_r1078 = ɵngcc0.ɵɵnextContext(); return ctx_r1078.onInput($event); })("keydown", function AutoCompleteCustomComponent_input_1_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1077); var ctx_r1079 = ɵngcc0.ɵɵnextContext(); return ctx_r1079.onKeydown($event); })("keyup", function AutoCompleteCustomComponent_input_1_Template_input_keyup_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1077); var ctx_r1080 = ɵngcc0.ɵɵnextContext(); return ctx_r1080.onKeyup($event); })("focus", function AutoCompleteCustomComponent_input_1_Template_input_focus_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1077); var ctx_r1081 = ɵngcc0.ɵɵnextContext(); return ctx_r1081.onInputFocus($event); })("blur", function AutoCompleteCustomComponent_input_1_Template_input_blur_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1077); var ctx_r1082 = ɵngcc0.ɵɵnextContext(); return ctx_r1082.onInputBlur($event); })("change", function AutoCompleteCustomComponent_input_1_Template_input_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1077); var ctx_r1083 = ɵngcc0.ɵɵnextContext(); return ctx_r1083.onInputChange($event); })("paste", function AutoCompleteCustomComponent_input_1_Template_input_paste_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1077); var ctx_r1084 = ɵngcc0.ɵɵnextContext(); return ctx_r1084.onInputPaste($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1070 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r1070.inputStyleClass);
    ɵngcc0.ɵɵproperty("ngStyle", ctx_r1070.inputStyle)("autocomplete", ctx_r1070.autocomplete)("ngClass", "ui-inputtext ui-widget ui-state-default ui-corner-all ui-autocomplete-input")("value", ctx_r1070.inputFieldValue)("readonly", ctx_r1070.readonly)("disabled", ctx_r1070.disabled);
    ɵngcc0.ɵɵattribute("type", ctx_r1070.type)("id", ctx_r1070.inputId)("required", ctx_r1070.required)("name", ctx_r1070.name)("aria-expanded", ctx_r1070.overlayVisible)("aria-activedescendant", "p-highlighted-option")("autofocus", ctx_r1070.autofocus)("placeholder", ctx_r1070.placeholder)("size", ctx_r1070.size)("maxlength", ctx_r1070.maxlength)("tabindex", ctx_r1070.tabindex)("aria-label", ctx_r1070.ariaLabel)("aria-labelledby", ctx_r1070.ariaLabelledBy)("aria-required", ctx_r1070.required);
} }
function AutoCompleteCustomComponent_ul_2_li_2_span_2_Template(rf, ctx) { if (rf & 1) {
    var _r1094 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 19);
    ɵngcc0.ɵɵlistener("click", function AutoCompleteCustomComponent_ul_2_li_2_span_2_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r1094); ɵngcc0.ɵɵnextContext(); var _r1089 = ɵngcc0.ɵɵreference(1); var ctx_r1093 = ɵngcc0.ɵɵnextContext(2); return ctx_r1093.removeItem(_r1089); });
    ɵngcc0.ɵɵelementEnd();
} }
function AutoCompleteCustomComponent_ul_2_li_2_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 20);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var val_r1088 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r1091 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1091.resolveFieldData(val_r1088));
} }
function AutoCompleteCustomComponent_ul_2_li_2_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
var _c30 = function (a0) { return { $implicit: a0 }; };
function AutoCompleteCustomComponent_ul_2_li_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 14, 15);
    ɵngcc0.ɵɵtemplate(2, AutoCompleteCustomComponent_ul_2_li_2_span_2_Template, 1, 0, "span", 16);
    ɵngcc0.ɵɵtemplate(3, AutoCompleteCustomComponent_ul_2_li_2_span_3_Template, 2, 1, "span", 17);
    ɵngcc0.ɵɵtemplate(4, AutoCompleteCustomComponent_ul_2_li_2_ng_container_4_Template, 1, 0, "ng-container", 18);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var val_r1088 = ctx.$implicit;
    var ctx_r1086 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1086.disabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1086.selectedItemTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r1086.selectedItemTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(4, _c30, val_r1088));
} }
var _c31 = function (a0, a1) { return { "ui-state-disabled": a0, "ui-state-focus": a1 }; };
function AutoCompleteCustomComponent_ul_2_Template(rf, ctx) { if (rf & 1) {
    var _r1097 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "ul", 8, 9);
    ɵngcc0.ɵɵlistener("click", function AutoCompleteCustomComponent_ul_2_Template_ul_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r1097); var _r1087 = ɵngcc0.ɵɵreference(5); return _r1087.focus(); });
    ɵngcc0.ɵɵtemplate(2, AutoCompleteCustomComponent_ul_2_li_2_Template, 5, 6, "li", 10);
    ɵngcc0.ɵɵelementStart(3, "li", 11);
    ɵngcc0.ɵɵelementStart(4, "input", 12, 13);
    ɵngcc0.ɵɵlistener("input", function AutoCompleteCustomComponent_ul_2_Template_input_input_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r1097); var ctx_r1098 = ɵngcc0.ɵɵnextContext(); return ctx_r1098.onInput($event); })("click", function AutoCompleteCustomComponent_ul_2_Template_input_click_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r1097); var ctx_r1099 = ɵngcc0.ɵɵnextContext(); return ctx_r1099.onInputClick($event); })("keydown", function AutoCompleteCustomComponent_ul_2_Template_input_keydown_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r1097); var ctx_r1100 = ɵngcc0.ɵɵnextContext(); return ctx_r1100.onKeydown($event); })("keyup", function AutoCompleteCustomComponent_ul_2_Template_input_keyup_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r1097); var ctx_r1101 = ɵngcc0.ɵɵnextContext(); return ctx_r1101.onKeyup($event); })("focus", function AutoCompleteCustomComponent_ul_2_Template_input_focus_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r1097); var ctx_r1102 = ɵngcc0.ɵɵnextContext(); return ctx_r1102.onInputFocus($event); })("blur", function AutoCompleteCustomComponent_ul_2_Template_input_blur_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r1097); var ctx_r1103 = ɵngcc0.ɵɵnextContext(); return ctx_r1103.onInputBlur($event); })("change", function AutoCompleteCustomComponent_ul_2_Template_input_change_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r1097); var ctx_r1104 = ɵngcc0.ɵɵnextContext(); return ctx_r1104.onInputChange($event); })("paste", function AutoCompleteCustomComponent_ul_2_Template_input_paste_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r1097); var ctx_r1105 = ɵngcc0.ɵɵnextContext(); return ctx_r1105.onInputPaste($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1071 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(18, _c31, ctx_r1071.disabled, ctx_r1071.focus));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1071.value);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r1071.inputStyleClass);
    ɵngcc0.ɵɵproperty("disabled", ctx_r1071.disabled)("readonly", ctx_r1071.readonly)("autocomplete", ctx_r1071.autocomplete)("ngStyle", ctx_r1071.inputStyle);
    ɵngcc0.ɵɵattribute("type", ctx_r1071.type)("id", ctx_r1071.inputId)("placeholder", ctx_r1071.value && ctx_r1071.value.length ? null : ctx_r1071.placeholder)("tabindex", ctx_r1071.tabindex)("autofocus", ctx_r1071.autofocus)("aria-label", ctx_r1071.ariaLabel)("aria-labelledby", ctx_r1071.ariaLabelledBy)("aria-required", ctx_r1071.required)("aria-expanded", ctx_r1071.overlayVisible)("aria-activedescendant", "p-highlighted-option");
} }
function AutoCompleteCustomComponent_i_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 21);
} }
function AutoCompleteCustomComponent_button_4_Template(rf, ctx) { if (rf & 1) {
    var _r1108 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 22, 23);
    ɵngcc0.ɵɵlistener("click", function AutoCompleteCustomComponent_button_4_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1108); var ctx_r1107 = ɵngcc0.ɵɵnextContext(); return ctx_r1107.handleDropdownClick($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1073 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("icon", ctx_r1073.dropdownIcon)("disabled", ctx_r1073.disabled);
    ɵngcc0.ɵɵattribute("tabindex", ctx_r1073.tabindex);
} }
function AutoCompleteCustomComponent_div_5_ng_container_3_p_autoCompleteItem_1_Template(rf, ctx) { if (rf & 1) {
    var _r1118 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "p-autoCompleteItem", 30);
    ɵngcc0.ɵɵlistener("highlightOptionChange", function AutoCompleteCustomComponent_div_5_ng_container_3_p_autoCompleteItem_1_Template_p_autoCompleteItem_highlightOptionChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1118); var ctx_r1117 = ɵngcc0.ɵɵnextContext(3); return ctx_r1117.highlightOption = $event; })("onClick", function AutoCompleteCustomComponent_div_5_ng_container_3_p_autoCompleteItem_1_Template_p_autoCompleteItem_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1118); var ctx_r1119 = ɵngcc0.ɵɵnextContext(3); return ctx_r1119.selectItem($event.option); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var option_r1115 = ctx.$implicit;
    var idx_r1116 = ctx.index;
    var ctx_r1114 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("option", option_r1115)("highlightOption", ctx_r1114.highlightOption)("index", idx_r1116)("itemSize", ctx_r1114.itemSize)("template", ctx_r1114.itemTemplate)("resolvedFieldData", ctx_r1114.resolveFieldData(option_r1115));
} }
function AutoCompleteCustomComponent_div_5_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, AutoCompleteCustomComponent_div_5_ng_container_3_p_autoCompleteItem_1_Template, 1, 6, "p-autoCompleteItem", 29);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r1110 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1110.suggestions);
} }
function AutoCompleteCustomComponent_div_5_ng_template_4_cdk_virtual_scroll_viewport_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    var _r1125 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "p-autoCompleteItem", 30);
    ɵngcc0.ɵɵlistener("highlightOptionChange", function AutoCompleteCustomComponent_div_5_ng_template_4_cdk_virtual_scroll_viewport_0_ng_container_1_Template_p_autoCompleteItem_highlightOptionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r1125); var ctx_r1124 = ɵngcc0.ɵɵnextContext(4); return ctx_r1124.highlightOption = $event; })("onClick", function AutoCompleteCustomComponent_div_5_ng_template_4_cdk_virtual_scroll_viewport_0_ng_container_1_Template_p_autoCompleteItem_onClick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r1125); var ctx_r1126 = ɵngcc0.ɵɵnextContext(4); return ctx_r1126.selectItem($event.option); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var option_r1122 = ctx.$implicit;
    var idx_r1123 = ctx.index;
    var ctx_r1121 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("option", option_r1122)("highlightOption", ctx_r1121.highlightOption)("index", idx_r1123)("itemSize", ctx_r1121.itemSize)("template", ctx_r1121.itemTemplate)("resolvedFieldData", ctx_r1121.resolveFieldData(option_r1122));
} }
var _c32 = function (a0) { return { height: a0 }; };
function AutoCompleteCustomComponent_div_5_ng_template_4_cdk_virtual_scroll_viewport_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "cdk-virtual-scroll-viewport", 32);
    ɵngcc0.ɵɵtemplate(1, AutoCompleteCustomComponent_div_5_ng_template_4_cdk_virtual_scroll_viewport_0_ng_container_1_Template, 2, 6, "ng-container", 33);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1120 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(3, _c32, ctx_r1120.scrollHeight))("itemSize", ctx_r1120.itemSize);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkVirtualForOf", ctx_r1120.suggestions);
} }
function AutoCompleteCustomComponent_div_5_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, AutoCompleteCustomComponent_div_5_ng_template_4_cdk_virtual_scroll_viewport_0_Template, 2, 5, "cdk-virtual-scroll-viewport", 31);
} if (rf & 2) {
    var ctx_r1112 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1112.virtualScroll && ctx_r1112.suggestions && ctx_r1112.suggestions.length);
} }
function AutoCompleteCustomComponent_div_5_li_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 34);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1113 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1113.emptyMessage);
} }
var _c33 = function () { return ["ui-autocomplete-panel ui-widget ui-widget-content ui-corner-all ui-shadow"]; };
var _c34 = function (a0, a1) { return { showTransitionParams: a0, hideTransitionParams: a1 }; };
var _c35 = function (a1) { return { value: "visible", params: a1 }; };
function AutoCompleteCustomComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    var _r1128 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 0, 24);
    ɵngcc0.ɵɵlistener("@overlayAnimation.start", function AutoCompleteCustomComponent_div_5_Template_div_animation_overlayAnimation_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1128); var ctx_r1127 = ɵngcc0.ɵɵnextContext(); return ctx_r1127.onOverlayAnimationStart($event); })("@overlayAnimation.done", function AutoCompleteCustomComponent_div_5_Template_div_animation_overlayAnimation_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1128); var ctx_r1129 = ɵngcc0.ɵɵnextContext(); return ctx_r1129.onOverlayAnimationDone($event); });
    ɵngcc0.ɵɵelementStart(2, "ul", 25);
    ɵngcc0.ɵɵtemplate(3, AutoCompleteCustomComponent_div_5_ng_container_3_Template, 2, 1, "ng-container", 26);
    ɵngcc0.ɵɵtemplate(4, AutoCompleteCustomComponent_div_5_ng_template_4_Template, 1, 1, "ng-template", null, 27, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(6, AutoCompleteCustomComponent_div_5_li_6_Template, 2, 1, "li", 28);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var _r1111 = ɵngcc0.ɵɵreference(5);
    var ctx_r1074 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r1074.panelStyleClass);
    ɵngcc0.ɵɵstyleProp("max-height", ctx_r1074.virtualScroll ? "auto" : ctx_r1074.scrollHeight || "auto");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction0(10, _c33))("ngStyle", ctx_r1074.panelStyle)("@overlayAnimation", ɵngcc0.ɵɵpureFunction1(14, _c35, ɵngcc0.ɵɵpureFunction2(11, _c34, ctx_r1074.showTransitionOptions, ctx_r1074.hideTransitionOptions)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1074.virtualScroll)("ngIfElse", _r1111);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1074.noResults && ctx_r1074.emptyMessage);
} }
var _c36 = function (a1, a2) { return { "ui-autocomplete ui-widget": true, "ui-autocomplete-dd": a1, "ui-autocomplete-multiple": a2 }; };
function AutoCompleteItem_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1130 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1130.resolvedFieldData);
} }
function AutoCompleteItem_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
var _c37 = function (a1) { return { "ui-autocomplete-list-item ui-corner-all": true, "ui-state-highlight": a1 }; };
var _c38 = function (a0) { return { "height": a0, "display": "table", "width": "100%" }; };
var _c39 = function (a0, a1) { return { $implicit: a0, index: a1 }; };
var _c40 = ["nAutoCompleteMultiple", ""];
function AutoCompleteMultipleComponent_nValidationMessage_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "nValidationMessage", 6);
} if (rf & 2) {
    var ctx_r1134 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("control", ctx_r1134.formControl);
} }
function BreadcrumbComponent_ng_template_8_a_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 10);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r1136 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("routerLink", item_r1136.routerLink);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r1136.label);
} }
function BreadcrumbComponent_ng_template_8_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var item_r1136 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r1136.label);
} }
function BreadcrumbComponent_ng_template_8_li_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵtext(1, "/");
    ɵngcc0.ɵɵelementEnd();
} }
function BreadcrumbComponent_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵtemplate(1, BreadcrumbComponent_ng_template_8_a_1_Template, 2, 2, "a", 8);
    ɵngcc0.ɵɵtemplate(2, BreadcrumbComponent_ng_template_8_ng_container_2_Template, 2, 1, "ng-container", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, BreadcrumbComponent_ng_template_8_li_3_Template, 2, 0, "li", 9);
} if (rf & 2) {
    var item_r1136 = ctx.$implicit;
    var last_r1137 = ctx.last;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r1136.routerLink);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !item_r1136.routerLink);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !last_r1137);
} }
var _c41 = function () { return { "cursor": "pointer" }; };
var _c42 = ["submenu", ""];
function SubMenuComponent_ng_template_0_li_0_a_1_i_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "i", 13);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var child_r1144 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(child_r1144.icon);
} }
function SubMenuComponent_ng_template_0_li_0_a_1_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 14);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var child_r1144 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(child_r1144.badge);
} }
function SubMenuComponent_ng_template_0_li_0_a_1_i_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "i", 15);
    ɵngcc0.ɵɵtext(1, "keyboard_arrow_down");
    ɵngcc0.ɵɵelementEnd();
} }
function SubMenuComponent_ng_template_0_li_0_a_1_Template(rf, ctx) { if (rf & 1) {
    var _r1156 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 9);
    ɵngcc0.ɵɵlistener("click", function SubMenuComponent_ng_template_0_li_0_a_1_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1156); var ctx_r1157 = ɵngcc0.ɵɵnextContext(2); var child_r1144 = ctx_r1157.$implicit; var i_r1145 = ctx_r1157.index; var ctx_r1155 = ɵngcc0.ɵɵnextContext(); return ctx_r1155.itemClick($event, child_r1144, i_r1145); })("mouseenter", function SubMenuComponent_ng_template_0_li_0_a_1_Template_a_mouseenter_0_listener() { ɵngcc0.ɵɵrestoreView(_r1156); var i_r1145 = ɵngcc0.ɵɵnextContext(2).index; var ctx_r1158 = ɵngcc0.ɵɵnextContext(); return ctx_r1158.onMouseEnter(i_r1145); });
    ɵngcc0.ɵɵtemplate(1, SubMenuComponent_ng_template_0_li_0_a_1_i_1_Template, 2, 1, "i", 10);
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, SubMenuComponent_ng_template_0_li_0_a_1_span_4_Template, 2, 1, "span", 11);
    ɵngcc0.ɵɵtemplate(5, SubMenuComponent_ng_template_0_li_0_a_1_i_5_Template, 2, 0, "i", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var child_r1144 = ɵngcc0.ɵɵnextContext(2).$implicit;
    var ctx_r1147 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("href", child_r1144.url || "#", ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵattribute("tabindex", !ctx_r1147.visible ? "-1" : null)("target", child_r1144.target);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r1144.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(child_r1144.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r1144.badge);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r1144.items);
} }
function SubMenuComponent_ng_template_0_li_0_a_2_i_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "i", 13);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var child_r1144 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(child_r1144.icon);
} }
function SubMenuComponent_ng_template_0_li_0_a_2_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 14);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var child_r1144 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(child_r1144.badge);
} }
function SubMenuComponent_ng_template_0_li_0_a_2_i_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "i", 15);
    ɵngcc0.ɵɵtext(1, "keyboard_arrow_down");
    ɵngcc0.ɵɵelementEnd();
} }
var _c43 = function () { return { exact: true }; };
function SubMenuComponent_ng_template_0_li_0_a_2_Template(rf, ctx) { if (rf & 1) {
    var _r1167 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 16);
    ɵngcc0.ɵɵlistener("click", function SubMenuComponent_ng_template_0_li_0_a_2_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r1167); var ctx_r1168 = ɵngcc0.ɵɵnextContext(2); var child_r1144 = ctx_r1168.$implicit; var i_r1145 = ctx_r1168.index; var ctx_r1166 = ɵngcc0.ɵɵnextContext(); return ctx_r1166.itemClick($event, child_r1144, i_r1145); })("mouseenter", function SubMenuComponent_ng_template_0_li_0_a_2_Template_a_mouseenter_0_listener() { ɵngcc0.ɵɵrestoreView(_r1167); var i_r1145 = ɵngcc0.ɵɵnextContext(2).index; var ctx_r1169 = ɵngcc0.ɵɵnextContext(); return ctx_r1169.onMouseEnter(i_r1145); });
    ɵngcc0.ɵɵtemplate(1, SubMenuComponent_ng_template_0_li_0_a_2_i_1_Template, 2, 1, "i", 10);
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, SubMenuComponent_ng_template_0_li_0_a_2_span_4_Template, 2, 1, "span", 11);
    ɵngcc0.ɵɵtemplate(5, SubMenuComponent_ng_template_0_li_0_a_2_i_5_Template, 2, 0, "i", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var child_r1144 = ɵngcc0.ɵɵnextContext(2).$implicit;
    var ctx_r1148 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("routerLink", child_r1144.routerLink)("routerLinkActiveOptions", ɵngcc0.ɵɵpureFunction0(8, _c43));
    ɵngcc0.ɵɵattribute("tabindex", !ctx_r1148.visible ? "-1" : null)("target", child_r1144.target);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r1144.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(child_r1144.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r1144.badge);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r1144.items);
} }
function SubMenuComponent_ng_template_0_li_0_ul_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "ul", 17);
} if (rf & 2) {
    var ctx_r1172 = ɵngcc0.ɵɵnextContext(2);
    var child_r1144 = ctx_r1172.$implicit;
    var i_r1145 = ctx_r1172.index;
    var ctx_r1149 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("item", child_r1144)("visible", ctx_r1149.isActive(i_r1145))("reset", ctx_r1149.reset)("parentActive", ctx_r1149.isActive(i_r1145))("@children", (ctx_r1149.menuService.isSlim() || ctx_r1149.menuService.isHorizontal()) && ctx_r1149.root ? ctx_r1149.isActive(i_r1145) ? "visible" : "hidden" : ctx_r1149.isActive(i_r1145) ? "visibleAnimated" : "hiddenAnimated");
} }
var _c44 = function (a0) { return { "active-menuitem": a0 }; };
function SubMenuComponent_ng_template_0_li_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 2);
    ɵngcc0.ɵɵtemplate(1, SubMenuComponent_ng_template_0_li_0_a_1_Template, 6, 7, "a", 3);
    ɵngcc0.ɵɵtemplate(2, SubMenuComponent_ng_template_0_li_0_a_2_Template, 6, 9, "a", 4);
    ɵngcc0.ɵɵelementStart(3, "div", 5);
    ɵngcc0.ɵɵelement(4, "div", 6);
    ɵngcc0.ɵɵelementStart(5, "div", 7);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, SubMenuComponent_ng_template_0_li_0_ul_7_Template, 1, 5, "ul", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1173 = ɵngcc0.ɵɵnextContext();
    var child_r1144 = ctx_r1173.$implicit;
    var i_r1145 = ctx_r1173.index;
    var ctx_r1146 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(child_r1144.badgeStyleClass);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(7, _c44, ctx_r1146.isActive(i_r1145)));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !child_r1144.routerLink);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r1144.routerLink);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(child_r1144.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r1144.items);
} }
function SubMenuComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, SubMenuComponent_ng_template_0_li_0_Template, 8, 9, "li", 1);
} if (rf & 2) {
    var child_r1144 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngIf", child_r1144.visible === false ? false : true);
} }
'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __createBinding(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    }

    function __exportStar(m, exports) {
        for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
    }

    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result.default = mod;
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }

    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    /**
     * Class DatatableService
     * @class
     */
    var DatatableService = /** @class */ (function () {
        /**
         * constructor method
         * @constructor
         * @param {HttpClient} http
         */
        function DatatableService(http) {
            this.http = http;
        }
        /**
         * search method
         * @param {LazyLoadEvent} event
         * @param {String} url
         * @param {number} rows
         * @param {boolean} orderInSort
         * @param {any} query
         * @return Observable
         */
        DatatableService.prototype.search = function (event, url, rows, orderInSort, query) {
            var page = 0;
            if (event !== undefined && event.first > 0) {
                page = Math.floor(event.first / rows);
            }
            var order = event.sortOrder === 1 ? 'asc' : 'desc';
            var params = new http.HttpParams()
                .set('page', page.toString())
                .set('size', rows.toString());
            if (orderInSort) {
                if (event.sortField !== undefined) {
                    params = params.set('sort', event.sortField + ',' + order);
                }
            }
            else {
                if (event.sortField !== undefined) {
                    params = params
                        .set('sort', event.sortField)
                        .set('order', order);
                }
            }
            if ('string' === typeof query) {
                params = params.set('query', query);
            }
            if ('object' === typeof query) {
                Object.keys(query).forEach(function (key) { return params = params.set(key, query[key]); });
            }
            return this.http.get(url + "?" + params.toString(), { observe: 'response' });
        };
        DatatableService.ctorParameters = function () { return [
            { type: http.HttpClient }
        ]; };
        DatatableService.ɵprov = core.ɵɵdefineInjectable({ factory: function DatatableService_Factory() { return new DatatableService(core.ɵɵinject(http.HttpClient)); }, token: DatatableService, providedIn: "root" });
DatatableService.ɵfac = function DatatableService_Factory(t) { return new (t || DatatableService)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient)); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DatatableService, [{
        type: core.Injectable,
        args: [{
                providedIn: "root"
            }]
    }], function () { return [{ type: ɵngcc1.HttpClient }]; }, null); })();
        return DatatableService;
    }());

    /**
     * Class ServerDataProvider
     * @class
     */
    var ServerDataProvider = /** @class */ (function () {
        /**
         * constructor method
         * @constructor
         * @param {DatatableService} datatableService
         * @param {DatatableComponent} component
         */
        function ServerDataProvider(datatableService, component) {
            var _this = this;
            this.datatableService = datatableService;
            this.component = component;
            this.component.pDatatableComponent.onLazyLoad.subscribe(function (event) { return _this.onLazyLoad(event); });
            this.component.pDatatableComponent.lazy = true;
        }
        /**
         * onLazyLoad method
         * @param {LazyLoadEvent} onLazyLoad
         * @returns void
         */
        ServerDataProvider.prototype.onLazyLoad = function (event) {
            this.currentLazyLoadEvent = event;
            this.load();
        };
        /**
         * load method
         * @param {any} query
         * @returns void
         */
        ServerDataProvider.prototype.load = function (query) {
            var _this = this;
            query = this.retrieveAndSaveQuery(query);
            this.component.startedLoading.emit();
            this.datatableService.search(this.currentLazyLoadEvent, this.component.url, this.component.pDatatableComponent.rows, this.component.orderInSort, query)
                .toPromise()
                .then(function (response) {
                _this.treatLoadResponse(response);
                _this.component.finishedLoading.emit();
            }, function (error) {
                _this.component.finishedLoading.emit(error);
            });
        };
        /**
         * treatLoadResponse method
         * @param {any} response
         * @return void
         */
        ServerDataProvider.prototype.treatLoadResponse = function (response) {
            var data = response.body;
            if (this.component.paginationParameters) {
                this.treatLoadResponseWithPaginationParameters(data);
            }
            else {
                this.treatLoadResponseWithoutPaginationParameters(response, data);
            }
        };
        /**
         * treatLoadResponseWithPaginationParameters method
         * @param {any} data
         * @returns void
         */
        ServerDataProvider.prototype.treatLoadResponseWithPaginationParameters = function (data) {
            var contentIndex = this.component.paginationParameters.contentIndex;
            var totalIndex = this.component.paginationParameters.totalElementsIndex;
            this.component.value = (data[contentIndex]) ? data[contentIndex] : data;
            this.component.pDatatableComponent.totalRecords = (data[totalIndex]) ? data[totalIndex] : this.component.value.length;
        };
        /**
         * treatLoadResponseWithoutPaginationParameters method
         * @param {any} response
         * @param {any} data
         * @returns void
         */
        ServerDataProvider.prototype.treatLoadResponseWithoutPaginationParameters = function (response, data) {
            if (response.headers.has('x-total-count')) {
                this.component.pDatatableComponent.totalRecords = parseInt(response.headers.get('x-total-count'), 10);
                this.component.value = data;
            }
            else {
                this.component.pDatatableComponent.totalRecords = data.totalElements;
                this.component.value = data.content;
            }
        };
        /**
         * retrieveAndSaveQuery method
         * @param {any} query
         * @returns any
         */
        ServerDataProvider.prototype.retrieveAndSaveQuery = function (query) {
            var oldQuery = this._query;
            var currentQuery = this.doRetrieveAndSaveQuery(query);
            this.resetToFirstPageIfQueryChanged(oldQuery, currentQuery);
            return currentQuery;
        };
        /**
         * doRetrieveAndSaveQuery method
         * @param {any} query
         * @returns any
         */
        ServerDataProvider.prototype.doRetrieveAndSaveQuery = function (query) {
            if ('object' === typeof query && query.value) {
                this._query = query.value;
            }
            else if (query) {
                this._query = query;
            }
            return this._query;
        };
        /**
         * resetToFirstPageIfQueryChanged method
         * @param {any} oldQuery
         * @param {any} currentQuery
         * @returns void
         */
        ServerDataProvider.prototype.resetToFirstPageIfQueryChanged = function (oldQuery, currentQuery) {
            if (oldQuery !== currentQuery) {
                this.currentLazyLoadEvent.first = 0;
                this.component.pDatatableComponent.first = 0;
            }
        };
        /**
         * reset method
         * @returns void
         */
        ServerDataProvider.prototype.reset = function () {
            this._query = undefined;
        };
        return ServerDataProvider;
    }());

    /**
     * Class MemoryDataProvider
     * @class
     */
    var MemoryDataProvider = /** @class */ (function () {
        /**
         * constructor method
         * @param {DatatableComponent} component
         * @constructor
         */
        function MemoryDataProvider(component) {
            this.component = component;
        }
        /**
         * load method
         * @param {any} query
         * @returns void
         */
        MemoryDataProvider.prototype.load = function (query) {
            this.component.pDatatableComponent.reset();
            for (var prop in query) {
                var matchMode = 'contains';
                if (query[prop] instanceof Array) {
                    matchMode = 'in';
                }
                this.component.pDatatableComponent.filter(query[prop], prop, matchMode);
            }
            this.component.pDatatableComponent.globalFilterFields = query;
            this.component.pDatatableComponent._filter();
        };
        /**
         * reset method
         * @returns void
         */
        MemoryDataProvider.prototype.reset = function () {
            this.component.pDatatableComponent.globalFilterFields = undefined;
        };
        return MemoryDataProvider;
    }());

    /**
     * Enum DataProviderType
     * @enum
     */

    (function (DataProviderType) {
        DataProviderType["Memory"] = "memory";
        DataProviderType["Server"] = "server";
    })(exports.DataProviderType || (exports.DataProviderType = {}));
    /**
     * Class DataProviderFactory
     * @class
     */
    var DataProviderFactory = /** @class */ (function () {
        /**
         * constructor method
         * @constructor
         * @param {DatatableService} datatableService
         */
        function DataProviderFactory(datatableService) {
            this.datatableService = datatableService;
        }
        /**
         * create method
         * @param {DataProviderType} type
         * @param {DatatableComponent} component
         * @public
         * @returns DataProvider
         */
        DataProviderFactory.prototype.create = function (type, component) {
            if (exports.DataProviderType.Server === type) {
                return new ServerDataProvider(this.datatableService, component);
            }
            if (exports.DataProviderType.Memory === type) {
                return new MemoryDataProvider(component);
            }
        };
        DataProviderFactory.ctorParameters = function () { return [
            { type: DatatableService }
        ]; };
        DataProviderFactory.ɵprov = core.ɵɵdefineInjectable({ factory: function DataProviderFactory_Factory() { return new DataProviderFactory(core.ɵɵinject(DatatableService)); }, token: DataProviderFactory, providedIn: "root" });
DataProviderFactory.ɵfac = function DataProviderFactory_Factory(t) { return new (t || DataProviderFactory)(ɵngcc0.ɵɵinject(DatatableService)); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataProviderFactory, [{
        type: core.Injectable,
        args: [{
                providedIn: "root"
            }]
    }], function () { return [{ type: DatatableService }]; }, null); })();
        return DataProviderFactory;
    }());

    /**
     * Class DatatableButtonComponent
     * @class
     */
    var DatatableButtonComponent = /** @class */ (function () {
        function DatatableButtonComponent() {
            /**
             * allowMultipleSelection property
             * @type {boolean}
             */
            this.allowMultipleSelection = true;
            /**
             * disabled property
             * @type boolean
             */
            this.disabled = false;
            /**
             * click property
             * @type {EventEmitter<any>}
             */
            this.click = new core.EventEmitter();
        }
        /**
         * onClick method
         * @param {any} event
         * @return void
         */
        DatatableButtonComponent.prototype.onClick = function (event) {
            this.click.emit(event);
            event.stopPropagation();
        };
        __decorate([
            core.Input()
        ], DatatableButtonComponent.prototype, "icon", void 0);
        __decorate([
            core.Input()
        ], DatatableButtonComponent.prototype, "class", void 0);
        __decorate([
            core.Input()
        ], DatatableButtonComponent.prototype, "bTooltip", void 0);
        __decorate([
            core.Input()
        ], DatatableButtonComponent.prototype, "name", void 0);
        __decorate([
            core.Input()
        ], DatatableButtonComponent.prototype, "allowMultipleSelection", void 0);
        __decorate([
            core.Input()
        ], DatatableButtonComponent.prototype, "disabled", void 0);
        __decorate([
            core.Output()
        ], DatatableButtonComponent.prototype, "click", void 0);
DatatableButtonComponent.ɵfac = function DatatableButtonComponent_Factory(t) { return new (t || DatatableButtonComponent)(); };
DatatableButtonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DatatableButtonComponent, selectors: [["basis-datatable-button"]], inputs: { allowMultipleSelection: "allowMultipleSelection", disabled: "disabled", icon: "icon", class: "class", bTooltip: "bTooltip", name: "name" }, outputs: { click: "click" }, decls: 2, vars: 6, consts: [[3, "pTooltip"], ["type", "button", "tooltipPosition", "bottom", "pButton", "", 3, "icon", "disabled", "click"]], template: function DatatableButtonComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "p", 0);
        ɵngcc0.ɵɵelementStart(1, "button", 1);
        ɵngcc0.ɵɵlistener("click", function DatatableButtonComponent_Template_button_click_1_listener($event) { return ctx.onClick($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵpropertyInterpolate("pTooltip", ctx.bTooltip);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.class);
        ɵngcc0.ɵɵpropertyInterpolate1("icon", "ui-icon-", ctx.icon, "");
        ɵngcc0.ɵɵproperty("disabled", ctx.disabled);
    } }, directives: [ɵngcc2.Tooltip, ɵngcc2.ButtonDirective], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DatatableButtonComponent, [{
        type: core.Component,
        args: [{
                selector: 'basis-datatable-button',
                template: "<p pTooltip=\"{{ bTooltip }}\">\n    <button\n        type=\"button\" tooltipPosition=\"bottom\" class=\"{{ class }}\"\n        icon=\"ui-icon-{{ icon }}\" (click)=\"onClick($event)\" [disabled]=\"disabled\" pButton>\n    </button>\n</p>\n"
            }]
    }], function () { return []; }, { allowMultipleSelection: [{
            type: core.Input
        }], disabled: [{
            type: core.Input
        }], click: [{
            type: core.Output
        }], icon: [{
            type: core.Input
        }], class: [{
            type: core.Input
        }], bTooltip: [{
            type: core.Input
        }], name: [{
            type: core.Input
        }] }); })();
        return DatatableButtonComponent;
    }());

    /**
     * Class DatatableClickEvent
     * @class
     */
    var DatatableClickEvent = /** @class */ (function () {
        /**
         * constructor method
         * @constructor
         * @param {string} button
         * @param {any} selection
         */
        function DatatableClickEvent(button, selection) {
            this.button = button;
            this.selection = selection;
        }
        return DatatableClickEvent;
    }());

    var Column = /** @class */ (function () {
        function Column() {
            this.filterType = 'text';
            this.exportable = true;
            this.resizable = true;
            this.sortFunction = new core.EventEmitter();
        }
        Column.prototype.ngAfterContentInit = function () {
            var _this = this;
            this.templates.forEach(function (item) {
                switch (item.getType()) {
                    case 'header':
                        _this.headerTemplate = item.template;
                        break;
                    case 'body':
                        _this.bodyTemplate = item.template;
                        break;
                    case 'footer':
                        _this.footerTemplate = item.template;
                        break;
                    case 'filter':
                        _this.filterTemplate = item.template;
                        break;
                    case 'editor':
                        _this.editorTemplate = item.template;
                        break;
                    case 'input':
                        _this.inputTemplate = item.template;
                        break;
                    case 'output':
                        _this.outputTemplate = item.template;
                        break;
                    default:
                        _this.bodyTemplate = item.template;
                        break;
                }
            });
        };
        __decorate([
            core.Input()
        ], Column.prototype, "field", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "colId", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "sortField", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "filterField", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "header", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "footer", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "sortable", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "editable", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "filter", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "filterMatchMode", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "filterType", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "excludeGlobalFilter", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "rowspan", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "colspan", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "scope", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "style", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "styleClass", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "exportable", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "headerStyle", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "headerStyleClass", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "bodyStyle", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "bodyStyleClass", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "footerStyle", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "footerStyleClass", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "hidden", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "expander", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "selectionMode", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "filterPlaceholder", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "filterMaxlength", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "frozen", void 0);
        __decorate([
            core.Input()
        ], Column.prototype, "resizable", void 0);
        __decorate([
            core.Output()
        ], Column.prototype, "sortFunction", void 0);
        __decorate([
            core.ContentChildren(primeng.PrimeTemplate)
        ], Column.prototype, "templates", void 0);
        __decorate([
            core.ContentChild(core.TemplateRef)
        ], Column.prototype, "template", void 0);
Column.ɵfac = function Column_Factory(t) { return new (t || Column)(); };
Column.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Column, selectors: [["p-column"]], contentQueries: function Column_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, core.TemplateRef, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, primeng.PrimeTemplate, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);
    } }, inputs: { filterType: "filterType", exportable: "exportable", resizable: "resizable", field: "field", colId: "colId", sortField: "sortField", filterField: "filterField", header: "header", footer: "footer", sortable: "sortable", editable: "editable", filter: "filter", filterMatchMode: "filterMatchMode", excludeGlobalFilter: "excludeGlobalFilter", rowspan: "rowspan", colspan: "colspan", scope: "scope", style: "style", styleClass: "styleClass", headerStyle: "headerStyle", headerStyleClass: "headerStyleClass", bodyStyle: "bodyStyle", bodyStyleClass: "bodyStyleClass", footerStyle: "footerStyle", footerStyleClass: "footerStyleClass", hidden: "hidden", expander: "expander", selectionMode: "selectionMode", filterPlaceholder: "filterPlaceholder", filterMaxlength: "filterMaxlength", frozen: "frozen" }, outputs: { sortFunction: "sortFunction" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Column, [{
        type: core.Directive,
        args: [{
                selector: 'p-column'
            }]
    }], function () { return []; }, { filterType: [{
            type: core.Input
        }], exportable: [{
            type: core.Input
        }], resizable: [{
            type: core.Input
        }], sortFunction: [{
            type: core.Output
        }], field: [{
            type: core.Input
        }], colId: [{
            type: core.Input
        }], sortField: [{
            type: core.Input
        }], filterField: [{
            type: core.Input
        }], header: [{
            type: core.Input
        }], footer: [{
            type: core.Input
        }], sortable: [{
            type: core.Input
        }], editable: [{
            type: core.Input
        }], filter: [{
            type: core.Input
        }], filterMatchMode: [{
            type: core.Input
        }], excludeGlobalFilter: [{
            type: core.Input
        }], rowspan: [{
            type: core.Input
        }], colspan: [{
            type: core.Input
        }], scope: [{
            type: core.Input
        }], style: [{
            type: core.Input
        }], styleClass: [{
            type: core.Input
        }], headerStyle: [{
            type: core.Input
        }], headerStyleClass: [{
            type: core.Input
        }], bodyStyle: [{
            type: core.Input
        }], bodyStyleClass: [{
            type: core.Input
        }], footerStyle: [{
            type: core.Input
        }], footerStyleClass: [{
            type: core.Input
        }], hidden: [{
            type: core.Input
        }], expander: [{
            type: core.Input
        }], selectionMode: [{
            type: core.Input
        }], filterPlaceholder: [{
            type: core.Input
        }], filterMaxlength: [{
            type: core.Input
        }], frozen: [{
            type: core.Input
        }], templates: [{
            type: core.ContentChildren,
            args: [primeng.PrimeTemplate]
        }], template: [{
            type: core.ContentChild,
            args: [core.TemplateRef]
        }] }); })();
        return Column;
    }());

    /**
     * Class DatatableComponent
     * @class
     */
    var DatatableComponent = /** @class */ (function () {
        /**
         * constructor method
         * @constructor
         * @param {ChangeDetectorRef} changeDetectorRef
         * @param {DataProviderFactory} dataProviderFactory
         * @param {Authorization} authorizationService
         */
        function DatatableComponent(changeDetectorRef, dataProviderFactory, authorizationService) {
            this.changeDetectorRef = changeDetectorRef;
            this.dataProviderFactory = dataProviderFactory;
            this.authorizationService = authorizationService;
            /**
             * filterParams property
             * @type {any}
             */
            this.filterParams = {};
            /**
             * footerMsg property
             * @type {string}
             */
            this.footerMsg = '';
            /**
             * orderInSort property
             * @type {boolean}
             */
            this.orderInSort = false;
            /**
             * value property
             * @type {any}
             */
            this.value = [];
            /**
             * type property
             * @type DataProviderType
             */
            this.type = exports.DataProviderType.Server;
            /**
             * rows property
             * @type {number}
             */
            this.rows = 5;
            /**
             * showPaginationFooter property
             * @type {boolean}
             */
            this.showPaginationFooter = false;
            /**
             * disableEdit property
             * @type {boolean}
             */
            this.disableEdit = false;
            /**
             * disableView property
             * @type {boolean}
             */
            this.disableView = false;
            /**
             * disableDelete property
             * @type {boolean}
             */
            this.disableDelete = false;
            /**
             * selectionMode property
             * @type {string}
             */
            this.selectionMode = 'single';
            /**
             * enableButtonsScroll property
             * @type {boolean}
             */
            this.enableButtonsScroll = false;
            /**
             * emptyMessage property
             * @type {string}
             */
            this.emptyMessage = 'Nenhum registro encontrado.';
            /**
             * verticalButtons property
             * @type {boolean}
             */
            this.verticalButtons = true;
            /**
             * enableScroll property
             * @type {boolean}
             */
            this.enableScroll = false;
            /**
             * disableLoadingBlockUI property
             * @type {boolean}
             */
            this.disableLoadingBlockUI = false;
            /**
             * filterOnColumn property
             */
            this.filterOnColumn = false;
            /**
             * filterSelectOptions property
             */
            this.filterSelectOptions = [];
            /**
             * updateFiltroHistorico property
             */
            this.updateFilterColumn = false;
            /**
             * customFilterOptions property
             */
            this.customFilterOptions = {};
            /**
             * buttonClick property
             * @type {EventEmitter<any>}
             */
            this.buttonClick = new core.EventEmitter();
            /**
             * startedLoading property
             * @type {EventEmitter<void>}
             */
            this.startedLoading = new core.EventEmitter();
            /**
             * finishedLoading property
             * @type {EventEmitter<HttpErrorResponse>}
             */
            this.finishedLoading = new core.EventEmitter();
            /**
             * onRowSelected property
             * @type {EventEmitter<any>}
             */
            this.onRowSelected = new core.EventEmitter();
            /**
             * showHorizontalButtonsHeader property
             * @type {boolean}
             */
            this.showHorizontalButtonsHeader = false;
            /**
             * blockContent
             * @type {boolean}
             */
            this.blockContent = false;
            /**
             * visibleColumns property
             * @type {Object}
             */
            this.visibleColumns = {};
            /**
             * showVisibleColumnsControl property
             * @type {boolean}
             */
            this.showVisibleColumnsControl = false;
            /**
             * dataKey property
             * Identificador único para cada registro da tabela
             * @type {string}
             */
            this.dataKey = 'id';
            /**
             * onRowEditEvent property
             * Evento disparado quando o usuário realiza ações de edição em uma linha da tabela
             * @type {EventEmitter<void>}
             */
            this.onRowEditEvent = new core.EventEmitter();
            this.clonedRowData = {};
            /**
             * errorMessage property
             * @type {string}
             */
            this.errorMessage = 'Ocorreu um erro ao carregar os dados da tabela. Tente novamente.';
            this.editingRow = false;
        }
        /**
         * ngOnInit method
         * @returns void
         */
        DatatableComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.dataProvider = this.dataProviderFactory.create(this.type, this);
            this.pDatatableComponent.rows = this.rows;
            this.subscribeToLoadingEvents();
            this.initRowsPerPageOptionsIfPresent();
            this.defineIfShouldShowHorizontalButtonsHeader();
            this.updateOnValueChange();
            this.finishedLoading.subscribe(function () {
                _this.updateOnValueChange();
            });
        };
        /**
         * subscribeFromValueChange method
         * @returns void
         */
        DatatableComponent.prototype.updateOnValueChange = function () {
            var _this = this;
            this.filterSelectOptions = [];
            if (this.value) {
                this.value.map(function (item) {
                    _this.filterSelectOptions.push(item);
                });
            }
        };
        /**
         * subscribeToLoadingEvents method
         * @returns void
         */
        DatatableComponent.prototype.subscribeToLoadingEvents = function () {
            var _this = this;
            if (!this.disableLoadingBlockUI) {
                this.originalEmptyMessage = this.emptyMessage;
                this.startedLoading.subscribe(function () { return _this.onStartedLoading(); });
                this.finishedLoading.subscribe(function (error) { return _this.onFinishedLoading(error); });
            }
        };
        /**
         * onStartedLoading method
         * @returns void
         */
        DatatableComponent.prototype.onStartedLoading = function () {
            this.blockContent = true;
            this.emptyMessage = this.originalEmptyMessage;
        };
        /**
         * onFinishedLoading method
         * @param {HttpErrorResponse} error
         * @returns void
         */
        DatatableComponent.prototype.onFinishedLoading = function (error) {
            this.blockContent = false;
            if (error) {
                this.emptyMessage = this.errorMessage;
            }
        };
        /**
         * initRowsPerPageOptionsIfPresent method
         * @returns void
         */
        DatatableComponent.prototype.initRowsPerPageOptionsIfPresent = function () {
            if (this.rowsPerPageOptions) {
                this.pDatatableComponent.rowsPerPageOptions = this.rowsPerPageOptions;
            }
        };
        /**
         * defineIfShouldShowHorizontalButtonsHeader method
         * @returns void
         */
        DatatableComponent.prototype.defineIfShouldShowHorizontalButtonsHeader = function () {
            if (this.horizontalButtonsHeader) {
                this.showHorizontalButtonsHeader = true;
            }
        };
        /**
         * ngAfterViewInit method
         * @returns void
         */
        DatatableComponent.prototype.ngAfterViewInit = function () {
            this.setExtraParams();
            this.pDatatableComponent.columns = this.columns;
            this.pDatatableComponent.ngAfterContentInit();
            this.setAllColumnsVisible();
            this.changeDetectorRef.detectChanges();
        };
        /**
         * setExtraParams method
         * @returns void
         */
        DatatableComponent.prototype.setExtraParams = function () {
            for (var i in this.extraParams) {
                this.pDatatableComponent[i] = this.extraParams[i];
            }
        };
        /**
         * ngAfterContentInit method
         * @returns void
         */
        DatatableComponent.prototype.ngAfterContentInit = function () {
            var _this = this;
            this.extraButtons.forEach(function (button) {
                button.click.subscribe(function (event) {
                    _this.onClick(button.name, event);
                });
            });
        };
        /**
         * onClick method
         * @param {string} button
         * @param {any} event
         * @return void
         */
        DatatableComponent.prototype.onClick = function (button, event) {
            this.buttonClick.emit(new DatatableClickEvent(button, this.selectedRow));
            event.stopPropagation();
            this.resetSelectedRow(button);
        };
        /**
         * onSelectChange method
         * @param {any} event
         * @returns void
         */
        DatatableComponent.prototype.onSelectChange = function (event) {
            this.onRowSelected.emit(this.selectedRow);
            if (Array.isArray(this.selectedRow) && this.selectedRow.length > 1) {
                this.updateMultipleButtonsStatus(true);
            }
            else {
                this.updateMultipleButtonsStatus(false);
            }
        };
        /**
         * updateMultipleButtonsStatus method
         * @param {boolean} hasMultipleSelection
         * @return void
         */
        DatatableComponent.prototype.updateMultipleButtonsStatus = function (hasMultipleSelection) {
            this.extraButtons.forEach(function (button) {
                if (hasMultipleSelection && !button.allowMultipleSelection) {
                    button.disabled = true;
                }
                else {
                    button.disabled = false;
                }
            });
        };
        /**
         * refresh method
         * @param query
         * @returns void
         */
        DatatableComponent.prototype.refresh = function (query) {
            this.dataProvider.load(query);
        };
        /**
         * resetSelectedRow method
         * @param button
         * @returns void
         */
        DatatableComponent.prototype.resetSelectedRow = function (button) {
            if (button === 'delete') {
                this.selectedRow = null;
            }
        };
        /**
         * reset method
         * @returns void
         */
        DatatableComponent.prototype.reset = function () {
            this.pDatatableComponent.first = 0;
            this.dataProvider.reset();
            this.refresh();
        };
        /**
         * paginationFooterText method
         * @param {string} msg
         * @returns string
         */
        DatatableComponent.prototype.paginationFooterText = function (msg) {
            var registros = this.totalRecords() === 1 ? 'registro' : 'registros';
            if (msg === '') {
                return "Exibindo: " + this.currentFirstIndex() + " a " + this.currentLastIndex() + " de " + this.totalRecords() + " " + registros;
            }
            msg = msg.replace('{totalRecords}', this.totalRecords().toString());
            msg = msg.replace('{currentFirstIndex}', this.currentFirstIndex().toString());
            msg = msg.replace('{currentLastIndex}', this.currentLastIndex().toString());
            return msg;
        };
        /**
         * currentFirstIndex method
         * @returns number
         */
        DatatableComponent.prototype.currentFirstIndex = function () {
            return this.pDatatableComponent.first + 1;
        };
        /**
         * currentLastIndex method
         * @returns number
         */
        DatatableComponent.prototype.currentLastIndex = function () {
            var currentLastIndex = this.pDatatableComponent.first + this.pDatatableComponent.rows;
            if (currentLastIndex > this.totalRecords()) {
                return this.totalRecords();
            }
            return currentLastIndex;
        };
        /**
         * totalRecords method
         * @returns number
         */
        DatatableComponent.prototype.totalRecords = function () {
            return this.pDatatableComponent.totalRecords;
        };
        /**
         * checkRolesToButton method
         * @param {string} button
         * @return boolean
         */
        DatatableComponent.prototype.checkRolesToButton = function (button) {
            if (this[button]) {
                if (button === 'rulesToHide' || button === 'rulesToShowEdit' || button === 'rulesToShowDelete') {
                    this.checkUseButtons(button);
                    return this.authorizationService.hasRole(this[button]);
                }
                return !this.authorizationService.hasRole(this[button]);
            }
            return true;
        };
        /**
         * checkUseButtons method
         * @param {string} button
         * @returns void
         */
        DatatableComponent.prototype.checkUseButtons = function (button) {
            if (this[button] && this[button.replace('Show', 'Hide')]) {
                throw new Error('Não é possível definir dois valores de roles para os botões padrões.');
            }
        };
        /**
         * filter method
         * @returns void
         */
        DatatableComponent.prototype.filter = function () {
            for (var prop in this.filterParams) {
                if (this.filterParams[prop] === '' || (this.filterParams[prop].length === 0)) {
                    delete this.filterParams[prop];
                }
            }
            if (Object.getOwnPropertyNames(this.filterParams).length === 0) {
                this.reset();
            }
            else {
                this.refresh(this.filterParams);
            }
        };
        /**
         * Método para filtrar por colunas
         * @param column chave da coluna na tabela
         * @param filters valor do filtro
         */
        DatatableComponent.prototype.filterColumn = function (column, filters) {
            var values = [];
            if (filters instanceof Array) {
                values[column] = [];
                for (var item in filters) {
                    var val = (filters[item] instanceof Object) ? filters[item].value : filters[item];
                    values[column].push(val);
                }
            }
            else {
                values[column] = filters;
            }
            this.filterParams = __assign(__assign({}, this.filterParams), values);
            return this.filter();
        };
        /**
         * Inicia todas as colunas da tabela como visíveis
         */
        DatatableComponent.prototype.setAllColumnsVisible = function () {
            var _this = this;
            this.columns.forEach(function (col) {
                _this.visibleColumns[col.field] = 'table-cell';
            });
        };
        /**
         * Verifica se uma coluna deve estar visível
         * @param column string
         * @param visibleColumns Array
         */
        DatatableComponent.prototype.visibleColumnCheck = function (column, visibleColumns) {
            return visibleColumns.some(function (item) {
                return (item.field) ? item.field == column : true;
            });
        };
        /**
         * Atualzia os valores da variável 'visibleColuns' para mostrar ou não as colunas
         * @param columns array
         */
        DatatableComponent.prototype.updateVisibleColumns = function (columns) {
            for (var col in this.visibleColumns) {
                if (this.visibleColumnCheck(col, columns)) {
                    this.visibleColumns[col] = 'table-cell';
                }
                else {
                    this.visibleColumns[col] = 'none';
                }
            }
        };
        DatatableComponent.prototype.onRowEditInitEvent = function (event, rowData) {
            var _this = this;
            var tr = event.srcElement.closest('tr');
            setTimeout(function () {
                _this.editingRow = true;
                var top = tr.offsetTop;
                var height = tr.offsetHeight;
                var editButtons = tr.querySelector('.editar-campos');
                editButtons.style.top = (top + height - 75) + 'px';
                editButtons.style.height = '75px';
                editButtons.style.backgroundColor = '#d0d0d0';
                editButtons.style.opacity = 1;
                _this.clonedRowData[rowData.id] = __assign({}, rowData);
                _this.onRowEditEvent.emit({ event: "init", data: rowData });
            }, null, tr);
        };
        DatatableComponent.prototype.onRowEditSaveEvent = function (event, rowData) {
            this.onRowEditEvent.emit({ event: "save", data: rowData });
            this.resetEditingMode(event);
        };
        DatatableComponent.prototype.onRowEditCancelEvent = function (event, rowData, index) {
            this.value[index] = this.clonedRowData[rowData.id];
            delete this.clonedRowData[rowData[this.dataKey]];
            this.onRowEditEvent.emit({ event: "cancel", data: rowData });
            this.resetEditingMode(event);
        };
        DatatableComponent.prototype.resetEditingMode = function (event) {
            var editButtons = event.srcElement.closest('tr').querySelector('.editar-campos');
            editButtons.style.opacity = 0;
            editButtons.style.backgroundColor = '#0000006b';
            editButtons.style.display = 'none';
            this.editingRow = false;
        };
        DatatableComponent.prototype.editarLinhaOver = function (event) {
            if (!this.editingRow && this.editMode == 'row') {
                var top_1 = event.srcElement.closest('tr').offsetTop;
                var height = event.srcElement.closest('tr').offsetHeight;
                var editButtons = event.srcElement.closest('tr').querySelector('.editar-campos');
                editButtons.style.display = 'flex';
                editButtons.style.top = top_1 + 'px';
                editButtons.style.height = height + 'px';
                editButtons.style.backgroundColor = '#0000006b';
                editButtons.style.opacity = 1;
            }
        };
        DatatableComponent.prototype.editarLinhaOut = function (event) {
            if (!this.editingRow) {
                var editButtons = event.srcElement.closest('tr').querySelector('.editar-campos');
                editButtons.style.display = 'none';
                editButtons.style.opacity = 0;
            }
        };
        DatatableComponent.ctorParameters = function () { return [
            { type: core.ChangeDetectorRef },
            { type: DataProviderFactory },
            { type: angularBase.Authorization }
        ]; };
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "splitButton", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "value", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "type", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "rows", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "rowsPerPageOptions", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "url", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "extraParams", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "paginationParameters", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "showPaginationFooter", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "disableEdit", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "disableView", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "disableDelete", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "selectionMode", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "enableButtonsScroll", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "emptyMessage", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "verticalButtons", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "enableScroll", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "scrollHeight", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "scrollWidth", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "rulesToHide", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "rulesToShowEdit", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "rulesToShowDelete", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "rulesToHideView", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "rulesToHideEdit", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "rulesToHideDelete", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "disableLoadingBlockUI", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "rowStyleClass", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "filterOnColumn", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "customFilterOptions", void 0);
        __decorate([
            core.Output()
        ], DatatableComponent.prototype, "buttonClick", void 0);
        __decorate([
            core.ViewChild(table.Table, { static: true })
        ], DatatableComponent.prototype, "pDatatableComponent", void 0);
        __decorate([
            core.ContentChildren(DatatableButtonComponent)
        ], DatatableComponent.prototype, "extraButtons", void 0);
        __decorate([
            core.ContentChildren(Column)
        ], DatatableComponent.prototype, "columns", void 0);
        __decorate([
            core.Output()
        ], DatatableComponent.prototype, "startedLoading", void 0);
        __decorate([
            core.Output()
        ], DatatableComponent.prototype, "finishedLoading", void 0);
        __decorate([
            core.Output()
        ], DatatableComponent.prototype, "onRowSelected", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "showVisibleColumnsControl", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "editMode", void 0);
        __decorate([
            core.Input()
        ], DatatableComponent.prototype, "dataKey", void 0);
        __decorate([
            core.Output()
        ], DatatableComponent.prototype, "onRowEditEvent", void 0);
DatatableComponent.ɵfac = function DatatableComponent_Factory(t) { return new (t || DatatableComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DataProviderFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Authorization)); };
DatatableComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DatatableComponent, selectors: [["basis-datatable"]], contentQueries: function DatatableComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, DatatableButtonComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, Column, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.extraButtons = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columns = _t);
    } }, viewQuery: function DatatableComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(table.Table, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.pDatatableComponent = _t.first);
    } }, inputs: { value: "value", type: "type", rows: "rows", showPaginationFooter: "showPaginationFooter", disableEdit: "disableEdit", disableView: "disableView", disableDelete: "disableDelete", selectionMode: "selectionMode", enableButtonsScroll: "enableButtonsScroll", emptyMessage: "emptyMessage", verticalButtons: "verticalButtons", enableScroll: "enableScroll", disableLoadingBlockUI: "disableLoadingBlockUI", filterOnColumn: "filterOnColumn", customFilterOptions: "customFilterOptions", showVisibleColumnsControl: "showVisibleColumnsControl", dataKey: "dataKey", splitButton: "splitButton", rowsPerPageOptions: "rowsPerPageOptions", url: "url", extraParams: "extraParams", paginationParameters: "paginationParameters", scrollHeight: "scrollHeight", scrollWidth: "scrollWidth", rulesToHide: "rulesToHide", rulesToShowEdit: "rulesToShowEdit", rulesToShowDelete: "rulesToShowDelete", rulesToHideView: "rulesToHideView", rulesToHideEdit: "rulesToHideEdit", rulesToHideDelete: "rulesToHideDelete", rowStyleClass: "rowStyleClass", editMode: "editMode" }, outputs: { buttonClick: "buttonClick", startedLoading: "startedLoading", finishedLoading: "finishedLoading", onRowSelected: "onRowSelected", onRowEditEvent: "onRowEditEvent" }, ngContentSelectors: _c9, decls: 17, vars: 26, consts: [[3, "blocked"], [1, "center-spinner"], [3, "ngClass"], [3, "columns", "updateVisibleColumns", 4, "ngIf"], [3, "value", "rows", "paginator", "selectionMode", "responsive", "scrollable", "scrollHeight", "selection", "editMode", "dataKey", "selectionChange", "onRowSelect", "onRowUnselect"], ["datatable", ""], ["pTemplate", "header"], ["pTemplate", "body"], [4, "ngIf"], ["class", "ui-g-1 ui-g-nopad", 3, "position", "top", 4, "ngIf"], ["defaultButtons", ""], [3, "columns", "updateVisibleColumns"], ["class", "ui-g", 4, "ngIf"], [3, "pSortableColumn", "ngStyle", 4, "ngFor", "ngForOf"], [1, "ui-g"], ["class", "ui-g-4 ui-sm-12", 4, "ngIf"], [4, "ngTemplateOutlet"], [1, "ui-g-4", "ui-sm-12"], [1, "horizontal-buttons-header"], [3, "pSortableColumn", "ngStyle"], [3, "field", 4, "ngIf"], [3, "field"], [3, "ngStyle", 4, "ngFor", "ngForOf"], [3, "ngStyle"], [3, "listaOriginal", "lista", "field", "updateFiltro", "filterType", "tableType", "customFilterOptions", "outputEvent"], [3, "pSelectableRow", "pContextMenuRow", "pEditableRow", "ngClass", "mouseover", "mouseleave"], ["class", "editar-campos", 4, "ngIf"], [3, "innerHTML", 4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf"], [3, "innerHTML"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["pTemplate", "input"], ["pTemplate", "output"], ["class", "ui-md-12", 4, "ngIf"], [1, "ui-md-12"], [1, "ui-g", "form-group"], [1, "md-inputfield"], ["pInputText", "", "type", "text", 3, "ngModel", "ngModelChange"], [1, "editar-campos"], ["pButton", "", "type", "button", "pInitEditableRow", "", 3, "click", 4, "ngIf"], ["pButton", "", "type", "button", "pSaveEditableRow", "", "class", "ui-button-success", "style", "margin-right: .5em", 3, "click", 4, "ngIf"], ["pButton", "", "type", "button", "pCancelEditableRow", "", "class", "ui-button-danger", 3, "click", 4, "ngIf"], ["pButton", "", "type", "button", "pInitEditableRow", "", 3, "click"], ["pButton", "", "type", "button", "pSaveEditableRow", "", 1, "ui-button-success", 2, "margin-right", ".5em", 3, "click"], ["pButton", "", "type", "button", "pCancelEditableRow", "", 1, "ui-button-danger", 3, "click"], [1, "ui-g-1", "ui-g-nopad"], ["class", "ui-button-success", "icon", "edit", 3, "bTooltip", "horizontal-button", "disabled", "click", 4, "ngIf"], ["icon", "remove-red-eye", 3, "bTooltip", "horizontal-button", "disabled", "click", 4, "ngIf"], ["class", "ui-button-danger", "icon", "delete", 3, "bTooltip", "horizontal-button", "disabled", "click", 4, "ngIf"], [3, "icon", "class", "items", "label", "method", 4, "ngIf"], ["icon", "edit", 1, "ui-button-success", 3, "bTooltip", "disabled", "click"], ["icon", "remove-red-eye", 3, "bTooltip", "disabled", "click"], ["icon", "delete", 1, "ui-button-danger", 3, "bTooltip", "disabled", "click"], [3, "icon", "items", "label", "method"]], template: function DatatableComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c6);
        ɵngcc0.ɵɵelementStart(0, "p-blockUI", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelement(2, "p-progressSpinner");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div", 2);
        ɵngcc0.ɵɵtext(4, "\u00A0");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "div", 2);
        ɵngcc0.ɵɵtemplate(6, DatatableComponent_basis_show_column_6_Template, 1, 1, "basis-show-column", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div", 2);
        ɵngcc0.ɵɵelementStart(8, "p-table", 4, 5);
        ɵngcc0.ɵɵlistener("selectionChange", function DatatableComponent_Template_p_table_selectionChange_8_listener($event) { return ctx.selectedRow = $event; })("onRowSelect", function DatatableComponent_Template_p_table_onRowSelect_8_listener($event) { return ctx.onSelectChange($event); })("onRowUnselect", function DatatableComponent_Template_p_table_onRowUnselect_8_listener($event) { return ctx.onSelectChange($event); });
        ɵngcc0.ɵɵtemplate(10, DatatableComponent_ng_template_10_Template, 4, 3, "ng-template", 6);
        ɵngcc0.ɵɵtemplate(11, DatatableComponent_ng_template_11_Template, 2, 7, "ng-template", 7);
        ɵngcc0.ɵɵtemplate(12, DatatableComponent_12_Template, 1, 0, undefined, 8);
        ɵngcc0.ɵɵtemplate(13, DatatableComponent_p_footer_13_Template, 2, 1, "p-footer", 8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(14, DatatableComponent_div_14_Template, 3, 5, "div", 9);
        ɵngcc0.ɵɵtemplate(15, DatatableComponent_ng_template_15_Template, 4, 4, "ng-template", null, 10, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("blocked", ctx.blockContent);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(18, _c7, ctx.verticalButtons, !ctx.verticalButtons));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ctx.verticalButtons ? "ui-g-11" : "ui-g-12");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showVisibleColumnsControl);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction4(21, _c8, ctx.verticalButtons, !ctx.verticalButtons, ctx.editMode == "row", ctx.editingRow));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("value", ctx.value)("rows", ctx.rows)("paginator", true)("selectionMode", ctx.selectionMode)("responsive", true)("scrollable", ctx.enableScroll)("scrollHeight", ctx.scrollHeight)("selection", ctx.selectedRow)("editMode", ctx.editMode)("dataKey", ctx.dataKey);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.emptyMessage);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showPaginationFooter && ctx.totalRecords() > 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.verticalButtons);
    } }, directives: function () { return [ɵngcc2.BlockUI, ɵngcc2.ProgressSpinner, ɵngcc4.NgClass, ɵngcc4.NgIf, ɵngcc5.Table, ɵngcc6.PrimeTemplate, ShowColumn, ɵngcc4.NgForOf, ɵngcc4.NgTemplateOutlet, ɵngcc5.SortableColumn, ɵngcc4.NgStyle, ɵngcc5.SortIcon, FilterColumn, ɵngcc5.SelectableRow, ɵngcc5.ContextMenuRow, ɵngcc5.EditableRow, ɵngcc5.CellEditor, ɵngcc7.DefaultValueAccessor, ɵngcc2.InputText, ɵngcc7.NgControlStatus, ɵngcc7.NgModel, ɵngcc2.ButtonDirective, ɵngcc5.InitEditableRow, ɵngcc5.SaveEditableRow, ɵngcc5.CancelEditableRow, ɵngcc6.Footer, DatatableButtonComponent,
        DatatableSplitbuttonComponent]; }, styles: ["body .ui-datatable .ui-datatable-data tr td{word-wrap:break-word}.horizontal-buttons{display:flex;flex-flow:row wrap;justify-content:flex-end}.horizontal-button{padding:0 3px}.horizontal-buttons-header{font-size:1.3em;word-wrap:break-word}.center-spinner{display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;min-height:100vh}.text-right{text-align:right}basis-show-column .ui-multiselect-panel.ui-widget{width:100%;max-width:100%}.edicao-tabela,.edita-linha{position:relative}tr.editing td{padding-bottom:75px!important}.editar-campos{opacity:0;position:absolute;width:100%;background-color:#0000006b;left:0;margin-top:0;display:flex;align-items:center;justify-content:center;min-height:35px;transition:.3s ease-in-out;z-index:1}.editar-campos button{color:#fff;font-size:14px;padding:6px 30px 10px;border-radius:5px;height:28px;width:120px!important}.bt-cancelar,.bt-salvar{margin:0 10px}"], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DatatableComponent, [{
        type: core.Component,
        args: [{
                selector: 'basis-datatable',
                template: "<p-blockUI [blocked]=\"blockContent\">\n    <div class=\"center-spinner\">\n        <p-progressSpinner></p-progressSpinner>\n    </div>\n</p-blockUI>\n<div [ngClass]=\"{'ui-g-2':verticalButtons, 'ui-g-5':!verticalButtons}\">&nbsp;</div>\n<div [ngClass]=\"verticalButtons ? 'ui-g-11' : 'ui-g-12'\">\n    <basis-show-column *ngIf=\"showVisibleColumnsControl\" [columns]=\"columns\" (updateVisibleColumns)=\"updateVisibleColumns($event)\"></basis-show-column>\n</div>\n<div [ngClass]=\"{\n        'ui-g-11' : verticalButtons,\n        'ui-g-12' : !verticalButtons,\n        'edicao-tabela' : editMode == 'row',\n        'editing-row': editingRow\n    }\">\n    <p-table\n        [value]=\"value\"\n        [rows]=\"rows\"\n        [paginator]=\"true\"\n        [selectionMode]=\"selectionMode\"\n        [responsive]=\"true\"\n        [scrollable]=\"enableScroll\"\n        [scrollHeight]=\"scrollHeight\"\n        [(selection)]=\"selectedRow\"\n        [editMode]=\"editMode\"\n        (onRowSelect)=\"onSelectChange($event)\"\n        (onRowUnselect)=\"onSelectChange($event)\"\n        #datatable\n        [dataKey]=\"dataKey\">\n        <ng-template pTemplate=\"header\" let-columns>\n            <div class=\"ui-g\" *ngIf=\"!verticalButtons\">\n                <div *ngIf=\"showHorizontalButtonsHeader\" class=\"ui-g-4 ui-sm-12\">\n                    <span class=\"horizontal-buttons-header\">{{ horizontalButtonsHeader }}</span>\n                </div>\n                <div [ngClass]=\"{\n                    'horizontal-buttons': true,\n                    'ui-sm-12': true,\n                    'ui-g-8': showHorizontalButtonsHeader,\n                    'ui-g-12': !showHorizontalButtonsHeader}\">\n                    <ng-container *ngTemplateOutlet=\"defaultButtons\"></ng-container>\n                    <ng-content select=\"horizontalButtons\"></ng-content>\n                </div>\n            </div>\n            <tr>\n                <th *ngFor=\"let col of columns\"\n                    [pSortableColumn]=\"col.sortable ? col.field : null\"\n                    [ngStyle]=\"{'display': visibleColumns[col.field]}\">\n                    {{col.header}}\n                    <p-sortIcon *ngIf=\"col.sortable\" [field]=\"col.field\"></p-sortIcon>\n                </th>\n            </tr>\n            <tr *ngIf=\"filterOnColumn\">\n                <th *ngFor=\"let col of columns\" [ngStyle]=\"{'display': visibleColumns[col.field]}\">\n                    <basis-filter-column\n                        [listaOriginal]=\"filterSelectOptions\"\n                        [lista]=\"filterSelectOptions\"\n                        [field]=\"col.field\"\n                        [updateFiltro]=\"updateFilterColumn\"\n                        (outputEvent)=\"filterColumn(col.field, $event)\"\n                        [filterType]=\"col.filterType\"\n                        [tableType]=\"type\"\n                        [customFilterOptions]=\"customFilterOptions\">\n                    </basis-filter-column>\n                </th>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-editing=\"editing\" let-ri=\"rowIndex\">\n            <tr [pSelectableRow]=\"rowData\"\n                [pContextMenuRow]=\"rowData\"\n                [pEditableRow]=\"rowData\"\n                [ngClass]=\"{'editing': editing}\"\n                (mouseover)=\"editarLinhaOver($event)\"\n                (mouseleave)=\"editarLinhaOut($event)\">\n                <td *ngFor=\"let col of columns; last as isLast\" [ngStyle]=\"{'display': visibleColumns[col.field]}\" >\n                    <ng-container *ngIf=\"!editMode\">\n                        <span *ngIf=\"!col.bodyTemplate\" [innerHTML]=\"rowData[col.field]\"></span>\n                        <ng-container\n                            *ngIf=\"col.bodyTemplate\"\n                            [ngTemplateOutlet]=\"col.bodyTemplate\"\n                            [ngTemplateOutletContext]=\"{ rowData: rowData, col: col }\">\n                        </ng-container>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"editMode\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <span *ngIf=\"!col.outputTemplate && col.editable == false\" [innerHTML]=\"rowData[col.field]\"></span>\n                                <div class=\"ui-md-12\" *ngIf=\"!col.inputTemplate && col.editable != false\">\n                                    <div class=\"ui-g form-group\">\n                                        <div class=\"ui-md-12\">\n                                            <span class=\"md-inputfield\">\n                                                <input pInputText type=\"text\" [(ngModel)]=\"rowData[col.field]\" [style]=\"{'width':'100%'}\">\n                                                <label>{{ col.header }}</label>\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <ng-container\n                                    *ngIf=\"col.inputTemplate\"\n                                    [ngTemplateOutlet]=\"col.inputTemplate\"\n                                    [ngTemplateOutletContext]=\"{ 'rowData': rowData, 'col': col }\">\n                                </ng-container>\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                <span *ngIf=\"!col.outputTemplate\" [innerHTML]=\"rowData[col.field]\"></span>\n                                <ng-container\n                                    *ngIf=\"col.outputTemplate\"\n                                    [ngTemplateOutlet]=\"col.outputTemplate\"\n                                    [ngTemplateOutletContext]=\"{ rowData: rowData, col: col }\">\n                                </ng-container>\n                            </ng-template>\n                        </p-cellEditor>\n                    </ng-container>\n                    <div *ngIf=\"isLast\" class=\"editar-campos\">\n                        <button *ngIf=\"!editing\" pButton type=\"button\" pInitEditableRow (click)=\"onRowEditInitEvent($event, rowData)\">Editar</button>\n                        <button *ngIf=\"editing\" pButton type=\"button\" pSaveEditableRow class=\"ui-button-success\" style=\"margin-right: .5em\" (click)=\"onRowEditSaveEvent($event, rowData)\">Salvar</button>\n                        <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow class=\"ui-button-danger\" (click)=\"onRowEditCancelEvent($event, rowData, ri)\">Cancelar</button>\n                    </div>\n                </td>\n            </tr>\n        </ng-template>\n        <ng-template *ngIf=\"emptyMessage\">\n            {{ emptyMessage }}\n        </ng-template>\n        <p-footer *ngIf=\"showPaginationFooter && totalRecords() > 0\">\n            {{ paginationFooterText(footerMsg) }}\n        </p-footer>\n\n    </p-table>\n</div>\n<div *ngIf=\"verticalButtons\"\n    class=\"ui-g-1 ui-g-nopad\"\n    [style.position]=\"enableButtonsScroll ? 'sticky' : ''\"\n    [style.top]=\"enableButtonsScroll ? '15%' : ''\">\n        <ng-container *ngTemplateOutlet=\"defaultButtons\"></ng-container>\n        <ng-content></ng-content>\n</div>\n\n<ng-template #defaultButtons>\n    <basis-datatable-button [bTooltip]=\"selectedRow != null ? 'Editar' : 'Escolha um registro para editar.' \"\n        [class.horizontal-button]=\"!verticalButtons\" class=\"ui-button-success\" icon=\"edit\" (click)=\"onClick('edit', $event)\"\n        *ngIf=\"!disableEdit && checkRolesToButton('rulesToShowView') && checkRolesToButton('rulesToHideView')\" [disabled]=\"selectedRow == null\">\n    </basis-datatable-button>\n\n    <basis-datatable-button [bTooltip]=\"selectedRow != null ? 'Visualizar' : 'Escolha um registro para visualizar.'\"\n        [class.horizontal-button]=\"!verticalButtons\" icon=\"remove-red-eye\" (click)=\"onClick('view', $event)\"\n        *ngIf=\"!disableView && checkRolesToButton('rulesToShowEdit') && checkRolesToButton('rulesToHideEdit')\" [disabled]=\"selectedRow == null\">\n    </basis-datatable-button>\n\n    <basis-datatable-button [bTooltip]=\"selectedRow != null ? 'Excluir' : 'Escolha um registro para excluir.'\"\n        [class.horizontal-button]=\"!verticalButtons\" class=\"ui-button-danger\" icon=\"delete\" (click)=\"onClick('delete', $event)\"\n       *ngIf=\"!disableDelete && checkRolesToButton('rulesToShowDelete') && checkRolesToButton('rulesToHideDelete')\" [disabled]=\"selectedRow == null\">\n    </basis-datatable-button>\n\n    <datatable-splitbutton\n        [icon]=\"splitButton.icon\"\n        [class]=\"splitButton.class\"\n        [items]=\"splitButton.itens\"\n        [label]=\"splitButton.label\"\n        [method]=\"splitButton.method\"\n        *ngIf=\"splitButton\">\n    </datatable-splitbutton>\n</ng-template>\n",
                encapsulation: core.ViewEncapsulation.None,
                styles: ["body .ui-datatable .ui-datatable-data tr td{word-wrap:break-word}.horizontal-buttons{display:flex;flex-flow:row wrap;justify-content:flex-end}.horizontal-button{padding:0 3px}.horizontal-buttons-header{font-size:1.3em;word-wrap:break-word}.center-spinner{display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;min-height:100vh}.text-right{text-align:right}basis-show-column .ui-multiselect-panel.ui-widget{width:100%;max-width:100%}.edicao-tabela,.edita-linha{position:relative}tr.editing td{padding-bottom:75px!important}.editar-campos{opacity:0;position:absolute;width:100%;background-color:#0000006b;left:0;margin-top:0;display:flex;align-items:center;justify-content:center;min-height:35px;transition:.3s ease-in-out;z-index:1}.editar-campos button{color:#fff;font-size:14px;padding:6px 30px 10px;border-radius:5px;height:28px;width:120px!important}.bt-cancelar,.bt-salvar{margin:0 10px}"]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: DataProviderFactory }, { type: ɵngcc3.Authorization }]; }, { value: [{
            type: core.Input
        }], type: [{
            type: core.Input
        }], rows: [{
            type: core.Input
        }], showPaginationFooter: [{
            type: core.Input
        }], disableEdit: [{
            type: core.Input
        }], disableView: [{
            type: core.Input
        }], disableDelete: [{
            type: core.Input
        }], selectionMode: [{
            type: core.Input
        }], enableButtonsScroll: [{
            type: core.Input
        }], emptyMessage: [{
            type: core.Input
        }], verticalButtons: [{
            type: core.Input
        }], enableScroll: [{
            type: core.Input
        }], disableLoadingBlockUI: [{
            type: core.Input
        }], filterOnColumn: [{
            type: core.Input
        }], customFilterOptions: [{
            type: core.Input
        }], buttonClick: [{
            type: core.Output
        }], startedLoading: [{
            type: core.Output
        }], finishedLoading: [{
            type: core.Output
        }], onRowSelected: [{
            type: core.Output
        }], showVisibleColumnsControl: [{
            type: core.Input
        }], dataKey: [{
            type: core.Input
        }], onRowEditEvent: [{
            type: core.Output
        }], splitButton: [{
            type: core.Input
        }], rowsPerPageOptions: [{
            type: core.Input
        }], url: [{
            type: core.Input
        }], extraParams: [{
            type: core.Input
        }], paginationParameters: [{
            type: core.Input
        }], scrollHeight: [{
            type: core.Input
        }], scrollWidth: [{
            type: core.Input
        }], rulesToHide: [{
            type: core.Input
        }], rulesToShowEdit: [{
            type: core.Input
        }], rulesToShowDelete: [{
            type: core.Input
        }], rulesToHideView: [{
            type: core.Input
        }], rulesToHideEdit: [{
            type: core.Input
        }], rulesToHideDelete: [{
            type: core.Input
        }], rowStyleClass: [{
            type: core.Input
        }], pDatatableComponent: [{
            type: core.ViewChild,
            args: [table.Table, { static: true }]
        }], extraButtons: [{
            type: core.ContentChildren,
            args: [DatatableButtonComponent]
        }], columns: [{
            type: core.ContentChildren,
            args: [Column]
        }], editMode: [{
            type: core.Input
        }] }); })();
        return DatatableComponent;
    }());

    /**
     * Class DatatableSplitbuttonComponent
     * @class
     */
    var DatatableSplitbuttonComponent = /** @class */ (function () {
        function DatatableSplitbuttonComponent() {
        }
        /**
         * ngOnInit method
         * @returns void
         */
        DatatableSplitbuttonComponent.prototype.ngOnInit = function () {
        };
        __decorate([
            core.Input()
        ], DatatableSplitbuttonComponent.prototype, "items", void 0);
        __decorate([
            core.Input()
        ], DatatableSplitbuttonComponent.prototype, "label", void 0);
        __decorate([
            core.Input()
        ], DatatableSplitbuttonComponent.prototype, "class", void 0);
        __decorate([
            core.Input()
        ], DatatableSplitbuttonComponent.prototype, "icon", void 0);
        __decorate([
            core.Input()
        ], DatatableSplitbuttonComponent.prototype, "method", void 0);
DatatableSplitbuttonComponent.ɵfac = function DatatableSplitbuttonComponent_Factory(t) { return new (t || DatatableSplitbuttonComponent)(); };
DatatableSplitbuttonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DatatableSplitbuttonComponent, selectors: [["datatable-splitbutton"]], inputs: { items: "items", label: "label", class: "class", icon: "icon", method: "method" }, decls: 1, vars: 4, consts: [[3, "label", "icon", "model", "styleClass", "onClick"]], template: function DatatableSplitbuttonComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "p-splitButton", 0);
        ɵngcc0.ɵɵlistener("onClick", function DatatableSplitbuttonComponent_Template_p_splitButton_onClick_0_listener() { return ctx.method; });
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵpropertyInterpolate("label", ctx.label);
        ɵngcc0.ɵɵpropertyInterpolate("icon", ctx.icon);
        ɵngcc0.ɵɵpropertyInterpolate("styleClass", ctx.class);
        ɵngcc0.ɵɵproperty("model", ctx.items);
    } }, directives: [ɵngcc2.SplitButton], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DatatableSplitbuttonComponent, [{
        type: core.Component,
        args: [{
                selector: 'datatable-splitbutton',
                template: "<p-splitButton label=\"{{label}}\" icon=\"{{icon}}\" (onClick)=\"method\" [model]=\"items\" styleClass=\"{{class}}\">\n</p-splitButton>"
            }]
    }], function () { return []; }, { items: [{
            type: core.Input
        }], label: [{
            type: core.Input
        }], class: [{
            type: core.Input
        }], icon: [{
            type: core.Input
        }], method: [{
            type: core.Input
        }] }); })();
        return DatatableSplitbuttonComponent;
    }());

    /**
     * Class DatatableSplitbuttonModule
     * @class
     */
    var DatatableSplitbuttonModule = /** @class */ (function () {
        function DatatableSplitbuttonModule() {
        }
DatatableSplitbuttonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DatatableSplitbuttonModule });
DatatableSplitbuttonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DatatableSplitbuttonModule_Factory(t) { return new (t || DatatableSplitbuttonModule)(); }, providers: [], imports: [[
            primeng.SplitButtonModule
        ], ɵngcc2.SplitButtonModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DatatableSplitbuttonModule, { declarations: [DatatableSplitbuttonComponent], imports: [ɵngcc2.SplitButtonModule], exports: [DatatableSplitbuttonComponent, ɵngcc2.SplitButtonModule] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DatatableSplitbuttonModule, [{
        type: core.NgModule,
        args: [{
                imports: [
                    primeng.SplitButtonModule
                ],
                declarations: [
                    DatatableSplitbuttonComponent
                ],
                providers: [],
                exports: [
                    DatatableSplitbuttonComponent,
                    primeng.SplitButtonModule
                ],
                schemas: [core.CUSTOM_ELEMENTS_SCHEMA]
            }]
    }], function () { return []; }, null); })();
        return DatatableSplitbuttonModule;
    }());

    var FilterColumn = /** @class */ (function () {
        function FilterColumn() {
            this.listaOriginal = [];
            this.lista = [];
            this.labelDefaultImplementation = false;
            this.updateFiltro = false;
            this.customFilterOptions = {};
            this.template = 'filter_text';
            this.outputEvent = new core.EventEmitter();
            this.debouncer = new rxjs.Subject();
            this.resultado = [];
            this.listaFields = [];
        }
        FilterColumn.prototype.ngOnInit = function () {
            var _this = this;
            this.debouncer
                .pipe(operators.debounceTime((this.tableType === 'memory') ? 300 : 1000))
                .subscribe(function (value) { return _this.outputEvent.emit(value); });
            this.template = "filter_" + this.filterType;
        };
        FilterColumn.prototype.ngOnChanges = function (changes) {
            if (this.checkChanges(changes, 'listaOriginal')) {
                this.preencherFields();
            }
        };
        FilterColumn.prototype.checkChanges = function (changes, property) {
            return changes[property] && changes[property].previousValue != changes[property].currentValue;
        };
        /**
         * Método para propagar o evento de filtragem
         * @param event filtro
         */
        FilterColumn.prototype.filtrar = function (event) {
            this.debouncer.next(this.filtro);
        };
        /**
         * Preenche os itens que serão exibidos no multiselect, removendo duplicidades
         */
        FilterColumn.prototype.preencherFields = function () {
            var _this = this;
            this.listaFields = [];
            this.listaOriginal.filter(function (pi) { return pi[_this.field] !== null; }).forEach(function (row) {
                var item = { label: row[_this.field], value: row[_this.field] };
                if (!_this.verificarSeExisteField(item)) {
                    _this.listaFields.push(item);
                }
            });
        };
        /**
         *
         * @param field Verifica duplicidade de fields nas opções de seleção
         */
        FilterColumn.prototype.verificarSeExisteField = function (field) {
            return this.listaFields.some(function (item) {
                return item.value == field.value;
            });
        };
        /**
         * Caso o usuaŕio não forneça uma lista para o options, será criada uma lista com
         * os valores presentes na tabela
         */
        FilterColumn.prototype.getCustomFilterOptions = function () {
            if (this.customFilterOptions.hasOwnProperty(this.field)) {
                return this.customFilterOptions[this.field];
            }
            return this.listaFields;
        };
        __decorate([
            core.Input()
        ], FilterColumn.prototype, "listaOriginal", void 0);
        __decorate([
            core.Input()
        ], FilterColumn.prototype, "lista", void 0);
        __decorate([
            core.Input()
        ], FilterColumn.prototype, "field", void 0);
        __decorate([
            core.Input()
        ], FilterColumn.prototype, "header", void 0);
        __decorate([
            core.Input()
        ], FilterColumn.prototype, "labelDefaultImplementation", void 0);
        __decorate([
            core.Input()
        ], FilterColumn.prototype, "labelDefaultName", void 0);
        __decorate([
            core.Input()
        ], FilterColumn.prototype, "updateFiltro", void 0);
        __decorate([
            core.Input()
        ], FilterColumn.prototype, "filterType", void 0);
        __decorate([
            core.Input()
        ], FilterColumn.prototype, "tableType", void 0);
        __decorate([
            core.Input()
        ], FilterColumn.prototype, "customFilterOptions", void 0);
        __decorate([
            core.Input()
        ], FilterColumn.prototype, "template", void 0);
        __decorate([
            core.Output()
        ], FilterColumn.prototype, "outputEvent", void 0);
FilterColumn.ɵfac = function FilterColumn_Factory(t) { return new (t || FilterColumn)(); };
FilterColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FilterColumn, selectors: [["basis-filter-column"]], inputs: { listaOriginal: "listaOriginal", lista: "lista", labelDefaultImplementation: "labelDefaultImplementation", updateFiltro: "updateFiltro", customFilterOptions: "customFilterOptions", template: "template", field: "field", header: "header", labelDefaultName: "labelDefaultName", filterType: "filterType", tableType: "tableType" }, outputs: { outputEvent: "outputEvent" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 3, vars: 3, consts: [[3, "ngSwitch"], [4, "ngSwitchCase"], [1, "ui-g", "form-group"], [1, "ui-md-12"], [1, "md-inputfield"], ["type", "text", "pInputText", "", 3, "ngModel", "input", "ngModelChange"], ["appendTo", "body", 3, "options", "defaultLabel", "optionLabel", "ngModelOptions", "ngModel", "onChange", "ngModelChange"]], template: function FilterColumn_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, FilterColumn_div_1_Template, 7, 2, "div", 1);
        ɵngcc0.ɵɵtemplate(2, FilterColumn_div_2_Template, 2, 9, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngSwitch", ctx.filterType);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "text");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "select");
    } }, directives: [ɵngcc4.NgSwitch, ɵngcc4.NgSwitchCase, ɵngcc7.DefaultValueAccessor, ɵngcc2.InputText, ɵngcc7.NgControlStatus, ɵngcc7.NgModel, ɵngcc2.MultiSelect], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FilterColumn, [{
        type: core.Component,
        args: [{
                selector: 'basis-filter-column',
                template: "<div [ngSwitch]=\"filterType\">\n    <div *ngSwitchCase=\"'text'\">\n        <div class=\"ui-g form-group\">\n            <div class=\"ui-md-12\">\n                <span class=\"md-inputfield\">\n                    <input type=\"text\" pInputText (input)=\"filtrar($event)\" [(ngModel)]=\"filtro\">\n                    <label>{{ (header) ? header : 'Filtro' }}</label>\n                </span>\n            </div>\n        </div>\n    </div>\n    <div *ngSwitchCase=\"'select'\">\n        <p-multiSelect\n            [options]=\"getCustomFilterOptions()\"\n            [defaultLabel]=\"(header)? header: '&nbsp;'\"\n            [optionLabel]=\"'label'\"\n            appendTo=\"body\"\n            [ngModelOptions]=\"{standalone: true}\"\n            (onChange)=\"filtrar($event)\"\n            [(ngModel)]=\"filtro\"\n            [style]=\"{'width':'100%'}\">\n        </p-multiSelect>\n    </div>\n</div>\n"
            }]
    }], function () { return []; }, { listaOriginal: [{
            type: core.Input
        }], lista: [{
            type: core.Input
        }], labelDefaultImplementation: [{
            type: core.Input
        }], updateFiltro: [{
            type: core.Input
        }], customFilterOptions: [{
            type: core.Input
        }], template: [{
            type: core.Input
        }], outputEvent: [{
            type: core.Output
        }], field: [{
            type: core.Input
        }], header: [{
            type: core.Input
        }], labelDefaultName: [{
            type: core.Input
        }], filterType: [{
            type: core.Input
        }], tableType: [{
            type: core.Input
        }] }); })();
        return FilterColumn;
    }());

    var FilterColumnModule = /** @class */ (function () {
        function FilterColumnModule() {
        }
FilterColumnModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FilterColumnModule });
FilterColumnModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FilterColumnModule_Factory(t) { return new (t || FilterColumnModule)(); }, imports: [[
            common.CommonModule,
            primeng.MultiSelectModule,
            button.ButtonModule,
            primeng.CheckboxModule,
            dropdown.DropdownModule,
            forms.FormsModule,
            forms.ReactiveFormsModule,
            primeng.InputTextModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FilterColumnModule, { declarations: [FilterColumn], imports: [ɵngcc4.CommonModule, ɵngcc2.MultiSelectModule, ɵngcc8.ButtonModule, ɵngcc2.CheckboxModule, ɵngcc9.DropdownModule, ɵngcc7.FormsModule, ɵngcc7.ReactiveFormsModule, ɵngcc2.InputTextModule], exports: [FilterColumn] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FilterColumnModule, [{
        type: core.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    primeng.MultiSelectModule,
                    button.ButtonModule,
                    primeng.CheckboxModule,
                    dropdown.DropdownModule,
                    forms.FormsModule,
                    forms.ReactiveFormsModule,
                    primeng.InputTextModule
                ],
                declarations: [
                    FilterColumn
                ],
                exports: [
                    FilterColumn
                ],
                schemas: [core.CUSTOM_ELEMENTS_SCHEMA]
            }]
    }], function () { return []; }, null); })();
        return FilterColumnModule;
    }());

    /**
     * Class PageNotificationService
     * @class
     */
    var PageNotificationService = /** @class */ (function (_super) {
        __extends(PageNotificationService, _super);
        /**
         * constructor method
         * @constructor
         * @param {MessageService} messageService
         */
        function PageNotificationService(messageService) {
            var _this = _super.call(this) || this;
            _this.messageService = messageService;
            /**
             * successSeverity property
             * @type {string}
             */
            _this.successSeverity = 'success';
            /**
             * infoSeverity property
             * @type {string}
             */
            _this.infoSeverity = 'info';
            /**
             * warnSeverity property
             * @type {string}
             */
            _this.warnSeverity = 'warn';
            /**
             * errorSeverity property
             * @type {string}
             */
            _this.errorSeverity = 'error';
            /**
             * createMsg property
             * @type {string}
             */
            _this.createMsg = 'Registro incluído com sucesso!';
            /**
             * updateMsg property
             * @type {string}
             */
            _this.updateMsg = 'Registro alterado com sucesso!';
            /**
             * deleteMsg property
             * @type {string}
             */
            _this.deleteMsg = 'Registro excluído com sucesso!';
            return _this;
        }
        /**
         * addCreateMsg method
         * @param {string} title
         */
        PageNotificationService.prototype.addCreateMsg = function (title) {
            this.addSuccessMessage(this.createMsg, title);
        };
        /**
         * addSuccessMessage method
         * @param {string} message
         * @param {string} title
         */
        PageNotificationService.prototype.addSuccessMessage = function (message, title) {
            this.addMsg(this.successSeverity, message, title);
        };
        /**
         * addMsg method
         * @param {string} severity
         * @param {string} msg
         * @param {string} title
         */
        PageNotificationService.prototype.addMsg = function (severity, msg, title) {
            this.messageService.add({
                severity: severity,
                summary: title,
                detail: msg
            });
        };
        /**
         * addUpdateMsg method
         * @param {string} title
         */
        PageNotificationService.prototype.addUpdateMsg = function (title) {
            this.addSuccessMessage(this.updateMsg, title);
        };
        /**
         * addDeleteMsg method
         * @param {string} title
         */
        PageNotificationService.prototype.addDeleteMsg = function (title) {
            this.addSuccessMessage(this.deleteMsg, title);
        };
        /**
         * addInfoMessage method
         * @param {string} message
         * @param {string} title
         */
        PageNotificationService.prototype.addInfoMessage = function (message, title) {
            this.addMsg(this.infoSeverity, message, title);
        };
        /**
         * addWarnMessage method
         * @param {string} message
         * @param {string} title
         */
        PageNotificationService.prototype.addWarnMessage = function (message, title) {
            this.addMsg(this.warnSeverity, message, title);
        };
        /**
         * addErrorMessage method
         * @param {string} message
         * @param {string} title
         */
        PageNotificationService.prototype.addErrorMessage = function (message, title) {
            this.addMsg(this.errorSeverity, message, title);
        };
        /**
         * addErrorProblem method
         * @param {ApplicationProblemType} problem
         */
        PageNotificationService.prototype.addErrorProblem = function (problem) {
            this.addMsg(this.errorSeverity, problem.detail, problem.title);
        };
        PageNotificationService.ctorParameters = function () { return [
            { type: primeng.MessageService }
        ]; };
        PageNotificationService.ɵprov = core.ɵɵdefineInjectable({ factory: function PageNotificationService_Factory() { return new PageNotificationService(core.ɵɵinject(api.MessageService)); }, token: PageNotificationService, providedIn: "root" });
PageNotificationService.ɵfac = function PageNotificationService_Factory(t) { return new (t || PageNotificationService)(ɵngcc0.ɵɵinject(ɵngcc2.MessageService)); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PageNotificationService, [{
        type: core.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc2.MessageService }]; }, null); })();
        return PageNotificationService;
    }(angularBase.NotificationProvider));

    var ShowColumn = /** @class */ (function () {
        function ShowColumn(pageNotificationService) {
            this.pageNotificationService = pageNotificationService;
            /**
             * lista de colunas disponívels na tabela
             * @type {Array}
             */
            this.options = [];
            /**
             * Valores do select de colunas
             * @type {Array}
             */
            this.values = [];
            /**
             * Último valor válido para o select.
             * @type {Array}
             */
            this.lastValue = [];
            /**
             * Evento para atualizar a visibilidade das colunas da tabela
             * @type {EventEmitter}
             */
            this.updateVisibleColumns = new core.EventEmitter();
        }
        ShowColumn.prototype.ngOnInit = function () {
            var _this = this;
            this.columns.forEach(function (column) {
                var col = { field: column.field, filterType: column.filterType, header: column.header };
                _this.options.push(col);
                _this.values.push(col);
                _this.lastValue.push(col);
            });
        };
        ShowColumn.prototype.mostrarColunas = function (event) {
            var _this = this;
            if (this.values.length) {
                this.lastValue = event.value;
                this.updateVisibleColumns.emit(this.values);
            }
            else {
                this.lastValue.map(function (item) { return _this.values.push(item); });
                this.pageNotificationService.addErrorMessage('Não é possível exibir menos de uma coluna');
            }
        };
        ShowColumn.ctorParameters = function () { return [
            { type: PageNotificationService }
        ]; };
        __decorate([
            core.Input()
        ], ShowColumn.prototype, "columns", void 0);
        __decorate([
            core.Output()
        ], ShowColumn.prototype, "updateVisibleColumns", void 0);
ShowColumn.ɵfac = function ShowColumn_Factory(t) { return new (t || ShowColumn)(ɵngcc0.ɵɵdirectiveInject(PageNotificationService)); };
ShowColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ShowColumn, selectors: [["basis-show-column"]], inputs: { columns: "columns" }, outputs: { updateVisibleColumns: "updateVisibleColumns" }, decls: 6, vars: 9, consts: [[1, "ui-g-12", "ui-g-nopad"], [1, "ui-g-3", "ui-md-offset-6"], [1, "text-right"], [1, "ui-g-3"], ["defaultLabel", "Selecione as colunas a serem exibidas", 1, "column", 3, "optionLabel", "displaySelectedLabel", "ngModelOptions", "options", "ngModel", "onChange", "ngModelChange"]], template: function ShowColumn_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtext(3, "Visibilidade das Colunas:");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 3);
        ɵngcc0.ɵɵelementStart(5, "p-multiSelect", 4);
        ɵngcc0.ɵɵlistener("onChange", function ShowColumn_Template_p_multiSelect_onChange_5_listener($event) { return ctx.mostrarColunas($event); })("ngModelChange", function ShowColumn_Template_p_multiSelect_ngModelChange_5_listener($event) { return ctx.values = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵstyleMap(ɵngcc0.ɵɵpureFunction0(7, _c11));
        ɵngcc0.ɵɵproperty("optionLabel", "header")("displaySelectedLabel", false)("ngModelOptions", ɵngcc0.ɵɵpureFunction0(8, _c10))("options", ctx.options)("ngModel", ctx.values);
    } }, directives: [ɵngcc2.MultiSelect, ɵngcc7.NgControlStatus, ɵngcc7.NgModel], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShowColumn, [{
        type: core.Component,
        args: [{
                selector: 'basis-show-column',
                template: "<div class=\"ui-g-12 ui-g-nopad\">\n    <div class=\"ui-g-3 ui-md-offset-6\">\n        <div class=\"text-right\">Visibilidade das Colunas:</div>\n    </div>\n    <div class=\"ui-g-3\">\n        <p-multiSelect\n            class=\"column\"\n            defaultLabel=\"Selecione as colunas a serem exibidas\"\n            [optionLabel]=\"'header'\"\n            [displaySelectedLabel]=\"false\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            (onChange)=\"mostrarColunas($event)\"\n            [options]=\"options\"\n            [(ngModel)]=\"values\"\n            [style]=\"{ width: '100%' }\"\n        >\n        </p-multiSelect>\n    </div>\n</div>\n"
            }]
    }], function () { return [{ type: PageNotificationService }]; }, { updateVisibleColumns: [{
            type: core.Output
        }], columns: [{
            type: core.Input
        }] }); })();
        return ShowColumn;
    }());

    var ShowColumnModule = /** @class */ (function () {
        function ShowColumnModule() {
        }
ShowColumnModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ShowColumnModule });
ShowColumnModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ShowColumnModule_Factory(t) { return new (t || ShowColumnModule)(); }, imports: [[
            common.CommonModule,
            primeng.MultiSelectModule,
            button.ButtonModule,
            primeng.CheckboxModule,
            dropdown.DropdownModule,
            forms.FormsModule,
            forms.ReactiveFormsModule,
            primeng.InputTextModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ShowColumnModule, { declarations: [ShowColumn], imports: [ɵngcc4.CommonModule, ɵngcc2.MultiSelectModule, ɵngcc8.ButtonModule, ɵngcc2.CheckboxModule, ɵngcc9.DropdownModule, ɵngcc7.FormsModule, ɵngcc7.ReactiveFormsModule, ɵngcc2.InputTextModule], exports: [ShowColumn] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShowColumnModule, [{
        type: core.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    primeng.MultiSelectModule,
                    button.ButtonModule,
                    primeng.CheckboxModule,
                    dropdown.DropdownModule,
                    forms.FormsModule,
                    forms.ReactiveFormsModule,
                    primeng.InputTextModule
                ],
                declarations: [
                    ShowColumn
                ],
                exports: [
                    ShowColumn
                ],
                schemas: [core.CUSTOM_ELEMENTS_SCHEMA]
            }]
    }], function () { return []; }, null); })();
        return ShowColumnModule;
    }());

    /**
     * Class DatatableModule
     * @class
     */
    var DatatableModule = /** @class */ (function () {
        function DatatableModule() {
        }
DatatableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DatatableModule });
DatatableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DatatableModule_Factory(t) { return new (t || DatatableModule)(); }, providers: [
        { provide: DatatableService, useClass: DatatableService, deps: [http.HttpClient] },
        DataProviderFactory
    ], imports: [[
            common.CommonModule,
            primeng.ButtonModule,
            primeng.SplitButtonModule,
            primeng.TooltipModule,
            table.TableModule,
            primeng.BlockUIModule,
            primeng.ProgressSpinnerModule,
            DatatableSplitbuttonModule,
            http.HttpClientModule,
            primeng.PaginatorModule,
            FilterColumnModule,
            ShowColumnModule,
            primeng.InputTextModule
        ],
        FilterColumnModule,
        ShowColumnModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DatatableModule, { declarations: [DatatableComponent,
        DatatableButtonComponent,
        Column], imports: [ɵngcc4.CommonModule, ɵngcc2.ButtonModule, ɵngcc2.SplitButtonModule, ɵngcc2.TooltipModule, ɵngcc5.TableModule, ɵngcc2.BlockUIModule, ɵngcc2.ProgressSpinnerModule, DatatableSplitbuttonModule, ɵngcc1.HttpClientModule, ɵngcc2.PaginatorModule, FilterColumnModule,
        ShowColumnModule, ɵngcc2.InputTextModule], exports: [DatatableComponent,
        DatatableButtonComponent,
        FilterColumnModule,
        ShowColumnModule,
        Column] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DatatableModule, [{
        type: core.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    primeng.ButtonModule,
                    primeng.SplitButtonModule,
                    primeng.TooltipModule,
                    table.TableModule,
                    primeng.BlockUIModule,
                    primeng.ProgressSpinnerModule,
                    DatatableSplitbuttonModule,
                    http.HttpClientModule,
                    primeng.PaginatorModule,
                    FilterColumnModule,
                    ShowColumnModule,
                    primeng.InputTextModule
                ],
                declarations: [
                    DatatableComponent,
                    DatatableButtonComponent,
                    Column
                ],
                providers: [
                    { provide: DatatableService, useClass: DatatableService, deps: [http.HttpClient] },
                    DataProviderFactory
                ],
                exports: [
                    DatatableComponent,
                    DatatableButtonComponent,
                    FilterColumnModule,
                    ShowColumnModule,
                    Column
                ]
            }]
    }], function () { return []; }, null); })();
        return DatatableModule;
    }());

    /**
     * Class BlockUiComponent
     * @class
     */
    var BlockUiComponent = /** @class */ (function () {
        /**
         * constructor method
         * @constructor
         * @param {BlockUiService} service
         */
        function BlockUiComponent(service) {
            this.service = service;
            /**
             * status property
             * @type {boolean}
             * @public
             */
            this.status = false;
        }
        /**
         * ngOnInit method
         * @returns void
         */
        BlockUiComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.subscription = this.service.loaderStatus.subscribe(function (blockui) {
                _this.status = blockui.status;
            });
        };
        /**
         * ngOnDestroy methods
         * @returns void
         */
        BlockUiComponent.prototype.ngOnDestroy = function () {
            this.subscription.unsubscribe();
        };
        /**
         * isBlocked method
         * @returns boolean
         */
        BlockUiComponent.prototype.isBlocked = function () {
            return this.status;
        };
        /**
         * show method
         * @returns false
         */
        BlockUiComponent.prototype.show = function () {
            this.status = true;
        };
        /**
         * hide methods
         * @returns void
         */
        BlockUiComponent.prototype.hide = function () {
            this.status = false;
        };
        BlockUiComponent.ctorParameters = function () { return [
            { type: angularBase.BlockUiService }
        ]; };
BlockUiComponent.ɵfac = function BlockUiComponent_Factory(t) { return new (t || BlockUiComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.BlockUiService)); };
BlockUiComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BlockUiComponent, selectors: [["basis-block-ui"]], decls: 3, vars: 1, consts: [[3, "blocked"], [1, "center-screen"]], template: function BlockUiComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "p-blockUI", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelement(2, "p-progressSpinner");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("blocked", ctx.isBlocked());
    } }, directives: [ɵngcc2.BlockUI, ɵngcc2.ProgressSpinner], styles: [".center-screen[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;min-height:100vh}"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BlockUiComponent, [{
        type: core.Component,
        args: [{
                selector: 'basis-block-ui',
                template: "<p-blockUI [blocked]=\"isBlocked()\">\n    <div class=\"center-screen\">\n        <p-progressSpinner></p-progressSpinner>\n    </div>\n</p-blockUI>\n",
                styles: [".center-screen{display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;min-height:100vh}"]
            }]
    }], function () { return [{ type: ɵngcc3.BlockUiService }]; }, null); })();
        return BlockUiComponent;
    }());

    /**
     * Class BlockUiModule
     * @class
     */
    var BlockUiModule = /** @class */ (function () {
        function BlockUiModule() {
        }
BlockUiModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BlockUiModule });
BlockUiModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BlockUiModule_Factory(t) { return new (t || BlockUiModule)(); }, providers: [
        {
            provide: http.HTTP_INTERCEPTORS,
            useClass: angularBase.BlockUiInterceptor,
            multi: true
        },
        angularBase.BlockUiService
    ], imports: [[
            common.CommonModule,
            primeng.BlockUIModule,
            primeng.ProgressSpinnerModule,
        ], ɵngcc2.BlockUIModule, ɵngcc2.ProgressSpinnerModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BlockUiModule, { declarations: [BlockUiComponent], imports: [ɵngcc4.CommonModule, ɵngcc2.BlockUIModule, ɵngcc2.ProgressSpinnerModule], exports: [ɵngcc2.BlockUIModule, BlockUiComponent, ɵngcc2.ProgressSpinnerModule] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BlockUiModule, [{
        type: core.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    primeng.BlockUIModule,
                    primeng.ProgressSpinnerModule,
                ],
                declarations: [
                    BlockUiComponent
                ],
                providers: [
                    {
                        provide: http.HTTP_INTERCEPTORS,
                        useClass: angularBase.BlockUiInterceptor,
                        multi: true
                    },
                    angularBase.BlockUiService
                ],
                exports: [
                    primeng.BlockUIModule,
                    BlockUiComponent,
                    primeng.ProgressSpinnerModule
                ]
            }]
    }], function () { return []; }, null); })();
        return BlockUiModule;
    }());

    /**
     * Class PageNotificationComponent
     * @class
     */
    var PageNotificationComponent = /** @class */ (function () {
        function PageNotificationComponent() {
            /**
             * duration property
             * @type {number}
             */
            this.duration = 3000;
        }
        __decorate([
            core.Input()
        ], PageNotificationComponent.prototype, "duration", void 0);
PageNotificationComponent.ɵfac = function PageNotificationComponent_Factory(t) { return new (t || PageNotificationComponent)(); };
PageNotificationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PageNotificationComponent, selectors: [["basis-page-notification"]], inputs: { duration: "duration" }, decls: 1, vars: 0, template: function PageNotificationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "p-toast");
    } }, directives: [ɵngcc10.Toast], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PageNotificationComponent, [{
        type: core.Component,
        args: [{
                selector: 'basis-page-notification',
                template: "<p-toast></p-toast>\n"
            }]
    }], function () { return []; }, { duration: [{
            type: core.Input
        }] }); })();
        return PageNotificationComponent;
    }());

    /**
     * Class PageNotificationModule
     * @class
     */
    var PageNotificationModule = /** @class */ (function () {
        function PageNotificationModule() {
        }
PageNotificationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PageNotificationModule });
PageNotificationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PageNotificationModule_Factory(t) { return new (t || PageNotificationModule)(); }, providers: [
        api.MessageService,
        PageNotificationService,
        {
            provide: angularBase.NotificationProvider,
            useExisting: PageNotificationService
        }
    ], imports: [[
            common.CommonModule,
            toast.ToastModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PageNotificationModule, { declarations: [PageNotificationComponent], imports: [ɵngcc4.CommonModule, ɵngcc10.ToastModule], exports: [PageNotificationComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PageNotificationModule, [{
        type: core.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    toast.ToastModule
                ],
                declarations: [
                    PageNotificationComponent
                ],
                exports: [
                    PageNotificationComponent
                ],
                providers: [
                    api.MessageService,
                    PageNotificationService,
                    {
                        provide: angularBase.NotificationProvider,
                        useExisting: PageNotificationService
                    }
                ]
            }]
    }], function () { return []; }, null); })();
        return PageNotificationModule;
    }());

    var FormNotificationComponent = /** @class */ (function (_super) {
        __extends(FormNotificationComponent, _super);
        function FormNotificationComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
FormNotificationComponent.ɵfac = function FormNotificationComponent_Factory(t) { return ɵFormNotificationComponent_BaseFactory(t || FormNotificationComponent); };
FormNotificationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormNotificationComponent, selectors: [["", "form-notification", ""]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c12, ngContentSelectors: _c13, decls: 3, vars: 1, consts: [[1, "form-notification-msg", "ui-message", "ui-messages-error", "ui-corner-all"]], template: function FormNotificationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
        ɵngcc0.ɵɵelementStart(1, "div", 0);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.message);
    } }, encapsulation: 2 });
var ɵFormNotificationComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FormNotificationComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormNotificationComponent, [{
        type: core.Component,
        args: [{
                selector: '[form-notification]',
                template: "<ng-content></ng-content>\n<div class=\"form-notification-msg ui-message ui-messages-error ui-corner-all\" >{{message}}</div>\n"
            }]
    }], null, null); })();
        return FormNotificationComponent;
    }(angularBase.FormNotificationComponentSuperclass));

    /**
     * Módulo para adicionar funcionalidade de notificação de erros de formulários.
     * @module
     */
    var FormNotificationModule = /** @class */ (function () {
        function FormNotificationModule() {
        }
FormNotificationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormNotificationModule });
FormNotificationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FormNotificationModule_Factory(t) { return new (t || FormNotificationModule)(); }, imports: [[
            common.CommonModule,
            angularBase.FormNotificationBaseModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormNotificationModule, { declarations: [FormNotificationComponent], imports: [ɵngcc4.CommonModule, ɵngcc3.FormNotificationBaseModule], exports: [FormNotificationComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormNotificationModule, [{
        type: core.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    angularBase.FormNotificationBaseModule
                ],
                declarations: [
                    FormNotificationComponent
                ],
                exports: [
                    FormNotificationComponent
                ]
            }]
    }], function () { return []; }, null); })();
        return FormNotificationModule;
    }());

    /**
     * Class ErrorStackComponent
     * @class
     */
    var ErrorStackComponent = /** @class */ (function () {
        /**
         * constructor method
         * @constructor
         * @param {ErrorStackService} errorStack
         */
        function ErrorStackComponent(errorStack) {
            this.errorStack = errorStack;
            /**
             * title property
             * @type {string}
             */
            this.title = 'Error Stack';
            /**
             * errors property
             * @type {NamedErrorType}
             */
            this.errors = [];
        }
        /**
         * ngOnInit method
         * @returns void
         */
        ErrorStackComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.errorSubscription = this.errorStack.errors.subscribe(function (error) {
                _this.errors = __spread([error], _this.errors);
            });
        };
        /**
         * ngOnDestroy method
         * @returns void
         */
        ErrorStackComponent.prototype.ngOnDestroy = function () {
            this.errorSubscription.unsubscribe();
        };
        ErrorStackComponent.ctorParameters = function () { return [
            { type: angularBase.ErrorStackService }
        ]; };
        __decorate([
            core.Input()
        ], ErrorStackComponent.prototype, "title", void 0);
        __decorate([
            core.Input()
        ], ErrorStackComponent.prototype, "template", void 0);
ErrorStackComponent.ɵfac = function ErrorStackComponent_Factory(t) { return new (t || ErrorStackComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStackService)); };
ErrorStackComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ErrorStackComponent, selectors: [["basis-error-stack"]], inputs: { title: "title", template: "template" }, decls: 3, vars: 1, consts: [["defaultTemplate", ""], [4, "ngTemplateOutlet"], [1, "ui-g"], [1, "ui-g-12"], [1, "card", "no-margin"], ["first", "0", 3, "value", "paginator", "rows"], ["pTemplate", "header"], ["pTemplate", "body"], ["pTemplate", "emptymessage"], [2, "width", "20%", "text-align", "center"], [2, "width", "10%", "text-align", "center"], ["pButton", "", "type", "button", "pTooltip", "Copiar erro para \u00E1rea de transfer\u00EAncia", "tooltipPosition", "left", "icon", "ui-icon-content-copy", 1, "ui-button-primary", 3, "clipboard"], ["colspan", "4"]], template: function ErrorStackComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ErrorStackComponent_ng_template_0_Template, 9, 4, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(2, ErrorStackComponent_ng_container_2_Template, 1, 0, "ng-container", 1);
    } if (rf & 2) {
        var _r1034 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.template ? ctx.template : _r1034);
    } }, directives: [ɵngcc4.NgTemplateOutlet, ɵngcc5.Table, ɵngcc6.PrimeTemplate, ɵngcc2.ButtonDirective, ɵngcc2.Tooltip, ɵngcc3.ClipboardDirective], pipes: [ɵngcc4.DatePipe], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ErrorStackComponent, [{
        type: core.Component,
        args: [{
                selector: 'basis-error-stack',
                template: "<ng-template #defaultTemplate>\n    <div class=\"ui-g\">\n        <div class=\"ui-g-12\">\n            <div class=\"card no-margin\">\n                <h1>{{ title }}</h1>\n                <p-table [value]=\"errors\" [paginator]=\"false\" [rows]=\"5\" first=\"0\">\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th style=\"width: 20%; text-align: center\">Data</th>\n                            <th style=\"width: 20%; text-align: center\">C\u00F3digo de identifica\u00E7\u00E3o</th>\n                            <th>Mensagem</th>\n                            <th style=\"width: 10%; text-align: center\">A\u00E7\u00E3o</th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-error>\n                        <tr>\n                            <td style=\"width: 20%; text-align: center\">{{error.createdAt|date: 'dd/MM/y H:mm:ss'}}</td>\n                            <td style=\"width: 20%; text-align: center\">{{error.correlationId || 'Indispon\u00EDvel'}}</td>\n                            <td>{{error.message}}</td>\n                            <td style=\"width: 10%; text-align: center\">\n                                <button pButton type=\"button\" pTooltip=\"Copiar erro para \u00E1rea de transfer\u00EAncia\" tooltipPosition=\"left\" class=\"ui-button-primary\" icon=\"ui-icon-content-copy\" [clipboard]=\"error.fullMessage\"></button>\n                            </td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\" let-columns>\n                        <tr>\n                            <td colspan=\"4\">\n                                Nenhum erro foi registrado at\u00E9 o momento.\n                            </td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-container *ngTemplateOutlet=\"template? template: defaultTemplate\"></ng-container>\n"
            }]
    }], function () { return [{ type: ɵngcc3.ErrorStackService }]; }, { title: [{
            type: core.Input
        }], template: [{
            type: core.Input
        }] }); })();
        return ErrorStackComponent;
    }());

    /**
     * Class ErrorStackModule
     * @class
     */
    var ErrorStackModule = /** @class */ (function () {
        function ErrorStackModule() {
        }
ErrorStackModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ErrorStackModule });
ErrorStackModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ErrorStackModule_Factory(t) { return new (t || ErrorStackModule)(); }, providers: [
        angularBase.ErrorStackService,
        {
            provide: angularBase.ErrorProvider,
            useClass: angularBase.ErrorStackProviderService,
            multi: true
        }
    ], imports: [[
            common.CommonModule,
            table.TableModule,
            primeng.ButtonModule,
            primeng.TooltipModule,
            angularBase.ClipboardModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ErrorStackModule, { declarations: [ErrorStackComponent], imports: [ɵngcc4.CommonModule, ɵngcc5.TableModule, ɵngcc2.ButtonModule, ɵngcc2.TooltipModule, ɵngcc3.ClipboardModule], exports: [ErrorStackComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ErrorStackModule, [{
        type: core.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    table.TableModule,
                    primeng.ButtonModule,
                    primeng.TooltipModule,
                    angularBase.ClipboardModule
                ],
                declarations: [
                    ErrorStackComponent
                ],
                providers: [
                    angularBase.ErrorStackService,
                    {
                        provide: angularBase.ErrorProvider,
                        useClass: angularBase.ErrorStackProviderService,
                        multi: true
                    }
                ],
                exports: [
                    ErrorStackComponent
                ]
            }]
    }], function () { return []; }, null); })();
        return ErrorStackModule;
    }());

    var CrudFormComponent = /** @class */ (function () {
        function CrudFormComponent(route) {
            this.route = route;
            this.disableSave = false;
            this.listRoute = "../../list";
        }
        CrudFormComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.route.paramMap.subscribe(function (params) {
                _this.action = params.get('action');
                if (params.get('id')) {
                    _this.route.data.subscribe(function (data) {
                        if (data.value) {
                            _this.form.patchValue(data.value);
                        }
                    });
                }
                else {
                    _this.listRoute = "../list";
                }
                if (_this.action === "view") {
                    _this.form.disable();
                }
                else if (_this.form.disabled) {
                    _this.form.enable();
                }
            });
        };
        CrudFormComponent.ctorParameters = function () { return [
            { type: router.ActivatedRoute }
        ]; };
        __decorate([
            core.Input()
        ], CrudFormComponent.prototype, "form", void 0);
        __decorate([
            core.Input()
        ], CrudFormComponent.prototype, "service", void 0);
        __decorate([
            core.Input()
        ], CrudFormComponent.prototype, "disableSave", void 0);
CrudFormComponent.ɵfac = function CrudFormComponent_Factory(t) { return new (t || CrudFormComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc11.ActivatedRoute)); };
CrudFormComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CrudFormComponent, selectors: [["nCrudForm"]], inputs: { disableSave: "disableSave", form: "form", service: "service" }, ngContentSelectors: _c13, decls: 4, vars: 9, consts: [[3, "form", "action", "route", "disableSave"], ["nButton", "", 1, "ui-g-12", "ui-lg-2", "ui-md-4", "ui-sm-12"], ["pButton", "", "type", "button", "label", "Voltar", 3, "routerLink"]], template: function CrudFormComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "nForm", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵelement(3, "button", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("form", ctx.form)("action", ctx.action)("route", ɵngcc0.ɵɵpureFunction1(5, _c14, ctx.listRoute))("disableSave", ctx.disableSave);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("routerLink", ɵngcc0.ɵɵpureFunction1(7, _c14, ctx.listRoute));
    } }, directives: function () { return [FormComponent, ɵngcc2.ButtonDirective, ɵngcc11.RouterLink]; }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CrudFormComponent, [{
        type: core.Component,
        args: [{
                selector: 'nCrudForm',
                template: "<nForm [form]=\"form\" [action]=\"action\" [route]=\"[listRoute]\" [disableSave]=\"disableSave\">\n    <ng-content></ng-content>\n    <div nButton class=\"ui-g-12 ui-lg-2 ui-md-4 ui-sm-12\">\n        <button pButton type=\"button\" [routerLink]=\"[listRoute]\" label=\"Voltar\"></button>\n    </div>\n</nForm>\n"
            }]
    }], function () { return [{ type: ɵngcc11.ActivatedRoute }]; }, { disableSave: [{
            type: core.Input
        }], form: [{
            type: core.Input
        }], service: [{
            type: core.Input
        }] }); })();
        return CrudFormComponent;
    }());

    var CRUD_SERVICE = new core.InjectionToken("CRUD_SERVICE");

    var CrudListComponent = /** @class */ (function () {
        function CrudListComponent(crudService, confirmationService, route, router) {
            this.crudService = crudService;
            this.confirmationService = confirmationService;
            this.route = route;
            this.router = router;
            this.action = "findAll";
            this.findLabel = "Pesquisar";
            this.disableSave = false;
            this.disableEdit = false;
            this.disableView = false;
            this.disableDelete = false;
            this.find = new core.EventEmitter();
        }
        CrudListComponent.prototype.ngOnInit = function () {
            if (this.service) {
                this.crudService = this.service;
            }
            if (!this.url) {
                this.url = this.crudService.uri;
            }
        };
        CrudListComponent.prototype.datatableClick = function (event) {
            var _this = this;
            if (event.selection) {
                switch (event.button) {
                    case "edit":
                    case "view":
                        this.router.navigate(["../" + event.button, event.selection.id], { relativeTo: this.route });
                        break;
                    case "delete":
                        this.confirmationService.confirm({
                            message: 'Você tem certeza que deseja excluir o registro?',
                            accept: function () { return _this.crudService.delete(event.selection.id)
                                .subscribe(function () { return _this.datatable.filter(); }); }
                        });
                        break;
                }
            }
        };
        CrudListComponent.prototype.findAll = function (event) {
            var _this = this;
            if (this.find.observers.length) {
                this.find.emit(this.form.value);
            }
            else {
                this.datatable.filterParams = {};
                Object.keys(this.form.value).forEach(function (element) {
                    var value = _this.form.value[element];
                    if (value) {
                        _this.datatable.filterParams[element] =
                            value instanceof Date ? JSON.stringify(value).replace(/"/g, "") : value;
                    }
                });
                this.datatable.filter();
            }
        };
        CrudListComponent.prototype.ngAfterContentInit = function () {
            var _this = this;
            var datatableNgAfterContentInit = this.datatable.pDatatableComponent.ngAfterContentInit;
            this.datatable.pDatatableComponent.ngAfterContentInit = function () {
                _this.datatable.pDatatableComponent.columns = _this.columns.toArray();
                datatableNgAfterContentInit.call(_this.datatable.pDatatableComponent);
            };
        };
        CrudListComponent.prototype.ngAfterViewInit = function () {
            for (var i in this.datatableExtraParams) {
                this.datatable[i] = this.datatableExtraParams[i];
            }
        };
        CrudListComponent.ctorParameters = function () { return [
            { type: undefined, decorators: [{ type: core.Inject, args: [CRUD_SERVICE,] }] },
            { type: api.ConfirmationService },
            { type: router.ActivatedRoute },
            { type: router.Router }
        ]; };
        __decorate([
            core.Input()
        ], CrudListComponent.prototype, "form", void 0);
        __decorate([
            core.Input()
        ], CrudListComponent.prototype, "action", void 0);
        __decorate([
            core.Input()
        ], CrudListComponent.prototype, "findLabel", void 0);
        __decorate([
            core.Input()
        ], CrudListComponent.prototype, "service", void 0);
        __decorate([
            core.Input()
        ], CrudListComponent.prototype, "url", void 0);
        __decorate([
            core.Input()
        ], CrudListComponent.prototype, "disableSave", void 0);
        __decorate([
            core.Input()
        ], CrudListComponent.prototype, "disableEdit", void 0);
        __decorate([
            core.Input()
        ], CrudListComponent.prototype, "disableView", void 0);
        __decorate([
            core.Input()
        ], CrudListComponent.prototype, "disableDelete", void 0);
        __decorate([
            core.Input()
        ], CrudListComponent.prototype, "datatableExtraParams", void 0);
        __decorate([
            core.Output()
        ], CrudListComponent.prototype, "find", void 0);
        __decorate([
            core.ViewChild('datatable', { static: true })
        ], CrudListComponent.prototype, "datatable", void 0);
        __decorate([
            core.ContentChildren(Column)
        ], CrudListComponent.prototype, "columns", void 0);
        CrudListComponent = __decorate([ __param(0, core.Inject(CRUD_SERVICE))
        ], CrudListComponent);
CrudListComponent.ɵfac = function CrudListComponent_Factory(t) { return new (t || CrudListComponent)(ɵngcc0.ɵɵdirectiveInject(CRUD_SERVICE), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ConfirmationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc11.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc11.Router)); };
CrudListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CrudListComponent, selectors: [["nCrudList"]], contentQueries: function CrudListComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, Column, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columns = _t);
    } }, viewQuery: function CrudListComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c15, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.datatable = _t.first);
    } }, inputs: { action: "action", findLabel: "findLabel", disableSave: "disableSave", disableEdit: "disableEdit", disableView: "disableView", disableDelete: "disableDelete", url: "url", form: "form", service: "service", datatableExtraParams: "datatableExtraParams" }, outputs: { find: "find" }, ngContentSelectors: _c18, decls: 8, vars: 8, consts: [[3, "form", "saveLabel", "save"], ["nButton", "", 1, "ui-g-12", "ui-lg-2", "ui-md-4", "ui-sm-12"], ["pButton", "", "type", "button", "label", "Novo", 3, "routerLink", 4, "ngIf"], [3, "value", "url", "disableEdit", "disableView", "disableDelete", "buttonClick"], ["datatable", ""], ["header", "Confirmar Exclus\u00E3o", "acceptLabel", "Sim", "rejectLabel", "N\u00E3o", "icon", "pi pi-exclamation-triangle"], ["pButton", "", "type", "button", "label", "Novo", 3, "routerLink"]], template: function CrudListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c17);
        ɵngcc0.ɵɵelementStart(0, "nForm", 0);
        ɵngcc0.ɵɵlistener("save", function CrudListComponent_Template_nForm_save_0_listener($event) { return ctx.findAll($event); });
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵtemplate(3, CrudListComponent_button_3_Template, 1, 2, "button", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "basis-datatable", 3, 4);
        ɵngcc0.ɵɵlistener("buttonClick", function CrudListComponent_Template_basis_datatable_buttonClick_4_listener($event) { return ctx.datatableClick($event); });
        ɵngcc0.ɵɵprojection(6, 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(7, "p-confirmDialog", 5);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("form", ctx.form)("saveLabel", ctx.findLabel);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.disableSave);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("value", ctx.result)("url", ctx.url)("disableEdit", ctx.disableEdit)("disableView", ctx.disableView)("disableDelete", ctx.disableDelete);
    } }, directives: function () { return [FormComponent, ɵngcc4.NgIf, DatatableComponent, ɵngcc12.ConfirmDialog, ɵngcc2.ButtonDirective, ɵngcc11.RouterLink]; }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CrudListComponent, [{
        type: core.Component,
        args: [{
                selector: 'nCrudList',
                template: "<nForm [form]=\"form\" (save)=\"findAll($event)\" [saveLabel]=\"findLabel\">\n    <ng-content select=\"[nForm]\"></ng-content>\n    <div nButton class=\"ui-g-12 ui-lg-2 ui-md-4 ui-sm-12\">\n        <button pButton type=\"button\" [routerLink]=\"['../save']\" label=\"Novo\" *ngIf=\"!disableSave\"></button>\n    </div>\n</nForm>\n\n<basis-datatable #datatable [value]=\"result\" (buttonClick)=\"datatableClick($event)\" [url]=\"url\"\n    [disableEdit]=\"disableEdit\" [disableView]=\"disableView\" [disableDelete]=\"disableDelete\">\n    <ng-content select=\"p-column\"></ng-content>\n</basis-datatable>\n\n<p-confirmDialog header=\"Confirmar Exclus\u00E3o\" acceptLabel=\"Sim\" rejectLabel=\"N\u00E3o\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\n"
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: core.Inject,
                args: [CRUD_SERVICE]
            }] }, { type: ɵngcc6.ConfirmationService }, { type: ɵngcc11.ActivatedRoute }, { type: ɵngcc11.Router }]; }, { action: [{
            type: core.Input
        }], findLabel: [{
            type: core.Input
        }], disableSave: [{
            type: core.Input
        }], disableEdit: [{
            type: core.Input
        }], disableView: [{
            type: core.Input
        }], disableDelete: [{
            type: core.Input
        }], find: [{
            type: core.Output
        }], url: [{
            type: core.Input
        }], form: [{
            type: core.Input
        }], service: [{
            type: core.Input
        }], datatableExtraParams: [{
            type: core.Input
        }], datatable: [{
            type: core.ViewChild,
            args: ['datatable', { static: true }]
        }], columns: [{
            type: core.ContentChildren,
            args: [Column]
        }] }); })();
        return CrudListComponent;
    }());

    var CrudResolveGuard = /** @class */ (function () {
        function CrudResolveGuard(crudService) {
            this.crudService = crudService;
        }
        CrudResolveGuard.prototype.resolve = function (route) {
            return this.crudService.find(route.paramMap.get('id'));
        };
        CrudResolveGuard.ctorParameters = function () { return [
            { type: undefined, decorators: [{ type: core.Inject, args: [CRUD_SERVICE,] }] }
        ]; };
        CrudResolveGuard = __decorate([ __param(0, core.Inject(CRUD_SERVICE))
        ], CrudResolveGuard);
CrudResolveGuard.ɵfac = function CrudResolveGuard_Factory(t) { return new (t || CrudResolveGuard)(ɵngcc0.ɵɵinject(CRUD_SERVICE)); };
CrudResolveGuard.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: CrudResolveGuard, factory: function (t) { return CrudResolveGuard.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CrudResolveGuard, [{
        type: core.Injectable
    }], function () { return [{ type: undefined, decorators: [{
                type: core.Inject,
                args: [CRUD_SERVICE]
            }] }]; }, null); })();
        return CrudResolveGuard;
    }());

    function crudRouteBuilder(route, parent, list, form) {
        return {
            path: route,
            component: parent,
            data: { breadcrumb: route },
            children: [
                {
                    path: 'list',
                    component: list,
                    data: { breadcrumb: 'list' },
                },
                {
                    path: ':action',
                    component: form,
                    data: { breadcrumb: ':action' },
                },
                {
                    path: ':action/:id',
                    component: form,
                    resolve: {
                        value: CrudResolveGuard
                    },
                    data: { breadcrumb: ':action' },
                }
            ]
        };
    }

    var CrudServiceNuvem = /** @class */ (function () {
        function CrudServiceNuvem(uri, http) {
            this.uri = uri;
            this.http = http;
        }
        CrudServiceNuvem.prototype.save = function (entity) {
            return this.http.post(this.uri, entity);
        };
        CrudServiceNuvem.prototype.edit = function (entity) {
            return this.http.put(this.uri, entity);
        };
        CrudServiceNuvem.prototype.find = function (id) {
            return this.http.get(this.uri + "/" + id);
        };
        CrudServiceNuvem.prototype.delete = function (id) {
            return this.http.delete(this.uri + "/" + id);
        };
        CrudServiceNuvem.prototype.findAll = function (entity) {
            var params = new http.HttpParams();
            for (var field in entity) {
                params = params.append(field, entity[field]);
            }
            return this.http.get("" + this.uri, { params: params });
        };
        return CrudServiceNuvem;
    }());

    var STATUS;
    (function (STATUS) {
        STATUS[STATUS["OK"] = 200] = "OK";
        STATUS[STATUS["CREATED"] = 201] = "CREATED";
    })(STATUS || (STATUS = {}));
    var SuccessMessageHandlerInterceptor = /** @class */ (function () {
        function SuccessMessageHandlerInterceptor(notification) {
            this.notification = notification;
        }
        SuccessMessageHandlerInterceptor.prototype.intercept = function (req, next) {
            var _this = this;
            return next.handle(req).pipe(operators.tap(function (event) {
                if (event instanceof http.HttpResponse) {
                    if (event.headers.has("X-nuvem-alert")) {
                        _this.notification.addSuccessMessage(event.headers.get("X-nuvem-alert"));
                    }
                    else if ((event.status === STATUS.OK || event.status === STATUS.CREATED) && req.method != "GET") {
                        _this.notification.addSuccessMessage("Operação realizada com sucesso!");
                    }
                }
            }));
        };
        SuccessMessageHandlerInterceptor.ctorParameters = function () { return [
            { type: PageNotificationService }
        ]; };
        SuccessMessageHandlerInterceptor.ɵprov = core.ɵɵdefineInjectable({ factory: function SuccessMessageHandlerInterceptor_Factory() { return new SuccessMessageHandlerInterceptor(core.ɵɵinject(PageNotificationService)); }, token: SuccessMessageHandlerInterceptor, providedIn: "root" });
SuccessMessageHandlerInterceptor.ɵfac = function SuccessMessageHandlerInterceptor_Factory(t) { return new (t || SuccessMessageHandlerInterceptor)(ɵngcc0.ɵɵinject(PageNotificationService)); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SuccessMessageHandlerInterceptor, [{
        type: core.Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return [{ type: PageNotificationService }]; }, null); })();
        return SuccessMessageHandlerInterceptor;
    }());
    var httpInterceptorProviders = [
        { provide: http.HTTP_INTERCEPTORS, useClass: SuccessMessageHandlerInterceptor, multi: true },
    ];

    var FieldComponent = /** @class */ (function (_super) {
        __extends(FieldComponent, _super);
        function FieldComponent(controlContainer, injector) {
            var _this = _super.call(this, injector) || this;
            _this.controlContainer = controlContainer;
            _this.injector = injector;
            _this.onBlur = new core.EventEmitter();
            _this.onSelect = new core.EventEmitter();
            _this.onFocus = new core.EventEmitter();
            return _this;
        }
        Object.defineProperty(FieldComponent.prototype, "name", {
            get: function () {
                return this._name ? this._name : this.formControlName;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FieldComponent.prototype, "label", {
            get: function () {
                return this.required ? this._label + "*" : this._label;
            },
            set: function (value) {
                this._label = value;
            },
            enumerable: true,
            configurable: true
        });
        FieldComponent.prototype.ngOnInit = function () {
            this.setValidators();
            this.setRequired();
        };
        FieldComponent.prototype.setRequired = function () {
            if (this.required) {
                if (this.input instanceof core.ElementRef) {
                    this.input.nativeElement.required = true;
                }
                else {
                    this.input.required = true;
                }
            }
        };
        FieldComponent.prototype.setElementRefAttr = function (attr, value) {
            if (value && this.input instanceof core.ElementRef) {
                this.input.nativeElement[attr] = value;
            }
        };
        FieldComponent.prototype.setFormControlValidators = function () {
            if (this.controlContainer && this.formControlName) {
                var validator = this.controlContainer.control.get(this.formControlName).validator;
                if (validator) {
                    this.formControl.setValidators(validator);
                }
            }
        };
        FieldComponent.prototype.setValidators = function () {
            if (this.controlContainer && this.formControlName) {
                var validator = this.controlContainer.control.get(this.formControlName).validator;
                if (validator) {
                    this.formControl.setValidators(validator);
                }
            }
        };
        FieldComponent.prototype.ngAfterViewInit = function () {
            for (var i in this.extraParams) {
                this.input[i] = this.extraParams[i];
            }
        };
        FieldComponent.prototype.onBlurEvent = function (event) {
            this.onBlur.emit(event);
        };
        FieldComponent.prototype.onSelectEvent = function (event) {
            this.onSelect.emit(event);
        };
        FieldComponent.prototype.onFocusEvent = function (event) {
            this.onFocus.emit(event);
        };
        FieldComponent.ctorParameters = function () { return [
            { type: forms.ControlContainer },
            { type: core.Injector }
        ]; };
        __decorate([
            core.Input()
        ], FieldComponent.prototype, "form", void 0);
        __decorate([
            core.Input()
        ], FieldComponent.prototype, "formControlName", void 0);
        __decorate([
            core.Input()
        ], FieldComponent.prototype, "extraParams", void 0);
        __decorate([
            core.Input()
        ], FieldComponent.prototype, "required", void 0);
        __decorate([
            core.Output()
        ], FieldComponent.prototype, "onBlur", void 0);
        __decorate([
            core.Output()
        ], FieldComponent.prototype, "onSelect", void 0);
        __decorate([
            core.Output()
        ], FieldComponent.prototype, "onFocus", void 0);
        __decorate([
            core.ViewChild("input", { static: false })
        ], FieldComponent.prototype, "input", void 0);
        __decorate([
            core.Input()
        ], FieldComponent.prototype, "name", null);
        __decorate([
            core.Input()
        ], FieldComponent.prototype, "label", null);
FieldComponent.ɵfac = function FieldComponent_Factory(t) { return new (t || FieldComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.ControlContainer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector)); };
FieldComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FieldComponent, selectors: [["", "nField", ""]], viewQuery: function FieldComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c19, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);
    } }, inputs: { name: "name", label: "label", form: "form", formControlName: "formControlName", extraParams: "extraParams", required: "required" }, outputs: { onBlur: "onBlur", onSelect: "onSelect", onFocus: "onFocus" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FieldComponent, [{
        type: core.Directive,
        args: [{
                selector: "[nField]"
            }]
    }], function () { return [{ type: ɵngcc7.ControlContainer }, { type: ɵngcc0.Injector }]; }, { name: [{
            type: core.Input
        }], label: [{
            type: core.Input
        }], form: [{
            type: core.Input
        }], formControlName: [{
            type: core.Input
        }], extraParams: [{
            type: core.Input
        }], required: [{
            type: core.Input
        }], onBlur: [{
            type: core.Output
        }], onSelect: [{
            type: core.Output
        }], onFocus: [{
            type: core.Output
        }], input: [{
            type: core.ViewChild,
            args: ["input", { static: false }]
        }] }); })();
        return FieldComponent;
    }(angularBase.WrappedFormControlSuperclass));

    var InputTextComponent = /** @class */ (function (_super) {
        __extends(InputTextComponent, _super);
        function InputTextComponent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.type = "text";
            return _this;
        }
        InputTextComponent_1 = InputTextComponent;
        InputTextComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
            this.setElementRefAttr("min", this.min);
            this.setElementRefAttr("max", this.max);
            this.setElementRefAttr("minLength", this.minLength);
            this.setElementRefAttr("maxLength", this.maxLength);
            this.setElementRefAttr("pattern", this.pattern);
        };
        var InputTextComponent_1;
        __decorate([
            core.Input()
        ], InputTextComponent.prototype, "minLength", void 0);
        __decorate([
            core.Input()
        ], InputTextComponent.prototype, "maxLength", void 0);
        __decorate([
            core.Input()
        ], InputTextComponent.prototype, "min", void 0);
        __decorate([
            core.Input()
        ], InputTextComponent.prototype, "max", void 0);
        __decorate([
            core.Input()
        ], InputTextComponent.prototype, "pattern", void 0);
        __decorate([
            core.Input()
        ], InputTextComponent.prototype, "type", void 0);
InputTextComponent.ɵfac = function InputTextComponent_Factory(t) { return ɵInputTextComponent_BaseFactory(t || InputTextComponent); };
InputTextComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InputTextComponent, selectors: [["", "nInputText", ""]], inputs: { minLength: "minLength", maxLength: "maxLength", min: "min", max: "max", pattern: "pattern", type: "type" }, features: [ɵngcc0.ɵɵProvidersFeature([angularBase.provideValueAccessor(InputTextComponent_1)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c20, ngContentSelectors: _c13, decls: 7, vars: 11, consts: [["form-notification", "", 1, "md-inputfield", 3, "name", "form"], ["notification", ""], ["pInputText", "", 3, "ngClass", "type", "name", "formControl", "blur", "focus"], ["input", ""], [3, "for", "innerHTML"], [3, "control", 4, "ngIf"], [3, "control"]], template: function InputTextComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "input", 2, 3);
        ɵngcc0.ɵɵlistener("blur", function InputTextComponent_Template_input_blur_2_listener($event) { return ctx.onBlurEvent($event); })("focus", function InputTextComponent_Template_input_focus_2_listener($event) { return ctx.onFocusEvent($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "label", 4);
        ɵngcc0.ɵɵtemplate(5, InputTextComponent_nValidationMessage_5_Template, 1, 1, "nValidationMessage", 5);
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r1044 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("form", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(9, _c21, _r1044.message))("type", ctx.type)("name", ctx.name)("formControl", ctx.formControl);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("for", ctx.name)("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !_r1044.message);
    } }, directives: function () { return [FormNotificationComponent, ɵngcc7.DefaultValueAccessor, ɵngcc2.InputText, ɵngcc4.NgClass, ɵngcc7.NgControlStatus, ɵngcc7.FormControlDirective, ɵngcc4.NgIf, ValidationMessageComponent]; }, encapsulation: 2 });
var ɵInputTextComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(InputTextComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InputTextComponent, [{
        type: core.Component,
        args: [{
                selector: "[nInputText]",
                template: "<span #notification form-notification class=\"md-inputfield\" [name]=\"name\" [form]=\"form\">\n    <input #input\n        pInputText\n        [ngClass]=\"{ 'ng-invalid ng-dirty': notification.message }\"\n        [type]=\"type\"\n        [name]=\"name\"\n        (blur)=\"onBlurEvent($event)\"\n        (focus)=\"onFocusEvent($event)\"\n        [formControl]=\"formControl\" />\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
                providers: [angularBase.provideValueAccessor(InputTextComponent_1)]
            }]
    }], null, { minLength: [{
            type: core.Input
        }], maxLength: [{
            type: core.Input
        }], min: [{
            type: core.Input
        }], max: [{
            type: core.Input
        }], pattern: [{
            type: core.Input
        }], type: [{
            type: core.Input
        }] }); })();
        return InputTextComponent;
    }(FieldComponent));

    var CALENDAR_LOCALE = {
        firstDayOfWeek: 0,
        dayNames: ["Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado"],
        dayNamesShort: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sab"],
        dayNamesMin: ["D", "S", "T", "Q", "Q", "S", "S"],
        monthNames: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"],
        monthNamesShort: ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"],
        today: 'Hoje',
        clear: 'Limpar',
        dateFormat: 'dd/mm/yy',
        weekHeader: 'Semana'
    };

    var CalendarComponent = /** @class */ (function (_super) {
        __extends(CalendarComponent, _super);
        function CalendarComponent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.maxDate = null;
            _this.yearRange = null;
            _this.monthNavigator = false;
            _this.yearNavigator = false;
            _this.locale = CALENDAR_LOCALE;
            return _this;
        }
        CalendarComponent_1 = CalendarComponent;
        CalendarComponent.prototype.outerToInner = function (value) {
            return value ? new Date(value) : null;
        };
        var CalendarComponent_1;
        __decorate([
            core.Input()
        ], CalendarComponent.prototype, "maxDate", void 0);
        __decorate([
            core.Input()
        ], CalendarComponent.prototype, "yearRange", void 0);
        __decorate([
            core.Input()
        ], CalendarComponent.prototype, "monthNavigator", void 0);
        __decorate([
            core.Input()
        ], CalendarComponent.prototype, "yearNavigator", void 0);
        __decorate([
            core.Input()
        ], CalendarComponent.prototype, "locale", void 0);
CalendarComponent.ɵfac = function CalendarComponent_Factory(t) { return ɵCalendarComponent_BaseFactory(t || CalendarComponent); };
CalendarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CalendarComponent, selectors: [["", "nCalendar", ""]], inputs: { maxDate: "maxDate", yearRange: "yearRange", monthNavigator: "monthNavigator", yearNavigator: "yearNavigator", locale: "locale" }, features: [ɵngcc0.ɵɵProvidersFeature([angularBase.provideValueAccessor(CalendarComponent_1)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c22, ngContentSelectors: _c13, decls: 7, vars: 16, consts: [["form-notification", "", 1, "md-inputfield", 3, "name", "form"], ["notification", ""], [3, "ngClass", "name", "formControl", "locale", "dateFormat", "yearRange", "maxDate", "monthNavigator", "yearNavigator", "onBlur", "onFocus", "onSelect"], ["input", ""], [3, "for", "innerHTML"], [3, "control", 4, "ngIf"], [3, "control"]], template: function CalendarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "p-calendar", 2, 3);
        ɵngcc0.ɵɵlistener("onBlur", function CalendarComponent_Template_p_calendar_onBlur_2_listener($event) { return ctx.onBlurEvent($event); })("onFocus", function CalendarComponent_Template_p_calendar_onFocus_2_listener($event) { return ctx.onFocusEvent($event); })("onSelect", function CalendarComponent_Template_p_calendar_onSelect_2_listener($event) { return ctx.onSelectEvent($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "label", 4);
        ɵngcc0.ɵɵtemplate(5, CalendarComponent_nValidationMessage_5_Template, 1, 1, "nValidationMessage", 5);
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r1047 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("form", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(14, _c21, _r1047.message))("name", ctx.name)("formControl", ctx.formControl)("locale", ctx.locale)("dateFormat", ctx.locale.dateFormat)("yearRange", ctx.yearRange)("maxDate", ctx.maxDate)("monthNavigator", ctx.monthNavigator)("yearNavigator", ctx.yearNavigator);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("for", ctx.name)("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !_r1047.message);
    } }, directives: function () { return [FormNotificationComponent, ɵngcc13.Calendar, ɵngcc4.NgClass, ɵngcc7.NgControlStatus, ɵngcc7.FormControlDirective, ɵngcc4.NgIf, ValidationMessageComponent]; }, encapsulation: 2 });
var ɵCalendarComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(CalendarComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CalendarComponent, [{
        type: core.Component,
        args: [{
                selector: "[nCalendar]",
                template: "<span #notification form-notification class=\"md-inputfield\" [name]=\"name\" [form]=\"form\">\n    <p-calendar #input\n        [ngClass]=\"{ 'ng-invalid ng-dirty': notification.message }\"\n        [name]=\"name\"\n        [formControl]=\"formControl\"\n        [locale]=\"locale\"\n        [dateFormat]=\"locale.dateFormat\"\n        [yearRange]=\"yearRange\"\n        [maxDate]=\"maxDate\"\n        [monthNavigator]=\"monthNavigator\"\n        [yearNavigator]=\"yearNavigator\"\n        (onBlur)=\"onBlurEvent($event)\"\n        (onFocus)=\"onFocusEvent($event)\"\n        (onSelect)=\"onSelectEvent($event)\">\n    </p-calendar>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
                providers: [angularBase.provideValueAccessor(CalendarComponent_1)]
            }]
    }], null, { maxDate: [{
            type: core.Input
        }], yearRange: [{
            type: core.Input
        }], monthNavigator: [{
            type: core.Input
        }], yearNavigator: [{
            type: core.Input
        }], locale: [{
            type: core.Input
        }] }); })();
        return CalendarComponent;
    }(FieldComponent));

    var TextAreaComponent = /** @class */ (function (_super) {
        __extends(TextAreaComponent, _super);
        function TextAreaComponent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.autoResize = false;
            return _this;
        }
        TextAreaComponent_1 = TextAreaComponent;
        var TextAreaComponent_1;
        __decorate([
            core.Input()
        ], TextAreaComponent.prototype, "autoResize", void 0);
        __decorate([
            core.Input()
        ], TextAreaComponent.prototype, "rows", void 0);
        __decorate([
            core.Input()
        ], TextAreaComponent.prototype, "cols", void 0);
        __decorate([
            core.Input()
        ], TextAreaComponent.prototype, "minLength", void 0);
        __decorate([
            core.Input()
        ], TextAreaComponent.prototype, "maxLength", void 0);
TextAreaComponent.ɵfac = function TextAreaComponent_Factory(t) { return ɵTextAreaComponent_BaseFactory(t || TextAreaComponent); };
TextAreaComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TextAreaComponent, selectors: [["", "nTextArea", ""]], inputs: { autoResize: "autoResize", rows: "rows", cols: "cols", minLength: "minLength", maxLength: "maxLength" }, features: [ɵngcc0.ɵɵProvidersFeature([angularBase.provideValueAccessor(TextAreaComponent_1)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c23, ngContentSelectors: _c13, decls: 8, vars: 15, consts: [["form-notification", "", 1, "md-inputfield", 3, "name", "form"], ["notification", ""], ["pInputTextarea", "", "type", "text", 3, "ngClass", "name", "autoResize", "rows", "cols", "minLength", "maxLength", "formControl", "blur", "focus"], ["input", ""], [3, "for", "innerHTML"], [3, "control", 4, "ngIf"], [3, "control"]], template: function TextAreaComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "textarea", 2, 3);
        ɵngcc0.ɵɵlistener("blur", function TextAreaComponent_Template_textarea_blur_2_listener($event) { return ctx.onBlurEvent($event); })("focus", function TextAreaComponent_Template_textarea_focus_2_listener($event) { return ctx.onFocusEvent($event); });
        ɵngcc0.ɵɵtext(4, "    ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(5, "label", 4);
        ɵngcc0.ɵɵtemplate(6, TextAreaComponent_nValidationMessage_6_Template, 1, 1, "nValidationMessage", 5);
        ɵngcc0.ɵɵprojection(7);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r1050 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("form", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(13, _c21, _r1050.message))("name", ctx.name)("autoResize", ctx.autoResize)("rows", ctx.rows)("cols", ctx.cols)("minLength", ctx.minLength)("maxLength", ctx.maxLength)("formControl", ctx.formControl);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("for", ctx.name)("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !_r1050.message);
    } }, directives: function () { return [FormNotificationComponent, ɵngcc7.DefaultValueAccessor, ɵngcc14.InputTextarea, ɵngcc4.NgClass, ɵngcc7.NgControlStatus, ɵngcc7.FormControlDirective, ɵngcc4.NgIf, ValidationMessageComponent]; }, encapsulation: 2 });
var ɵTextAreaComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TextAreaComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextAreaComponent, [{
        type: core.Component,
        args: [{
                selector: "[nTextArea]",
                template: "<span #notification form-notification class=\"md-inputfield\" [name]=\"name\" [form]=\"form\">\n    <textarea #input\n        pInputTextarea\n        [ngClass]=\"{ 'ng-invalid ng-dirty': notification.message }\"\n        type=\"text\"\n        [name]=\"name\"\n        [autoResize]=\"autoResize\"\n        [rows]=\"rows\"\n        [cols]=\"cols\"\n        [minLength]=\"minLength\"\n        [maxLength]=\"maxLength\"\n        [formControl]=\"formControl\"\n        (blur)=\"onBlurEvent($event)\"\n        (focus)=\"onFocusEvent($event)\">\n    </textarea>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
                providers: [angularBase.provideValueAccessor(TextAreaComponent_1)]
            }]
    }], null, { autoResize: [{
            type: core.Input
        }], rows: [{
            type: core.Input
        }], cols: [{
            type: core.Input
        }], minLength: [{
            type: core.Input
        }], maxLength: [{
            type: core.Input
        }] }); })();
        return TextAreaComponent;
    }(FieldComponent));

    var DropdownComponent = /** @class */ (function (_super) {
        __extends(DropdownComponent, _super);
        function DropdownComponent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.virtualScroll = false;
            _this.filter = false;
            _this.itemSize = 30;
            _this.options = [];
            _this.onChange = new core.EventEmitter();
            return _this;
        }
        DropdownComponent_1 = DropdownComponent;
        DropdownComponent.prototype.ngOnInit = function () {
            var _this = this;
            _super.prototype.ngOnInit.call(this);
            if (this.service) {
                this.service.findAll(null).subscribe(function (data) {
                    _this.options = data;
                });
            }
        };
        DropdownComponent.prototype.onChangeEvent = function (event) {
            this.onChange.emit(event);
        };
        DropdownComponent.prototype.outerToInner = function (value) {
            var _this = this;
            if (value && value.id) {
                this.service.find(value.id).subscribe(function (data) {
                    _this.formControl.setValue(data);
                });
            }
            return value;
        };
        var DropdownComponent_1;
        __decorate([
            core.Input()
        ], DropdownComponent.prototype, "optionLabel", void 0);
        __decorate([
            core.Input()
        ], DropdownComponent.prototype, "virtualScroll", void 0);
        __decorate([
            core.Input()
        ], DropdownComponent.prototype, "filter", void 0);
        __decorate([
            core.Input()
        ], DropdownComponent.prototype, "itemSize", void 0);
        __decorate([
            core.Input()
        ], DropdownComponent.prototype, "service", void 0);
        __decorate([
            core.Input()
        ], DropdownComponent.prototype, "options", void 0);
        __decorate([
            core.Output()
        ], DropdownComponent.prototype, "onChange", void 0);
DropdownComponent.ɵfac = function DropdownComponent_Factory(t) { return ɵDropdownComponent_BaseFactory(t || DropdownComponent); };
DropdownComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DropdownComponent, selectors: [["", "nDropdown", ""]], inputs: { optionLabel: "optionLabel", virtualScroll: "virtualScroll", filter: "filter", itemSize: "itemSize", service: "service", options: "options" }, outputs: { onChange: "onChange" }, features: [ɵngcc0.ɵɵProvidersFeature([angularBase.provideValueAccessor(DropdownComponent_1)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c24, ngContentSelectors: _c13, decls: 7, vars: 11, consts: [["form-notification", "", 1, "md-inputfield", "custom-select", 3, "name", "form"], ["notification", ""], [3, "formControl", "optionLabel", "options", "filter", "virtualScroll", "itemSize", "onChange"], ["input", ""], [3, "for", "innerHTML"], [3, "control", 4, "ngIf"], [3, "control"]], template: function DropdownComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "p-dropdown", 2, 3);
        ɵngcc0.ɵɵlistener("onChange", function DropdownComponent_Template_p_dropdown_onChange_2_listener($event) { return ctx.onChangeEvent($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "label", 4);
        ɵngcc0.ɵɵtemplate(5, DropdownComponent_nValidationMessage_5_Template, 1, 1, "nValidationMessage", 5);
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r1053 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("form", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("formControl", ctx.formControl)("optionLabel", ctx.optionLabel)("options", ctx.options)("filter", ctx.filter)("virtualScroll", ctx.virtualScroll)("itemSize", ctx.itemSize);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("for", ctx.name)("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !_r1053.message);
    } }, directives: function () { return [FormNotificationComponent, ɵngcc9.Dropdown, ɵngcc7.NgControlStatus, ɵngcc7.FormControlDirective, ɵngcc4.NgIf, ValidationMessageComponent]; }, encapsulation: 2 });
var ɵDropdownComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(DropdownComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DropdownComponent, [{
        type: core.Component,
        args: [{
                selector: "[nDropdown]",
                template: "<span #notification form-notification class=\"md-inputfield custom-select\" [name]=\"name\" [form]=\"form\">\n    <p-dropdown #input\n        [formControl]=\"formControl\"\n        [optionLabel]=\"optionLabel\"\n        [options]=\"options\"\n        [filter]=\"filter\"\n        [virtualScroll]=\"virtualScroll\"\n        [itemSize]=\"itemSize\"\n        (onChange)=\"onChangeEvent($event)\">\n    </p-dropdown>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
                providers: [angularBase.provideValueAccessor(DropdownComponent_1)]
            }]
    }], null, { optionLabel: [{
            type: core.Input
        }], virtualScroll: [{
            type: core.Input
        }], filter: [{
            type: core.Input
        }], itemSize: [{
            type: core.Input
        }], service: [{
            type: core.Input
        }], options: [{
            type: core.Input
        }], onChange: [{
            type: core.Output
        }] }); })();
        return DropdownComponent;
    }(FieldComponent));

    var InputMaskComponent = /** @class */ (function (_super) {
        __extends(InputMaskComponent, _super);
        function InputMaskComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        InputMaskComponent_1 = InputMaskComponent;
        var InputMaskComponent_1;
        __decorate([
            core.Input()
        ], InputMaskComponent.prototype, "mask", void 0);
        __decorate([
            core.Input()
        ], InputMaskComponent.prototype, "placeholder", void 0);
InputMaskComponent.ɵfac = function InputMaskComponent_Factory(t) { return ɵInputMaskComponent_BaseFactory(t || InputMaskComponent); };
InputMaskComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InputMaskComponent, selectors: [["", "nInputMask", ""]], inputs: { mask: "mask", placeholder: "placeholder" }, features: [ɵngcc0.ɵɵProvidersFeature([angularBase.provideValueAccessor(InputMaskComponent_1)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c25, ngContentSelectors: _c13, decls: 7, vars: 12, consts: [["form-notification", "", 1, "md-inputfield", 3, "name", "form"], ["notification", ""], ["pInputText", "", 3, "ngClass", "name", "formControl", "mask", "placeholder", "onBlur", "onFocus"], ["input", ""], [3, "for", "innerHTML"], [3, "control", 4, "ngIf"], [3, "control"]], template: function InputMaskComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "p-inputMask", 2, 3);
        ɵngcc0.ɵɵlistener("onBlur", function InputMaskComponent_Template_p_inputMask_onBlur_2_listener($event) { return ctx.onBlurEvent($event); })("onFocus", function InputMaskComponent_Template_p_inputMask_onFocus_2_listener($event) { return ctx.onFocusEvent($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "label", 4);
        ɵngcc0.ɵɵtemplate(5, InputMaskComponent_nValidationMessage_5_Template, 1, 1, "nValidationMessage", 5);
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r1056 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("form", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(10, _c21, _r1056.message))("name", ctx.name)("formControl", ctx.formControl)("mask", ctx.mask)("placeholder", ctx.placeholder);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("for", ctx.name)("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !_r1056.message);
    } }, directives: function () { return [FormNotificationComponent, ɵngcc15.InputMask, ɵngcc2.InputText, ɵngcc4.NgClass, ɵngcc7.NgControlStatus, ɵngcc7.FormControlDirective, ɵngcc4.NgIf, ValidationMessageComponent]; }, encapsulation: 2 });
var ɵInputMaskComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(InputMaskComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InputMaskComponent, [{
        type: core.Component,
        args: [{
                selector: "[nInputMask]",
                template: "<span #notification form-notification class=\"md-inputfield\" [name]=\"name\" [form]=\"form\">\n    <p-inputMask #input\n        pInputText\n        [ngClass]=\"{ 'ng-invalid ng-dirty': notification.message }\"\n        [name]=\"name\"\n        (onBlur)=\"onBlurEvent($event)\"\n        (onFocus)=\"onFocusEvent($event)\"\n        [formControl]=\"formControl\"\n        [mask]=\"mask\"\n        [placeholder]=\"placeholder\"></p-inputMask>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
                providers: [angularBase.provideValueAccessor(InputMaskComponent_1)]
            }]
    }], null, { mask: [{
            type: core.Input
        }], placeholder: [{
            type: core.Input
        }] }); })();
        return InputMaskComponent;
    }(FieldComponent));

    var CheckComponent = /** @class */ (function (_super) {
        __extends(CheckComponent, _super);
        /**
         * Método construtor responsável por carregar o serviço de validação
         * @param formNotificationService
         */
        function CheckComponent(controlContainer, injector, formNotificationService) {
            var _this = _super.call(this, controlContainer, injector) || this;
            _this.formNotificationService = formNotificationService;
            return _this;
        }
        CheckComponent_1 = CheckComponent;
        /**
         * Método Inicial para subscrição no endpoint responsável por validar o formulário
         */
        CheckComponent.prototype.ngOnInit = function () {
            var _this = this;
            _super.prototype.ngOnInit.call(this);
            this.subscription = this.formNotificationService
                .notifications(this.form, this.name)
                .subscribe(function (notification) {
                if (notification instanceof angularBase.FieldFormNotification) {
                    _this.message = notification.message;
                }
                else {
                    _this.message = null;
                }
            });
        };
        /**
         * Método responsável por realizar a saida das subscrições do endpont de validação
         */
        CheckComponent.prototype.ngOnDestroy = function () {
            _super.prototype.ngOnDestroy.call(this);
            this.subscription.unsubscribe();
        };
        var CheckComponent_1;
        CheckComponent.ctorParameters = function () { return [
            { type: forms.ControlContainer },
            { type: core.Injector },
            { type: angularBase.FormNotificationService }
        ]; };
CheckComponent.ɵfac = function CheckComponent_Factory(t) { return new (t || CheckComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.ControlContainer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormNotificationService)); };
CheckComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CheckComponent, selectors: [["", "nCheck", ""]], features: [ɵngcc0.ɵɵProvidersFeature([angularBase.provideValueAccessor(CheckComponent_1)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c26, ngContentSelectors: _c13, decls: 11, vars: 12, consts: [[1, "ui-g-12", "semborda"], [1, "ui-g-4", 3, "innerHTML"], [1, "ui-g-4"], ["id", "sim", "type", "radio", "pRadioButton", "", 3, "ngClass", "value", "name", "formControl"], ["id", "n\u00E3o", "type", "radio", "name", "correspondencia", "pRadioButton", "", 3, "ngClass", "value", "formControl"]], template: function CheckComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelement(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelement(3, "p-radioButton", 3);
        ɵngcc0.ɵɵelementStart(4, "label");
        ɵngcc0.ɵɵtext(5, "Sim");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 2);
        ɵngcc0.ɵɵelement(7, "p-radioButton", 4);
        ɵngcc0.ɵɵelementStart(8, "label");
        ɵngcc0.ɵɵtext(9, "N\u00E3o");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(10);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(8, _c21, ctx.message))("value", true)("name", ctx.name)("formControl", ctx.formControl);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(10, _c21, ctx.message))("value", false)("formControl", ctx.formControl);
    } }, directives: [ɵngcc16.RadioButton, ɵngcc4.NgClass, ɵngcc7.NgControlStatus, ɵngcc7.FormControlDirective], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckComponent, [{
        type: core.Component,
        args: [{
                selector: "[nCheck]",
                template: "<div class=\"ui-g-12 semborda\">\n    <div class=\"ui-g-4\" [innerHTML]=\"label\"></div>\n    <div class=\"ui-g-4\">\n        <p-radioButton\n            [ngClass]=\"{ 'ng-invalid ng-dirty': message }\"\n            id=\"sim\"\n            type=\"radio\"\n            [value]=\"true\"\n            [name]=\"name\"\n            [formControl]=\"formControl\"\n            pRadioButton></p-radioButton>\n        <label>Sim</label>\n    </div>\n    <div class=\"ui-g-4\">\n        <p-radioButton\n            [ngClass]=\"{ 'ng-invalid ng-dirty': message }\"\n            id=\"n\u00E3o\"\n            type=\"radio\"\n            [value]=\"false\"\n            name=\"correspondencia\"\n            [formControl]=\"formControl\"\n            pRadioButton></p-radioButton>\n        <label>N\u00E3o</label>\n    </div>\n    <ng-content></ng-content>\n</div>\n",
                providers: [angularBase.provideValueAccessor(CheckComponent_1)]
            }]
    }], function () { return [{ type: ɵngcc7.ControlContainer }, { type: ɵngcc0.Injector }, { type: ɵngcc3.FormNotificationService }]; }, null); })();
        return CheckComponent;
    }(FieldComponent));

    var FormComponent = /** @class */ (function () {
        function FormComponent(crudService, activatedRoute, router) {
            this.crudService = crudService;
            this.activatedRoute = activatedRoute;
            this.router = router;
            this.action = "save";
            this.saveLabel = "Salvar";
            this.disableSave = false;
            this.save = new core.EventEmitter();
            this.reset = new core.EventEmitter();
        }
        FormComponent.prototype.ngOnInit = function () {
            if (this.service) {
                this.crudService = this.service;
            }
        };
        FormComponent.prototype.submit = function () {
            var _this = this;
            if (this.save.observers.length) {
                this.save.emit(this.form.value);
            }
            else {
                this.crudService[this.action](this.form.value)
                    .subscribe(function () {
                    if (_this.route) {
                        _this.router.navigate(_this.route, { relativeTo: _this.activatedRoute });
                    }
                    else if (_this.reset.observers.length) {
                        _this.reset.emit(_this.form);
                    }
                    else {
                        _this.form.reset();
                    }
                });
            }
        };
        FormComponent.ctorParameters = function () { return [
            { type: undefined, decorators: [{ type: core.Inject, args: [CRUD_SERVICE,] }] },
            { type: router.ActivatedRoute },
            { type: router.Router }
        ]; };
        __decorate([
            core.Input()
        ], FormComponent.prototype, "form", void 0);
        __decorate([
            core.Input()
        ], FormComponent.prototype, "route", void 0);
        __decorate([
            core.Input()
        ], FormComponent.prototype, "action", void 0);
        __decorate([
            core.Input()
        ], FormComponent.prototype, "saveLabel", void 0);
        __decorate([
            core.Input()
        ], FormComponent.prototype, "service", void 0);
        __decorate([
            core.Input()
        ], FormComponent.prototype, "disableSave", void 0);
        __decorate([
            core.Output()
        ], FormComponent.prototype, "save", void 0);
        __decorate([
            core.Output()
        ], FormComponent.prototype, "reset", void 0);
        FormComponent = __decorate([ __param(0, core.Inject(CRUD_SERVICE))
        ], FormComponent);
FormComponent.ɵfac = function FormComponent_Factory(t) { return new (t || FormComponent)(ɵngcc0.ɵɵdirectiveInject(CRUD_SERVICE), ɵngcc0.ɵɵdirectiveInject(ɵngcc11.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc11.Router)); };
FormComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormComponent, selectors: [["nForm"]], inputs: { action: "action", saveLabel: "saveLabel", disableSave: "disableSave", form: "form", route: "route", service: "service" }, outputs: { save: "save", reset: "reset" }, ngContentSelectors: _c28, decls: 5, vars: 1, consts: [[1, "ui-g", "form-group", 3, "submit"], ["class", "ui-g-12 ui-lg-2 ui-md-4 ui-sm-12", 4, "ngIf"], [1, "ui-g-12", "ui-lg-2", "ui-md-4", "ui-sm-12"], ["pButton", "", "type", "submit", 3, "label", "disabled"]], template: function FormComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c27);
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "form", 0);
        ɵngcc0.ɵɵlistener("submit", function FormComponent_Template_form_submit_1_listener() { return ctx.submit(); });
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵtemplate(3, FormComponent_div_3_Template, 2, 2, "div", 1);
        ɵngcc0.ɵɵprojection(4, 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.disableSave);
    } }, directives: [ɵngcc7.ɵangular_packages_forms_forms_y, ɵngcc7.NgControlStatusGroup, ɵngcc7.NgForm, ɵngcc4.NgIf, ɵngcc2.ButtonDirective], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormComponent, [{
        type: core.Component,
        args: [{
                selector: 'nForm',
                template: "<div>\n    <form (submit)=\"submit()\" class=\"ui-g form-group\">\n        <ng-content></ng-content>\n        <div class=\"ui-g-12 ui-lg-2 ui-md-4 ui-sm-12\" *ngIf=\"!disableSave\">\n            <button pButton type=\"submit\" [label]=\"saveLabel\" [disabled]=\"form.disabled || form.invalid\"></button>\n        </div>\n        <ng-content select=\"[nButton]\"></ng-content>\n    </form>\n</div>"
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: core.Inject,
                args: [CRUD_SERVICE]
            }] }, { type: ɵngcc11.ActivatedRoute }, { type: ɵngcc11.Router }]; }, { action: [{
            type: core.Input
        }], saveLabel: [{
            type: core.Input
        }], disableSave: [{
            type: core.Input
        }], save: [{
            type: core.Output
        }], reset: [{
            type: core.Output
        }], form: [{
            type: core.Input
        }], route: [{
            type: core.Input
        }], service: [{
            type: core.Input
        }] }); })();
        return FormComponent;
    }());

    var ValidationMessageComponent = /** @class */ (function () {
        function ValidationMessageComponent() {
        }
        __decorate([
            core.Input()
        ], ValidationMessageComponent.prototype, "control", void 0);
ValidationMessageComponent.ɵfac = function ValidationMessageComponent_Factory(t) { return new (t || ValidationMessageComponent)(); };
ValidationMessageComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ValidationMessageComponent, selectors: [["nValidationMessage"]], inputs: { control: "control" }, decls: 1, vars: 1, consts: [[4, "ngIf"], [1, "form-notification-msg", "ui-message", "ui-messages-error", "ui-corner-all"]], template: function ValidationMessageComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ValidationMessageComponent_ng_container_0_Template, 8, 6, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.control.invalid && (ctx.control.dirty || ctx.control.touched) && ctx.control.errors);
    } }, directives: [ɵngcc4.NgIf], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ValidationMessageComponent, [{
        type: core.Component,
        args: [{
                selector: 'nValidationMessage',
                template: "<ng-container *ngIf=\"control.invalid && (control.dirty || control.touched) && control.errors\">\n    <div class=\"form-notification-msg ui-message ui-messages-error ui-corner-all\" >\n        <ng-container *ngIf=\"control.errors.required\">\n            campo obrigat\u00F3rio\n        </ng-container>\n        <ng-container *ngIf=\"control.errors.minlength\">\n            tamanho m\u00EDnimo {{ control.errors.minlength.requiredLength }}\n        </ng-container>\n        <ng-container *ngIf=\"control.errors.maxlength\">\n            tamanho m\u00E1ximo {{ control.errors.maxlength.requiredLength }}\n        </ng-container>\n        <ng-container *ngIf=\"control.errors.min\">\n            valor m\u00EDnimo {{ control.errors.min.min }}\n        </ng-container>\n        <ng-container *ngIf=\"control.errors.max\">\n            valor m\u00E1ximo {{ control.errors.max.max }}\n        </ng-container>\n        <ng-container *ngIf=\"control.errors.email || control.errors.pattern\">\n            campo inv\u00E1lido\n        </ng-container>\n    </div>\n</ng-container>\n"
            }]
    }], function () { return []; }, { control: [{
            type: core.Input
        }] }); })();
        return ValidationMessageComponent;
    }());

    var AutoCompleteComponent = /** @class */ (function (_super) {
        __extends(AutoCompleteComponent, _super);
        function AutoCompleteComponent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.virtualScroll = false;
            _this.itemSize = 30;
            return _this;
        }
        AutoCompleteComponent_1 = AutoCompleteComponent;
        AutoCompleteComponent.prototype.selectItem = function (option) {
            this.formControl.setValue(option);
        };
        AutoCompleteComponent.prototype.findAll = function (event) {
            var _this = this;
            var query = {};
            query[this.field] = event.query;
            this.service.findAll(query).subscribe(function (data) {
                _this.results = data;
            });
        };
        AutoCompleteComponent.prototype.outerToInner = function (value) {
            var _this = this;
            if (value && value.id && !value[this.field]) {
                this.service.find(value.id).subscribe(function (data) {
                    _this.formControl.setValue(data);
                });
            }
            return value;
        };
        var AutoCompleteComponent_1;
        __decorate([
            core.Input()
        ], AutoCompleteComponent.prototype, "field", void 0);
        __decorate([
            core.Input()
        ], AutoCompleteComponent.prototype, "virtualScroll", void 0);
        __decorate([
            core.Input()
        ], AutoCompleteComponent.prototype, "itemSize", void 0);
        __decorate([
            core.Input()
        ], AutoCompleteComponent.prototype, "service", void 0);
AutoCompleteComponent.ɵfac = function AutoCompleteComponent_Factory(t) { return ɵAutoCompleteComponent_BaseFactory(t || AutoCompleteComponent); };
AutoCompleteComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AutoCompleteComponent, selectors: [["", "nAutoComplete", ""]], inputs: { field: "field", virtualScroll: "virtualScroll", itemSize: "itemSize", service: "service" }, features: [ɵngcc0.ɵɵProvidersFeature([angularBase.provideValueAccessor(AutoCompleteComponent_1)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c29, ngContentSelectors: _c13, decls: 7, vars: 10, consts: [["form-notification", "", 1, "md-inputfield", 3, "name", "form"], ["notification", ""], [3, "formControl", "suggestions", "virtualScroll", "itemSize", "field", "onBlur", "onSelect", "onFocus", "completeMethod"], ["input", ""], [3, "for", "innerHTML"], [3, "control", 4, "ngIf"], [3, "control"]], template: function AutoCompleteComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "p-autoCompleteCustom", 2, 3);
        ɵngcc0.ɵɵlistener("onBlur", function AutoCompleteComponent_Template_p_autoCompleteCustom_onBlur_2_listener($event) { return ctx.onBlurEvent($event); })("onSelect", function AutoCompleteComponent_Template_p_autoCompleteCustom_onSelect_2_listener($event) { return ctx.onSelectEvent($event); })("onFocus", function AutoCompleteComponent_Template_p_autoCompleteCustom_onFocus_2_listener($event) { return ctx.onFocusEvent($event); })("completeMethod", function AutoCompleteComponent_Template_p_autoCompleteCustom_completeMethod_2_listener($event) { return ctx.findAll($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "label", 4);
        ɵngcc0.ɵɵtemplate(5, AutoCompleteComponent_nValidationMessage_5_Template, 1, 1, "nValidationMessage", 5);
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r1067 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("form", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("formControl", ctx.formControl)("suggestions", ctx.results)("virtualScroll", ctx.virtualScroll)("itemSize", ctx.itemSize)("field", ctx.field);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("for", ctx.name)("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !_r1067.message);
    } }, directives: function () { return [FormNotificationComponent,
        AutoCompleteCustomComponent, ɵngcc7.NgControlStatus, ɵngcc7.FormControlDirective, ɵngcc4.NgIf, ValidationMessageComponent]; }, encapsulation: 2 });
var ɵAutoCompleteComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AutoCompleteComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutoCompleteComponent, [{
        type: core.Component,
        args: [{
                selector: "[nAutoComplete]",
                template: "<span #notification form-notification class=\"md-inputfield\" [name]=\"name\" [form]=\"form\">\n    <p-autoCompleteCustom #input\n        [formControl]=\"formControl\"\n        [suggestions]=\"results\"\n        [virtualScroll]=\"virtualScroll\"\n        [itemSize]=\"itemSize\"\n        (onBlur)=\"onBlurEvent($event)\"\n        (onSelect)=\"onSelectEvent($event)\"\n        (onFocus)=\"onFocusEvent($event)\"\n        (completeMethod)=\"findAll($event)\"\n        [field]=\"field\">\n    </p-autoCompleteCustom>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
                providers: [angularBase.provideValueAccessor(AutoCompleteComponent_1)]
            }]
    }], null, { field: [{
            type: core.Input
        }], virtualScroll: [{
            type: core.Input
        }], itemSize: [{
            type: core.Input
        }], service: [{
            type: core.Input
        }] }); })();
        return AutoCompleteComponent;
    }(FieldComponent));

    var AUTOCOMPLETE_VALUE_ACCESSOR = {
        provide: forms.NG_VALUE_ACCESSOR,
        useExisting: core.forwardRef(function () { return AutoCompleteCustomComponent; }),
        multi: true
    };
    var AutoCompleteCustomComponent = /** @class */ (function (_super) {
        __extends(AutoCompleteCustomComponent, _super);
        function AutoCompleteCustomComponent(el, renderer, cd, differs) {
            var _this = _super.call(this, el, renderer, cd, differs) || this;
            _this.el = el;
            _this.renderer = renderer;
            _this.cd = cd;
            _this.differs = differs;
            return _this;
        }
        AutoCompleteCustomComponent.ctorParameters = function () { return [
            { type: core.ElementRef },
            { type: core.Renderer2 },
            { type: core.ChangeDetectorRef },
            { type: core.IterableDiffers }
        ]; };
        __decorate([
            core.Input()
        ], AutoCompleteCustomComponent.prototype, "virtualScroll", void 0);
        __decorate([
            core.Input()
        ], AutoCompleteCustomComponent.prototype, "itemSize", void 0);
AutoCompleteCustomComponent.ɵfac = function AutoCompleteCustomComponent_Factory(t) { return new (t || AutoCompleteCustomComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };
AutoCompleteCustomComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AutoCompleteCustomComponent, selectors: [["p-autoCompleteCustom"]], inputs: { virtualScroll: "virtualScroll", itemSize: "itemSize" }, features: [ɵngcc0.ɵɵProvidersFeature([AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 12, consts: [[3, "ngClass", "ngStyle"], ["aria-autocomplete", "list", "role", "combobox", "aria-haspopup", "true", 3, "ngStyle", "class", "autocomplete", "ngClass", "value", "readonly", "disabled", "click", "input", "keydown", "keyup", "focus", "blur", "change", "paste", 4, "ngIf"], ["class", "ui-autocomplete-multiple-container ui-widget ui-inputtext ui-state-default ui-corner-all", 3, "ngClass", "click", 4, "ngIf"], ["class", "ui-autocomplete-loader pi pi-spinner pi-spin", 4, "ngIf"], ["type", "button", "pButton", "", "class", "ui-autocomplete-dropdown", 3, "icon", "disabled", "click", 4, "ngIf"], [3, "ngClass", "max-height", "ngStyle", "class", 4, "ngIf"], ["aria-autocomplete", "list", "role", "combobox", "aria-haspopup", "true", 3, "ngStyle", "autocomplete", "ngClass", "value", "readonly", "disabled", "click", "input", "keydown", "keyup", "focus", "blur", "change", "paste"], ["in", ""], [1, "ui-autocomplete-multiple-container", "ui-widget", "ui-inputtext", "ui-state-default", "ui-corner-all", 3, "ngClass", "click"], ["multiContainer", ""], ["class", "ui-autocomplete-token ui-state-highlight ui-corner-all", 4, "ngFor", "ngForOf"], [1, "ui-autocomplete-input-token"], ["aria-autocomplete", "list", "role", "combobox", "aria-haspopup", "true", 3, "disabled", "readonly", "autocomplete", "ngStyle", "input", "click", "keydown", "keyup", "focus", "blur", "change", "paste"], ["multiIn", ""], [1, "ui-autocomplete-token", "ui-state-highlight", "ui-corner-all"], ["token", ""], ["class", "ui-autocomplete-token-icon pi pi-fw pi-times", 3, "click", 4, "ngIf"], ["class", "ui-autocomplete-token-label", 4, "ngIf"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "ui-autocomplete-token-icon", "pi", "pi-fw", "pi-times", 3, "click"], [1, "ui-autocomplete-token-label"], [1, "ui-autocomplete-loader", "pi", "pi-spinner", "pi-spin"], ["type", "button", "pButton", "", 1, "ui-autocomplete-dropdown", 3, "icon", "disabled", "click"], ["ddBtn", ""], ["panel", ""], ["role", "listbox", 1, "ui-autocomplete-items", "ui-autocomplete-list", "ui-widget-content", "ui-widget", "ui-corner-all", "ui-helper-reset"], [4, "ngIf", "ngIfElse"], ["virtualScrollList", ""], ["class", "ui-autocomplete-emptymessage ui-autocomplete-list-item ui-corner-all", 4, "ngIf"], [3, "option", "highlightOption", "index", "itemSize", "template", "resolvedFieldData", "highlightOptionChange", "onClick", 4, "ngFor", "ngForOf"], [3, "option", "highlightOption", "index", "itemSize", "template", "resolvedFieldData", "highlightOptionChange", "onClick"], [3, "ngStyle", "itemSize", 4, "ngIf"], [3, "ngStyle", "itemSize"], [4, "cdkVirtualFor", "cdkVirtualForOf"], [1, "ui-autocomplete-emptymessage", "ui-autocomplete-list-item", "ui-corner-all"]], template: function AutoCompleteCustomComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "span", 0);
        ɵngcc0.ɵɵtemplate(1, AutoCompleteCustomComponent_input_1_Template, 2, 22, "input", 1);
        ɵngcc0.ɵɵtemplate(2, AutoCompleteCustomComponent_ul_2_Template, 6, 21, "ul", 2);
        ɵngcc0.ɵɵtemplate(3, AutoCompleteCustomComponent_i_3_Template, 1, 0, "i", 3);
        ɵngcc0.ɵɵtemplate(4, AutoCompleteCustomComponent_button_4_Template, 2, 3, "button", 4);
        ɵngcc0.ɵɵtemplate(5, AutoCompleteCustomComponent_div_5_Template, 7, 16, "div", 5);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.styleClass);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(9, _c36, ctx.dropdown, ctx.multiple))("ngStyle", ctx.style);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.multiple);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.multiple);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.loading);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.dropdown);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.overlayVisible);
    } }, directives: function () { return [ɵngcc4.NgClass, ɵngcc4.NgStyle, ɵngcc4.NgIf, ɵngcc4.NgForOf, ɵngcc4.NgTemplateOutlet, ɵngcc2.ButtonDirective, AutoCompleteItem, ɵngcc17.CdkVirtualScrollViewport, ɵngcc17.CdkFixedSizeVirtualScroll, ɵngcc17.CdkVirtualForOf]; }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutoCompleteCustomComponent, [{
        type: core.Component,
        args: [{
                selector: 'p-autoCompleteCustom',
                template: "<span [ngClass]=\"{'ui-autocomplete ui-widget':true,'ui-autocomplete-dd':dropdown,'ui-autocomplete-multiple':multiple}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n    <input *ngIf=\"!multiple\" #in [attr.type]=\"type\" [attr.id]=\"inputId\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [autocomplete]=\"autocomplete\" [attr.required]=\"required\" [attr.name]=\"name\"\n        [ngClass]=\"'ui-inputtext ui-widget ui-state-default ui-corner-all ui-autocomplete-input'\" [value]=\"inputFieldValue\" aria-autocomplete=\"list\" role=\"combobox\" [attr.aria-expanded]=\"overlayVisible\" aria-haspopup=\"true\" [attr.aria-activedescendant]=\"'p-highlighted-option'\"\n        (click)=\"onInputClick($event)\" (input)=\"onInput($event)\" (keydown)=\"onKeydown($event)\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\"\n        [attr.placeholder]=\"placeholder\" [attr.size]=\"size\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [readonly]=\"readonly\" [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\">\n\n    <ul *ngIf=\"multiple\" #multiContainer class=\"ui-autocomplete-multiple-container ui-widget ui-inputtext ui-state-default ui-corner-all\" [ngClass]=\"{'ui-state-disabled':disabled,'ui-state-focus':focus}\" (click)=\"multiIn.focus()\">\n        <li #token *ngFor=\"let val of value\" class=\"ui-autocomplete-token ui-state-highlight ui-corner-all\">\n            <span class=\"ui-autocomplete-token-icon pi pi-fw pi-times\" (click)=\"removeItem(token)\" *ngIf=\"!disabled\"></span>\n            <span *ngIf=\"!selectedItemTemplate\" class=\"ui-autocomplete-token-label\">{{resolveFieldData(val)}}</span>\n            <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: {$implicit: val}\"></ng-container>\n        </li>\n        <li class=\"ui-autocomplete-input-token\">\n            <input #multiIn [attr.type]=\"type\" [attr.id]=\"inputId\" [disabled]=\"disabled\" [attr.placeholder]=\"(value&&value.length ? null : placeholder)\" [attr.tabindex]=\"tabindex\" (input)=\"onInput($event)\"  (click)=\"onInputClick($event)\"\n                (keydown)=\"onKeydown($event)\" [readonly]=\"readonly\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\" [autocomplete]=\"autocomplete\"\n                [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\"\n                aria-autocomplete=\"list\" role=\"combobox\" [attr.aria-expanded]=\"overlayVisible\" aria-haspopup=\"true\" [attr.aria-activedescendant]=\"'p-highlighted-option'\">\n        </li>\n    </ul>\n\n    <i *ngIf=\"loading\" class=\"ui-autocomplete-loader pi pi-spinner pi-spin\"></i>\n    <button #ddBtn type=\"button\" pButton [icon]=\"dropdownIcon\" class=\"ui-autocomplete-dropdown\" [disabled]=\"disabled\"\n        (click)=\"handleDropdownClick($event)\" *ngIf=\"dropdown\" [attr.tabindex]=\"tabindex\">\n    </button>\n\n    <div #panel *ngIf=\"overlayVisible\" [ngClass]=\"['ui-autocomplete-panel ui-widget ui-widget-content ui-corner-all ui-shadow']\"\n        [style.max-height]=\"virtualScroll ? 'auto' : (scrollHeight||'auto')\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\"\n        [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationDone($event)\">\n        <ul role=\"listbox\" class=\"ui-autocomplete-items ui-autocomplete-list ui-widget-content ui-widget ui-corner-all ui-helper-reset\">\n            <ng-container *ngIf=\"!virtualScroll; else virtualScrollList\">\n                <p-autoCompleteItem *ngFor=\"let option of suggestions; let idx = index\"\n                    [option]=\"option\" [(highlightOption)]=\"highlightOption\" [index]=\"idx\"\n                    (onClick)=\"selectItem($event.option)\" [itemSize]=\"itemSize\"\n                    [template]=\"itemTemplate\" [resolvedFieldData]=\"resolveFieldData(option)\">\n                </p-autoCompleteItem>\n            </ng-container>\n            <ng-template #virtualScrollList>\n                <cdk-virtual-scroll-viewport *ngIf=\"virtualScroll && suggestions && suggestions.length\"\n                    [ngStyle]=\"{height: scrollHeight}\" [itemSize]=\"itemSize\">\n                    <ng-container *cdkVirtualFor=\"let option of suggestions; let idx = index\">\n                        <p-autoCompleteItem\n                            [option]=\"option\" [(highlightOption)]=\"highlightOption\" [index]=\"idx\"\n                            (onClick)=\"selectItem($event.option)\" [itemSize]=\"itemSize\"\n                            [template]=\"itemTemplate\" [resolvedFieldData]=\"resolveFieldData(option)\"\n                        ></p-autoCompleteItem>\n                    </ng-container>\n                </cdk-virtual-scroll-viewport>\n            </ng-template>\n\n            <li *ngIf=\"noResults && emptyMessage\" class=\"ui-autocomplete-emptymessage ui-autocomplete-list-item ui-corner-all\">{{emptyMessage}}</li>\n        </ul>\n    </div>\n</span>\n",
                providers: [AUTOCOMPLETE_VALUE_ACCESSOR]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.IterableDiffers }]; }, { virtualScroll: [{
            type: core.Input
        }], itemSize: [{
            type: core.Input
        }] }); })();
        return AutoCompleteCustomComponent;
    }(autocomplete.AutoComplete));

    var AutoCompleteItem = /** @class */ (function () {
        function AutoCompleteItem() {
            this.highlightOptionChange = new core.EventEmitter();
            this.onClick = new core.EventEmitter();
        }
        AutoCompleteItem.prototype.selectItem = function (event) {
            this.onClick.emit({
                originalEvent: event,
                option: this.option
            });
        };
        __decorate([
            core.Input()
        ], AutoCompleteItem.prototype, "option", void 0);
        __decorate([
            core.Input()
        ], AutoCompleteItem.prototype, "resolvedFieldData", void 0);
        __decorate([
            core.Input()
        ], AutoCompleteItem.prototype, "highlightOption", void 0);
        __decorate([
            core.Output()
        ], AutoCompleteItem.prototype, "highlightOptionChange", void 0);
        __decorate([
            core.Input()
        ], AutoCompleteItem.prototype, "index", void 0);
        __decorate([
            core.Input()
        ], AutoCompleteItem.prototype, "itemSize", void 0);
        __decorate([
            core.Input()
        ], AutoCompleteItem.prototype, "template", void 0);
        __decorate([
            core.Output()
        ], AutoCompleteItem.prototype, "onClick", void 0);
AutoCompleteItem.ɵfac = function AutoCompleteItem_Factory(t) { return new (t || AutoCompleteItem)(); };
AutoCompleteItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AutoCompleteItem, selectors: [["p-autoCompleteItem"]], inputs: { option: "option", resolvedFieldData: "resolvedFieldData", highlightOption: "highlightOption", index: "index", itemSize: "itemSize", template: "template" }, outputs: { highlightOptionChange: "highlightOptionChange", onClick: "onClick" }, decls: 3, vars: 13, consts: [["role", "option", 3, "ngClass", "id", "ngStyle", "mouseenter", "mouseleave", "click"], [4, "ngIf"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"]], template: function AutoCompleteItem_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "li", 0);
        ɵngcc0.ɵɵlistener("mouseenter", function AutoCompleteItem_Template_li_mouseenter_0_listener() { return ctx.highlightOptionChange.emit(ctx.option); })("mouseleave", function AutoCompleteItem_Template_li_mouseleave_0_listener() { return ctx.highlightOptionChange.emit(null); })("click", function AutoCompleteItem_Template_li_click_0_listener($event) { return ctx.selectItem($event); });
        ɵngcc0.ɵɵtemplate(1, AutoCompleteItem_span_1_Template, 2, 1, "span", 1);
        ɵngcc0.ɵɵtemplate(2, AutoCompleteItem_ng_container_2_Template, 1, 0, "ng-container", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(6, _c37, ctx.highlightOption == ctx.option))("id", ctx.highlightOption == ctx.option ? "p-highlighted-option" : "")("ngStyle", ɵngcc0.ɵɵpureFunction1(8, _c38, ctx.itemSize + "px"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.template);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.template)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(10, _c39, ctx.option, ctx.index));
    } }, directives: [ɵngcc4.NgClass, ɵngcc4.NgStyle, ɵngcc4.NgIf, ɵngcc4.NgTemplateOutlet], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutoCompleteItem, [{
        type: core.Component,
        args: [{
                selector: 'p-autoCompleteItem',
                template: "\n        <li role=\"option\" [ngClass]=\"{'ui-autocomplete-list-item ui-corner-all':true,'ui-state-highlight':(highlightOption==option)}\"\n            (mouseenter)=\"highlightOptionChange.emit(option)\" (mouseleave)=\"highlightOptionChange.emit(null)\"\n            [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem($event)\"\n            [ngStyle]=\"{'height': itemSize + 'px', 'display': 'table', 'width': '100%'}\">\n            <span *ngIf=\"!template\">{{resolvedFieldData}}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: {$implicit: option, index: index}\"></ng-container>\n        </li>\n    "
            }]
    }], function () { return []; }, { highlightOptionChange: [{
            type: core.Output
        }], onClick: [{
            type: core.Output
        }], option: [{
            type: core.Input
        }], resolvedFieldData: [{
            type: core.Input
        }], highlightOption: [{
            type: core.Input
        }], index: [{
            type: core.Input
        }], itemSize: [{
            type: core.Input
        }], template: [{
            type: core.Input
        }] }); })();
        return AutoCompleteItem;
    }());

    var AutoCompleteMultipleComponent = /** @class */ (function (_super) {
        __extends(AutoCompleteMultipleComponent, _super);
        function AutoCompleteMultipleComponent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.virtualScroll = false;
            _this.itemSize = 30;
            return _this;
        }
        AutoCompleteMultipleComponent_1 = AutoCompleteMultipleComponent;
        AutoCompleteMultipleComponent.prototype.findAll = function (event) {
            var _this = this;
            var query = {};
            query[this.field] = event.query;
            this.service.findAll(query).subscribe(function (data) {
                _this.results = data;
            });
        };
        AutoCompleteMultipleComponent.prototype.outerToInner = function (value) {
            var _this = this;
            if (value && value.length > 0 && !value[0][this.field]) {
                var obs_1 = [];
                value.forEach(function (element) {
                    if (element && element.id) {
                        obs_1.push(_this.service.find(element.id));
                    }
                });
                rxjs.forkJoin(obs_1).subscribe(function (data) {
                    _this.formControl.setValue(data);
                });
            }
            return value;
        };
        var AutoCompleteMultipleComponent_1;
        __decorate([
            core.Input()
        ], AutoCompleteMultipleComponent.prototype, "field", void 0);
        __decorate([
            core.Input()
        ], AutoCompleteMultipleComponent.prototype, "service", void 0);
        __decorate([
            core.Input()
        ], AutoCompleteMultipleComponent.prototype, "virtualScroll", void 0);
        __decorate([
            core.Input()
        ], AutoCompleteMultipleComponent.prototype, "itemSize", void 0);
AutoCompleteMultipleComponent.ɵfac = function AutoCompleteMultipleComponent_Factory(t) { return ɵAutoCompleteMultipleComponent_BaseFactory(t || AutoCompleteMultipleComponent); };
AutoCompleteMultipleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AutoCompleteMultipleComponent, selectors: [["", "nAutoCompleteMultiple", ""]], inputs: { field: "field", service: "service", virtualScroll: "virtualScroll", itemSize: "itemSize" }, features: [ɵngcc0.ɵɵProvidersFeature([angularBase.provideValueAccessor(AutoCompleteMultipleComponent_1)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c40, ngContentSelectors: _c13, decls: 7, vars: 11, consts: [["form-notification", "", 1, "md-inputfield", 3, "name", "form"], ["notification", ""], [3, "formControl", "suggestions", "field", "virtualScroll", "itemSize", "multiple", "completeMethod", "onBlur", "onSelect", "onFocus"], ["input", ""], [3, "for", "innerHTML"], [3, "control", 4, "ngIf"], [3, "control"]], template: function AutoCompleteMultipleComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "p-autoCompleteCustom", 2, 3);
        ɵngcc0.ɵɵlistener("completeMethod", function AutoCompleteMultipleComponent_Template_p_autoCompleteCustom_completeMethod_2_listener($event) { return ctx.findAll($event); })("onBlur", function AutoCompleteMultipleComponent_Template_p_autoCompleteCustom_onBlur_2_listener($event) { return ctx.onBlurEvent($event); })("onSelect", function AutoCompleteMultipleComponent_Template_p_autoCompleteCustom_onSelect_2_listener($event) { return ctx.onSelectEvent($event); })("onFocus", function AutoCompleteMultipleComponent_Template_p_autoCompleteCustom_onFocus_2_listener($event) { return ctx.onFocusEvent($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "label", 4);
        ɵngcc0.ɵɵtemplate(5, AutoCompleteMultipleComponent_nValidationMessage_5_Template, 1, 1, "nValidationMessage", 5);
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r1132 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("form", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("formControl", ctx.formControl)("suggestions", ctx.results)("field", ctx.field)("virtualScroll", ctx.virtualScroll)("itemSize", ctx.itemSize)("multiple", true);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("for", ctx.name)("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !_r1132.message);
    } }, directives: [FormNotificationComponent,
        AutoCompleteCustomComponent, ɵngcc7.NgControlStatus, ɵngcc7.FormControlDirective, ɵngcc4.NgIf, ValidationMessageComponent], encapsulation: 2 });
var ɵAutoCompleteMultipleComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AutoCompleteMultipleComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutoCompleteMultipleComponent, [{
        type: core.Component,
        args: [{
                selector: "[nAutoCompleteMultiple]",
                template: "<span #notification form-notification class=\"md-inputfield\" [name]=\"name\" [form]=\"form\">\n    <p-autoCompleteCustom #input\n        [formControl]=\"formControl\"\n        [suggestions]=\"results\"\n        (completeMethod)=\"findAll($event)\"\n        [field]=\"field\"\n        [virtualScroll]=\"virtualScroll\"\n        [itemSize]=\"itemSize\"\n        (onBlur)=\"onBlurEvent($event)\"\n        (onSelect)=\"onSelectEvent($event)\"\n        (onFocus)=\"onFocusEvent($event)\"\n        [multiple]=\"true\">\n    </p-autoCompleteCustom>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
                providers: [angularBase.provideValueAccessor(AutoCompleteMultipleComponent_1)]
            }]
    }], null, { field: [{
            type: core.Input
        }], service: [{
            type: core.Input
        }], virtualScroll: [{
            type: core.Input
        }], itemSize: [{
            type: core.Input
        }] }); })();
        return AutoCompleteMultipleComponent;
    }(FieldComponent));

    var CheckPipe = /** @class */ (function () {
        function CheckPipe() {
        }
        CheckPipe.prototype.transform = function (value) {
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            return value ? "Sim" : "Não";
        };
CheckPipe.ɵfac = function CheckPipe_Factory(t) { return new (t || CheckPipe)(); };
CheckPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "check", type: CheckPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckPipe, [{
        type: core.Pipe,
        args: [{
                name: "check"
            }]
    }], function () { return []; }, null); })();
        return CheckPipe;
    }());

    var CrudModule = /** @class */ (function () {
        function CrudModule() {
        }
CrudModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CrudModule });
CrudModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CrudModule_Factory(t) { return new (t || CrudModule)(); }, providers: [
        httpInterceptorProviders,
        api.ConfirmationService,
    ], imports: [[
            common.CommonModule,
            forms.FormsModule,
            forms.ReactiveFormsModule,
            FormNotificationModule,
            inputtext.InputTextModule,
            inputtextarea.InputTextareaModule,
            calendar.CalendarModule,
            primeng.AutoCompleteModule,
            button.ButtonModule,
            DatatableModule,
            http.HttpClientModule,
            router.RouterModule,
            confirmdialog.ConfirmDialogModule,
            dropdown.DropdownModule,
            scrolling.ScrollingModule,
            inputmask.InputMaskModule,
            radiobutton.RadioButtonModule,
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CrudModule, { declarations: [CalendarComponent,
        InputTextComponent,
        TextAreaComponent,
        FormComponent,
        AutoCompleteComponent,
        AutoCompleteMultipleComponent,
        CrudListComponent,
        CrudFormComponent,
        FieldComponent,
        ValidationMessageComponent,
        DropdownComponent,
        AutoCompleteItem,
        AutoCompleteCustomComponent,
        CheckComponent,
        InputMaskComponent,
        CheckPipe], imports: [ɵngcc4.CommonModule, ɵngcc7.FormsModule, ɵngcc7.ReactiveFormsModule, FormNotificationModule, ɵngcc18.InputTextModule, ɵngcc14.InputTextareaModule, ɵngcc13.CalendarModule, ɵngcc2.AutoCompleteModule, ɵngcc8.ButtonModule, DatatableModule, ɵngcc1.HttpClientModule, ɵngcc11.RouterModule, ɵngcc12.ConfirmDialogModule, ɵngcc9.DropdownModule, ɵngcc17.ScrollingModule, ɵngcc15.InputMaskModule, ɵngcc16.RadioButtonModule], exports: [CalendarComponent,
        InputTextComponent,
        TextAreaComponent,
        FormComponent,
        AutoCompleteComponent,
        AutoCompleteMultipleComponent,
        CrudListComponent,
        CrudFormComponent,
        FieldComponent,
        ValidationMessageComponent,
        DropdownComponent,
        CheckComponent,
        InputMaskComponent,
        CheckPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CrudModule, [{
        type: core.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    forms.FormsModule,
                    forms.ReactiveFormsModule,
                    FormNotificationModule,
                    inputtext.InputTextModule,
                    inputtextarea.InputTextareaModule,
                    calendar.CalendarModule,
                    primeng.AutoCompleteModule,
                    button.ButtonModule,
                    DatatableModule,
                    http.HttpClientModule,
                    router.RouterModule,
                    confirmdialog.ConfirmDialogModule,
                    dropdown.DropdownModule,
                    scrolling.ScrollingModule,
                    inputmask.InputMaskModule,
                    radiobutton.RadioButtonModule,
                ],
                declarations: [
                    CalendarComponent,
                    InputTextComponent,
                    TextAreaComponent,
                    FormComponent,
                    AutoCompleteComponent,
                    AutoCompleteMultipleComponent,
                    CrudListComponent,
                    CrudFormComponent,
                    FieldComponent,
                    ValidationMessageComponent,
                    DropdownComponent,
                    AutoCompleteItem,
                    AutoCompleteCustomComponent,
                    CheckComponent,
                    InputMaskComponent,
                    CheckPipe,
                ],
                exports: [
                    CalendarComponent,
                    InputTextComponent,
                    TextAreaComponent,
                    FormComponent,
                    AutoCompleteComponent,
                    AutoCompleteMultipleComponent,
                    CrudListComponent,
                    CrudFormComponent,
                    FieldComponent,
                    ValidationMessageComponent,
                    DropdownComponent,
                    CheckComponent,
                    InputMaskComponent,
                    CheckPipe,
                ],
                providers: [
                    httpInterceptorProviders,
                    api.ConfirmationService,
                ]
            }]
    }], function () { return []; }, null); })();
        return CrudModule;
    }());

    var BreadcrumbService = /** @class */ (function () {
        function BreadcrumbService() {
            this.itemsSource = new rxjs.Subject();
            this.itemsHandler = this.itemsSource.asObservable();
        }
        BreadcrumbService.prototype.setItems = function (items) {
            this.itemsSource.next(items);
        };
        BreadcrumbService.prototype.reset = function () {
            this.itemsSource.next([]);
        };
BreadcrumbService.ɵfac = function BreadcrumbService_Factory(t) { return new (t || BreadcrumbService)(); };
BreadcrumbService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BreadcrumbService, factory: function (t) { return BreadcrumbService.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreadcrumbService, [{
        type: core.Injectable
    }], function () { return []; }, null); })();
        return BreadcrumbService;
    }());

    var BreadcrumbComponent = /** @class */ (function () {
        function BreadcrumbComponent(router, activatedRoute, breadcrumbService, messages, accessibilityService) {
            var _this = this;
            this.router = router;
            this.activatedRoute = activatedRoute;
            this.breadcrumbService = breadcrumbService;
            this.messages = messages;
            this.accessibilityService = accessibilityService;
            this.highContrastEnabled = false;
            this.subscription = breadcrumbService.itemsHandler.subscribe(function (response) {
                _this.items = response;
            });
        }
        BreadcrumbComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.router.events.pipe(operators.filter(function (event) { return event instanceof router.NavigationEnd; }), operators.distinctUntilChanged()).subscribe(function (event) {
                _this.items = _this.buildBreadCrumb(_this.activatedRoute.root);
            });
        };
        BreadcrumbComponent.prototype.ngOnDestroy = function () {
            if (this.subscription) {
                this.subscription.unsubscribe();
            }
        };
        BreadcrumbComponent.prototype.enableHighContrast = function () {
            this.highContrastEnabled = true;
            this.accessibilityService.enableHighContrast();
        };
        BreadcrumbComponent.prototype.disableHighContrast = function () {
            this.highContrastEnabled = false;
            this.accessibilityService.disableHighContrast();
        };
        BreadcrumbComponent.prototype.increaseFontSize = function () {
            this.accessibilityService.increaseFontSize();
        };
        BreadcrumbComponent.prototype.decreaseFontSize = function () {
            this.accessibilityService.decreaseFontSize();
        };
        BreadcrumbComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            this.messages.messageObserver.subscribe(function (msg) {
                _this.accessibilityService.addAccessibilityMessages({ severity: msg.severity });
            });
            this.accessibilityService.addAccessibilityIcons();
        };
        BreadcrumbComponent.prototype.buildBreadCrumb = function (route, url, breadcrumbs) {
            if (url === void 0) { url = ''; }
            if (breadcrumbs === void 0) { breadcrumbs = []; }
            var label = route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : '';
            var path = route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';
            var lastRoutePart = path.split('/').pop();
            var isDynamicRoute = lastRoutePart.startsWith(':');
            if (isDynamicRoute && !!route.snapshot) {
                for (var key in route.snapshot.params) {
                    path = path.replace(":" + key, route.snapshot.params[key]);
                }
                label = Object.values(route.snapshot.params).join(' ');
            }
            var nextUrl = path ? url + "/" + path : url;
            var menuItem = {
                "label": label,
                "routerLink": nextUrl
            };
            var newBreadcrumbs = menuItem.label ? __spread(breadcrumbs, [menuItem]) : __spread(breadcrumbs);
            if (route.firstChild) {
                return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);
            }
            return newBreadcrumbs;
        };
        BreadcrumbComponent.ctorParameters = function () { return [
            { type: router.Router },
            { type: router.ActivatedRoute },
            { type: BreadcrumbService },
            { type: primeng.MessageService },
            { type: angularBase.AccessbilityService }
        ]; };
BreadcrumbComponent.ɵfac = function BreadcrumbComponent_Factory(t) { return new (t || BreadcrumbComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc11.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc11.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(BreadcrumbService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MessageService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.AccessbilityService)); };
BreadcrumbComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BreadcrumbComponent, selectors: [["breadcrumb"]], ngContentSelectors: _c13, decls: 20, vars: 9, consts: [[1, "layout-breadcrumb"], ["routerLink", ""], [1, "material-icons"], ["ngFor", "", 3, "ngForOf"], [1, "layout-breadcrumb-options"], [3, "ngStyle", "title", "click"], ["title", "Aumentar fonte", 3, "ngStyle", "click"], ["title", "Diminuir fonte", 3, "ngStyle", "click"], [3, "routerLink", 4, "ngIf"], [4, "ngIf"], [3, "routerLink"]], template: function BreadcrumbComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "ul");
        ɵngcc0.ɵɵelementStart(2, "li");
        ɵngcc0.ɵɵelementStart(3, "a", 1);
        ɵngcc0.ɵɵelementStart(4, "i", 2);
        ɵngcc0.ɵɵtext(5, "home");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "li");
        ɵngcc0.ɵɵtext(7, "/");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, BreadcrumbComponent_ng_template_8_Template, 4, 3, "ng-template", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "div", 4);
        ɵngcc0.ɵɵelementStart(10, "a", 5);
        ɵngcc0.ɵɵlistener("click", function BreadcrumbComponent_Template_a_click_10_listener() { return ctx.highContrastEnabled ? ctx.disableHighContrast() : ctx.enableHighContrast(); });
        ɵngcc0.ɵɵelementStart(11, "i", 2);
        ɵngcc0.ɵɵtext(12);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(13, "a", 6);
        ɵngcc0.ɵɵlistener("click", function BreadcrumbComponent_Template_a_click_13_listener() { return ctx.increaseFontSize(); });
        ɵngcc0.ɵɵelementStart(14, "i", 2);
        ɵngcc0.ɵɵtext(15, "exposure_plus_1");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(16, "a", 7);
        ɵngcc0.ɵɵlistener("click", function BreadcrumbComponent_Template_a_click_16_listener() { return ctx.decreaseFontSize(); });
        ɵngcc0.ɵɵelementStart(17, "i", 2);
        ɵngcc0.ɵɵtext(18, "exposure_neg_1");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(19);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(8);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.items);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ctx.highContrastEnabled ? "Desabilitar alto contraste" : "Habilitar alto contraste");
        ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction0(6, _c41));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.highContrastEnabled ? "visibility_off" : "visibility");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction0(7, _c41));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction0(8, _c41));
    } }, directives: [ɵngcc11.RouterLinkWithHref, ɵngcc4.NgForOf, ɵngcc4.NgStyle, ɵngcc4.NgIf], styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreadcrumbComponent, [{
        type: core.Component,
        args: [{
                selector: 'breadcrumb',
                template: "<div class=\"layout-breadcrumb\">\n    <ul>\n        <li>\n            <a routerLink=\"\">\n                <i class=\"material-icons\">home</i>\n            </a>\n        </li>\n        <li>/</li>\n        <ng-template ngFor let-item let-last=\"last\" [ngForOf]=\"items\">\n            <li>\n                <a [routerLink]=\"item.routerLink\" *ngIf=\"item.routerLink\">{{item.label}}</a>\n\n                <ng-container *ngIf=\"!item.routerLink\">{{item.label}}</ng-container>\n            </li>\n            <li *ngIf=\"!last\">/</li>\n        </ng-template>\n    </ul>\n    <div class=\"layout-breadcrumb-options\">\n        <a (click)=\"highContrastEnabled ? disableHighContrast() : enableHighContrast()\" [ngStyle]=\"{'cursor': 'pointer'}\"\n            title=\"{{ highContrastEnabled ? 'Desabilitar alto contraste' : 'Habilitar alto contraste' }}\">\n            <i class=\"material-icons\">{{ highContrastEnabled ? 'visibility_off' : 'visibility' }}</i>\n        </a>\n        <a (click)=\"increaseFontSize()\" title=\"Aumentar fonte\" [ngStyle]=\"{'cursor': 'pointer'}\">\n            <i class=\"material-icons\">exposure_plus_1</i>\n        </a>\n        <a (click)=\"decreaseFontSize()\" title=\"Diminuir fonte\" [ngStyle]=\"{'cursor': 'pointer'}\">\n            <i class=\"material-icons\">exposure_neg_1</i>\n        </a>\n    </div>\n    <ng-content></ng-content>\n</div>\n",
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc11.Router }, { type: ɵngcc11.ActivatedRoute }, { type: BreadcrumbService }, { type: ɵngcc2.MessageService }, { type: ɵngcc3.AccessbilityService }]; }, null); })();
        return BreadcrumbComponent;
    }());

    var BreadcrumbModule = /** @class */ (function () {
        function BreadcrumbModule() {
        }
BreadcrumbModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BreadcrumbModule });
BreadcrumbModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BreadcrumbModule_Factory(t) { return new (t || BreadcrumbModule)(); }, providers: [
        BreadcrumbService
    ], imports: [[
            common.CommonModule,
            router.RouterModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BreadcrumbModule, { declarations: [BreadcrumbComponent], imports: [ɵngcc4.CommonModule, ɵngcc11.RouterModule], exports: [BreadcrumbComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreadcrumbModule, [{
        type: core.NgModule,
        args: [{
                declarations: [BreadcrumbComponent],
                imports: [
                    common.CommonModule,
                    router.RouterModule
                ],
                exports: [
                    BreadcrumbComponent
                ],
                providers: [
                    BreadcrumbService
                ]
            }]
    }], function () { return []; }, null); })();
        return BreadcrumbModule;
    }());


    (function (MenuOrientation) {
        MenuOrientation[MenuOrientation["STATIC"] = 0] = "STATIC";
        MenuOrientation[MenuOrientation["OVERLAY"] = 1] = "OVERLAY";
        MenuOrientation[MenuOrientation["SLIM"] = 2] = "SLIM";
        MenuOrientation[MenuOrientation["HORIZONTAL"] = 3] = "HORIZONTAL";
    })(exports.MenuOrientation || (exports.MenuOrientation = {}));
    /**
     * Class MenuService
     * @class
     */
    var MenusService = /** @class */ (function () {
        function MenusService() {
            this.layoutMode = exports.MenuOrientation.STATIC;
            this.itens = [];
        }
        MenusService.prototype.isOverlay = function () {
            return this.layoutMode === exports.MenuOrientation.OVERLAY;
        };
        MenusService.prototype.isHorizontal = function () {
            return this.layoutMode === exports.MenuOrientation.HORIZONTAL;
        };
        MenusService.prototype.isSlim = function () {
            return this.layoutMode === exports.MenuOrientation.SLIM;
        };
        MenusService.prototype.changeToStaticMenu = function () {
            this.layoutMode = exports.MenuOrientation.STATIC;
        };
        MenusService.prototype.changeToOverlayMenu = function () {
            this.layoutMode = exports.MenuOrientation.OVERLAY;
        };
        MenusService.prototype.changeToHorizontalMenu = function () {
            this.layoutMode = exports.MenuOrientation.HORIZONTAL;
        };
        MenusService.prototype.changeToSlimMenu = function () {
            this.layoutMode = exports.MenuOrientation.SLIM;
        };
        MenusService.ɵprov = core.ɵɵdefineInjectable({ factory: function MenusService_Factory() { return new MenusService(); }, token: MenusService, providedIn: "root" });
MenusService.ɵfac = function MenusService_Factory(t) { return new (t || MenusService)(); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MenusService, [{
        type: core.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
        return MenusService;
    }());

    var MenuComponent = /** @class */ (function () {
        function MenuComponent(menuService) {
            this.menuService = menuService;
        }
        MenuComponent.ctorParameters = function () { return [
            { type: MenusService }
        ]; };
MenuComponent.ɵfac = function MenuComponent_Factory(t) { return new (t || MenuComponent)(ɵngcc0.ɵɵdirectiveInject(MenusService)); };
MenuComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MenuComponent, selectors: [["app-menu"]], decls: 1, vars: 2, consts: [["submenu", "", "root", "true", "visible", "true", "parentActive", "true", 1, "ultima-menu", "ultima-main-menu", "clearfix", 3, "item", "reset"]], template: function MenuComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "ul", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("item", ctx.menuService.itens)("reset", ctx.menuService.resetMenu);
    } }, directives: function () { return [SubMenuComponent]; }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MenuComponent, [{
        type: core.Component,
        args: [{
                selector: 'app-menu',
                template: "<ul submenu\n    [item]=\"menuService.itens\"\n    root=\"true\"\n    class=\"ultima-menu ultima-main-menu clearfix\"\n    [reset]=\"menuService.resetMenu\"\n    visible=\"true\"\n    parentActive=\"true\">\n</ul>\n"
            }]
    }], function () { return [{ type: MenusService }]; }, null); })();
        return MenuComponent;
    }());

    var SubMenuComponent = /** @class */ (function () {
        function SubMenuComponent(menuService) {
            this.menuService = menuService;
        }
        /**
         * Alterar o menu root entre aberto e fechado
         */
        SubMenuComponent.prototype.rootMenuToggle = function () {
            if (this.root) {
                this.menuService.menuHoverActive = !this.menuService.menuHoverActive;
            }
        };
        /**
         * Activa o menu por index e desativa o item ativo
         * @param index
         */
        SubMenuComponent.prototype.activeMenuByIndex = function (index) {
            this.activeIndex = (this.activeIndex === index) ? null : index;
            return this.activeIndex;
        };
        /**
         * Verifica se foi informado um comando para o item de menu e executa caso necessário
         * @param item menu
         */
        SubMenuComponent.prototype.execCommand = function (event, item) {
            if (item.command) {
                item.command({ 'originalEvent': event, 'item': item });
                return true;
            }
            return false;
        };
        /**
         * Esconte o menu caso este não possua itens
         * @param item menu
         */
        SubMenuComponent.prototype.hideMenu = function (item) {
            if (!item.items) {
                if (this.menuService.isHorizontal() || this.menuService.isSlim()) {
                    this.menuService.resetMenu = true;
                }
                else {
                    this.menuService.resetMenu = false;
                }
                this.menuService.overlayMenuActive = false;
                this.menuService.staticMenuMobileActive = false;
                this.menuService.menuHoverActive = !this.menuService.menuHoverActive;
                return true;
            }
            return false;
        };
        SubMenuComponent.prototype.itemClick = function (event, item, index) {
            this.rootMenuToggle();
            if (item.disabled) {
                event.preventDefault();
                return false;
            }
            this.activeMenuByIndex(index);
            this.execCommand(event, item);
            if (item.items || (!item.url && !item.routerLink)) {
                event.preventDefault();
            }
            this.hideMenu(item);
            return true;
        };
        SubMenuComponent.prototype.onMouseEnter = function (index) {
            if (this.root && this.menuService.menuHoverActive && (this.menuService.isHorizontal() || this.menuService.isSlim())) {
                this.activeIndex = index;
            }
        };
        SubMenuComponent.prototype.isActive = function (index) {
            return this.activeIndex === index;
        };
        Object.defineProperty(SubMenuComponent.prototype, "reset", {
            get: function () {
                return this._reset;
            },
            set: function (val) {
                this._reset = val;
                if (this._reset && (this.menuService.isHorizontal() || this.menuService.isSlim())) {
                    this.activeIndex = null;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SubMenuComponent.prototype, "parentActive", {
            get: function () {
                return this._parentActive;
            },
            set: function (val) {
                this._parentActive = val;
                if (!this._parentActive) {
                    this.activeIndex = null;
                }
            },
            enumerable: true,
            configurable: true
        });
        SubMenuComponent.ctorParameters = function () { return [
            { type: MenusService }
        ]; };
        __decorate([
            core.Input()
        ], SubMenuComponent.prototype, "item", void 0);
        __decorate([
            core.Input()
        ], SubMenuComponent.prototype, "root", void 0);
        __decorate([
            core.Input()
        ], SubMenuComponent.prototype, "visible", void 0);
        __decorate([
            core.Input()
        ], SubMenuComponent.prototype, "reset", null);
        __decorate([
            core.Input()
        ], SubMenuComponent.prototype, "parentActive", null);
SubMenuComponent.ɵfac = function SubMenuComponent_Factory(t) { return new (t || SubMenuComponent)(ɵngcc0.ɵɵdirectiveInject(MenusService)); };
SubMenuComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SubMenuComponent, selectors: [["", "submenu", ""]], inputs: { reset: "reset", parentActive: "parentActive", item: "item", root: "root", visible: "visible" }, attrs: _c42, decls: 1, vars: 1, consts: [["ngFor", "", 3, "ngForOf"], [3, "ngClass", "class", 4, "ngIf"], [3, "ngClass"], ["class", "ripplelink", 3, "href", "click", "mouseenter", 4, "ngIf"], ["class", "ripplelink", "routerLinkActive", "active-menuitem-routerlink", 3, "routerLink", "routerLinkActiveOptions", "click", "mouseenter", 4, "ngIf"], [1, "layout-menu-tooltip"], [1, "layout-menu-tooltip-arrow"], [1, "layout-menu-tooltip-text"], ["submenu", "", 3, "item", "visible", "reset", "parentActive", 4, "ngIf"], [1, "ripplelink", 3, "href", "click", "mouseenter"], ["class", "material-icons", 4, "ngIf"], ["class", "menuitem-badge", 4, "ngIf"], ["class", "material-icons submenu-icon", 4, "ngIf"], [1, "material-icons"], [1, "menuitem-badge"], [1, "material-icons", "submenu-icon"], ["routerLinkActive", "active-menuitem-routerlink", 1, "ripplelink", 3, "routerLink", "routerLinkActiveOptions", "click", "mouseenter"], ["submenu", "", 3, "item", "visible", "reset", "parentActive"]], template: function SubMenuComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SubMenuComponent_ng_template_0_Template, 1, 1, "ng-template", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.root ? ctx.item : ctx.item.items);
    } }, directives: [ɵngcc4.NgForOf, ɵngcc4.NgIf, ɵngcc4.NgClass, ɵngcc11.RouterLinkWithHref, ɵngcc11.RouterLinkActive, SubMenuComponent], encapsulation: 2, data: { animation: [
            animations.trigger('children', [
                animations.state('hiddenAnimated', animations.style({
                    height: '0px'
                })),
                animations.state('visibleAnimated', animations.style({
                    height: '*'
                })),
                animations.state('visible', animations.style({
                    height: '*',
                    'z-index': 100
                })),
                animations.state('hidden', animations.style({
                    height: '0px',
                    'z-index': '*'
                })),
                animations.transition('visibleAnimated => hiddenAnimated', animations.animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),
                animations.transition('hiddenAnimated => visibleAnimated', animations.animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))
            ])
        ] } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SubMenuComponent, [{
        type: core.Component,
        args: [{
                selector: '[submenu]',
                template: "<ng-template ngFor let-child let-i=\"index\" [ngForOf]=\"(root ? item : item.items)\">\n    <li [ngClass]=\"{'active-menuitem': isActive(i)}\"\n        [class]=\"child.badgeStyleClass\"\n        *ngIf=\"child.visible === false ? false : true\">\n        <a [href]=\"child.url||'#'\" (click)=\"itemClick($event,child,i)\" (mouseenter)=\"onMouseEnter(i)\"\n           class=\"ripplelink\" *ngIf=\"!child.routerLink\"\n            [attr.tabindex]=\"!visible ? '-1' : null\" [attr.target]=\"child.target\">\n            <i *ngIf=\"child.icon\" class=\"material-icons\">{{child.icon}}</i>\n            <span>{{child.label}}</span>\n            <span class=\"menuitem-badge\" *ngIf=\"child.badge\">{{child.badge}}</span>\n            <i class=\"material-icons submenu-icon\" *ngIf=\"child.items\">keyboard_arrow_down</i>\n        </a>\n\n        <a (click)=\"itemClick($event,child,i)\"\n            (mouseenter)=\"onMouseEnter(i)\"\n            class=\"ripplelink\"\n            *ngIf=\"child.routerLink\"\n            [routerLink]=\"child.routerLink\"\n            routerLinkActive=\"active-menuitem-routerlink\"\n            [routerLinkActiveOptions]=\"{exact: true}\" [attr.tabindex]=\"!visible ? '-1' : null\" [attr.target]=\"child.target\">\n            <i *ngIf=\"child.icon\" class=\"material-icons\">{{child.icon}}</i>\n            <span>{{child.label}}</span>\n            <span class=\"menuitem-badge\" *ngIf=\"child.badge\">{{child.badge}}</span>\n            <i class=\"material-icons submenu-icon\" *ngIf=\"child.items\">keyboard_arrow_down</i>\n        </a>\n        <div class=\"layout-menu-tooltip\">\n            <div class=\"layout-menu-tooltip-arrow\"></div>\n            <div class=\"layout-menu-tooltip-text\">{{child.label}}</div>\n        </div>\n        <ul submenu\n            [item]=\"child\"\n            *ngIf=\"child.items\"\n            [visible]=\"isActive(i)\"\n            [reset]=\"reset\"\n            [parentActive]=\"isActive(i)\"\n            [@children]=\"(menuService.isSlim() || menuService.isHorizontal()) && root ? (isActive(i) ?\n            'visible' : 'hidden') : (isActive(i) ? 'visibleAnimated' : 'hiddenAnimated')\">\n        </ul>\n    </li>\n</ng-template>\n",
                animations: [
                    animations.trigger('children', [
                        animations.state('hiddenAnimated', animations.style({
                            height: '0px'
                        })),
                        animations.state('visibleAnimated', animations.style({
                            height: '*'
                        })),
                        animations.state('visible', animations.style({
                            height: '*',
                            'z-index': 100
                        })),
                        animations.state('hidden', animations.style({
                            height: '0px',
                            'z-index': '*'
                        })),
                        animations.transition('visibleAnimated => hiddenAnimated', animations.animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),
                        animations.transition('hiddenAnimated => visibleAnimated', animations.animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))
                    ])
                ]
            }]
    }], function () { return [{ type: MenusService }]; }, { reset: [{
            type: core.Input
        }], parentActive: [{
            type: core.Input
        }], item: [{
            type: core.Input
        }], root: [{
            type: core.Input
        }], visible: [{
            type: core.Input
        }] }); })();
        return SubMenuComponent;
    }());

    var MenuModule = /** @class */ (function () {
        function MenuModule() {
        }
MenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MenuModule });
MenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MenuModule_Factory(t) { return new (t || MenuModule)(); }, providers: [
        MenusService
    ], imports: [[
            common.CommonModule,
            router.RouterModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MenuModule, { declarations: [MenuComponent,
        SubMenuComponent], imports: [ɵngcc4.CommonModule, ɵngcc11.RouterModule], exports: [MenuComponent,
        SubMenuComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MenuModule, [{
        type: core.NgModule,
        args: [{
                declarations: [
                    MenuComponent,
                    SubMenuComponent
                ],
                imports: [
                    common.CommonModule,
                    router.RouterModule
                ],
                exports: [
                    MenuComponent,
                    SubMenuComponent
                ],
                providers: [
                    MenusService
                ]
            }]
    }], function () { return []; }, null); })();
        return MenuModule;
    }());

    exports.AutoCompleteComponent = AutoCompleteComponent;
    exports.AutoCompleteMultipleComponent = AutoCompleteMultipleComponent;
    exports.BlockUiComponent = BlockUiComponent;
    exports.BlockUiModule = BlockUiModule;
    exports.BreadcrumbComponent = BreadcrumbComponent;
    exports.BreadcrumbModule = BreadcrumbModule;
    exports.BreadcrumbService = BreadcrumbService;
    exports.CALENDAR_LOCALE = CALENDAR_LOCALE;
    exports.CRUD_SERVICE = CRUD_SERVICE;
    exports.CalendarComponent = CalendarComponent;
    exports.CheckComponent = CheckComponent;
    exports.CheckPipe = CheckPipe;
    exports.Column = Column;
    exports.CrudFormComponent = CrudFormComponent;
    exports.CrudListComponent = CrudListComponent;
    exports.CrudModule = CrudModule;
    exports.CrudResolveGuard = CrudResolveGuard;
    exports.CrudServiceNuvem = CrudServiceNuvem;
    exports.DataProviderFactory = DataProviderFactory;
    exports.DatatableButtonComponent = DatatableButtonComponent;
    exports.DatatableClickEvent = DatatableClickEvent;
    exports.DatatableComponent = DatatableComponent;
    exports.DatatableModule = DatatableModule;
    exports.DatatableService = DatatableService;
    exports.DatatableSplitbuttonComponent = DatatableSplitbuttonComponent;
    exports.DatatableSplitbuttonModule = DatatableSplitbuttonModule;
    exports.DropdownComponent = DropdownComponent;
    exports.ErrorStackComponent = ErrorStackComponent;
    exports.ErrorStackModule = ErrorStackModule;
    exports.FieldComponent = FieldComponent;
    exports.FilterColumn = FilterColumn;
    exports.FilterColumnModule = FilterColumnModule;
    exports.FormComponent = FormComponent;
    exports.FormNotificationComponent = FormNotificationComponent;
    exports.FormNotificationModule = FormNotificationModule;
    exports.InputMaskComponent = InputMaskComponent;
    exports.InputTextComponent = InputTextComponent;
    exports.MemoryDataProvider = MemoryDataProvider;
    exports.MenuComponent = MenuComponent;
    exports.MenuModule = MenuModule;
    exports.MenusService = MenusService;
    exports.PageNotificationComponent = PageNotificationComponent;
    exports.PageNotificationModule = PageNotificationModule;
    exports.PageNotificationService = PageNotificationService;
    exports.ServerDataProvider = ServerDataProvider;
    exports.ShowColumn = ShowColumn;
    exports.ShowColumnModule = ShowColumnModule;
    exports.SubMenuComponent = SubMenuComponent;
    exports.SuccessMessageHandlerInterceptor = SuccessMessageHandlerInterceptor;
    exports.TextAreaComponent = TextAreaComponent;
    exports.ValidationMessageComponent = ValidationMessageComponent;
    exports.crudRouteBuilder = crudRouteBuilder;
    exports.httpInterceptorProviders = httpInterceptorProviders;
    exports.ɵa = AutoCompleteItem;
    exports.ɵb = AUTOCOMPLETE_VALUE_ACCESSOR;
    exports.ɵc = AutoCompleteCustomComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=nuvem-primeng-components.umd.js.map