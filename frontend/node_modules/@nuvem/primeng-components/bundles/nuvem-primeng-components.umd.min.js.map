{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@nuvem/primeng-components/lib/datatable/dataprovider-factory.ts","ng://@nuvem/primeng-components/lib/datatable/datatable.service.ts","ng://@nuvem/primeng-components/lib/datatable/server-dataprovider.ts","ng://@nuvem/primeng-components/lib/datatable/memory-dataprovider.ts","ng://@nuvem/primeng-components/lib/datatable/datatable-button.component.ts","ng://@nuvem/primeng-components/lib/datatable/datatable-click-event.ts","ng://@nuvem/primeng-components/lib/datatable/p-column.directive.ts","ng://@nuvem/primeng-components/lib/datatable/datatable.component.ts","ng://@nuvem/primeng-components/lib/extra-button/datatable-splitbutton.component.ts","ng://@nuvem/primeng-components/lib/extra-button/datatable-splitbutton.module.ts","ng://@nuvem/primeng-components/lib/datatable/filter-column/filter-column.component.ts","ng://@nuvem/primeng-components/lib/datatable/filter-column/filter-column.module.ts","ng://@nuvem/primeng-components/lib/page-notification/page-notification.service.ts","ng://@nuvem/primeng-components/lib/datatable/show-column/show-column.component.ts","ng://@nuvem/primeng-components/lib/datatable/show-column/show-column.module.ts","ng://@nuvem/primeng-components/lib/datatable/datatable.module.ts","ng://@nuvem/primeng-components/lib/block-ui/block-ui.component.ts","ng://@nuvem/primeng-components/lib/block-ui/block-ui.module.ts","ng://@nuvem/primeng-components/lib/page-notification/page-notification.component.ts","ng://@nuvem/primeng-components/lib/page-notification/page-notification.module.ts","ng://@nuvem/primeng-components/lib/form-notification/form-notification.component.ts","ng://@nuvem/primeng-components/lib/form-notification/form-notification.module.ts","ng://@nuvem/primeng-components/lib/error-stack/error-stack.component.ts","ng://@nuvem/primeng-components/lib/error-stack/error-stack.module.ts","ng://@nuvem/primeng-components/lib/crud/crud-form.component.ts","ng://@nuvem/primeng-components/lib/crud/crud-service.service.ts","ng://@nuvem/primeng-components/lib/crud/crud-list.component.ts","ng://@nuvem/primeng-components/lib/crud/crud-resolve.guard.ts","ng://@nuvem/primeng-components/lib/crud/success-message-handler.interceptor.ts","ng://@nuvem/primeng-components/lib/crud/crud-service-nuvem.service.ts","ng://@nuvem/primeng-components/lib/menu/menu.service.ts","ng://@nuvem/primeng-components/lib/crud/components/field.component.ts","ng://@nuvem/primeng-components/lib/crud/components/input-text/input-text.component.ts","ng://@nuvem/primeng-components/lib/crud/components/calendar/calendar-locale.ts","ng://@nuvem/primeng-components/lib/crud/components/calendar/calendar.component.ts","ng://@nuvem/primeng-components/lib/crud/components/text-area/text-area.component.ts","ng://@nuvem/primeng-components/lib/crud/components/dropdown/dropdown.component.ts","ng://@nuvem/primeng-components/lib/crud/components/input-mask/input-mask.component.ts","ng://@nuvem/primeng-components/lib/crud/components/check/check.component.ts","ng://@nuvem/primeng-components/lib/crud/form.component.ts","ng://@nuvem/primeng-components/lib/crud/components/validation-message/validation-message.component.ts","ng://@nuvem/primeng-components/lib/crud/components/auto-complete/auto-complete.component.ts","ng://@nuvem/primeng-components/lib/crud/components/auto-complete/auto-complete-custom.component.ts","ng://@nuvem/primeng-components/lib/crud/components/auto-complete/auto-complete-item.component.ts","ng://@nuvem/primeng-components/lib/crud/components/auto-complete-multiple/auto-complete-multiple.component.ts","ng://@nuvem/primeng-components/lib/crud/components/check/check.pipe.ts","ng://@nuvem/primeng-components/lib/crud/crud.module.ts","ng://@nuvem/primeng-components/lib/breadcrumb/breadcrumb.service.ts","ng://@nuvem/primeng-components/lib/breadcrumb/breadcrumb.component.ts","ng://@nuvem/primeng-components/lib/breadcrumb/breadcrumb.module.ts","ng://@nuvem/primeng-components/lib/menu/menu.component.ts","ng://@nuvem/primeng-components/lib/menu/submenu.component.ts","ng://@nuvem/primeng-components/lib/menu/menu.module.ts","ng://@nuvem/primeng-components/lib/crud/crud-route-builder.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","__spread","concat","DataProviderType","DatatableService","http","search","event","url","rows","orderInSort","query","page","undefined","first","Math","floor","order","sortOrder","params","HttpParams","set","toString","sortField","keys","forEach","get","observe","HttpClient","Injectable","providedIn","ServerDataProvider","datatableService","component","_this","pDatatableComponent","onLazyLoad","subscribe","lazy","currentLazyLoadEvent","load","retrieveAndSaveQuery","startedLoading","emit","toPromise","then","response","treatLoadResponse","finishedLoading","data","body","paginationParameters","treatLoadResponseWithPaginationParameters","treatLoadResponseWithoutPaginationParameters","contentIndex","totalIndex","totalElementsIndex","totalRecords","headers","has","parseInt","totalElements","content","oldQuery","_query","currentQuery","doRetrieveAndSaveQuery","resetToFirstPageIfQueryChanged","reset","MemoryDataProvider","prop","matchMode","filter","globalFilterFields","_filter","DataProviderFactory","type","Server","Memory","DatatableButtonComponent","allowMultipleSelection","disabled","click","EventEmitter","onClick","stopPropagation","Input","Output","Component","selector","template","button","selection","Column","filterType","exportable","resizable","sortFunction","ngAfterContentInit","templates","item","getType","headerTemplate","bodyTemplate","footerTemplate","filterTemplate","editorTemplate","inputTemplate","outputTemplate","ContentChildren","PrimeTemplate","ContentChild","TemplateRef","Directive","DatatableComponent","changeDetectorRef","dataProviderFactory","authorizationService","filterParams","footerMsg","showPaginationFooter","disableEdit","disableView","disableDelete","selectionMode","enableButtonsScroll","emptyMessage","verticalButtons","enableScroll","disableLoadingBlockUI","filterOnColumn","filterSelectOptions","updateFilterColumn","customFilterOptions","buttonClick","onRowSelected","showHorizontalButtonsHeader","blockContent","visibleColumns","showVisibleColumnsControl","dataKey","onRowEditEvent","clonedRowData","errorMessage","editingRow","ngOnInit","dataProvider","subscribeToLoadingEvents","initRowsPerPageOptionsIfPresent","defineIfShouldShowHorizontalButtonsHeader","updateOnValueChange","map","originalEmptyMessage","onStartedLoading","onFinishedLoading","rowsPerPageOptions","horizontalButtonsHeader","ngAfterViewInit","setExtraParams","columns","setAllColumnsVisible","detectChanges","extraParams","extraButtons","name","DatatableClickEvent","selectedRow","resetSelectedRow","onSelectChange","isArray","updateMultipleButtonsStatus","hasMultipleSelection","refresh","paginationFooterText","msg","registros","currentFirstIndex","currentLastIndex","replace","checkRolesToButton","checkUseButtons","hasRole","Error","getOwnPropertyNames","filterColumn","column","filters","values","val","col","field","visibleColumnCheck","some","updateVisibleColumns","onRowEditInitEvent","rowData","tr","srcElement","closest","setTimeout","top","offsetTop","height","offsetHeight","editButtons","querySelector","style","backgroundColor","opacity","id","onRowEditSaveEvent","resetEditingMode","onRowEditCancelEvent","index","display","editarLinhaOver","editMode","top_1","editarLinhaOut","ChangeDetectorRef","Authorization","ViewChild","DataTable","static","encapsulation","ViewEncapsulation","None","DatatableSplitbuttonComponent","DatatableSplitbuttonModule","NgModule","imports","SplitButtonModule","declarations","providers","exports","schemas","CUSTOM_ELEMENTS_SCHEMA","FilterColumn","listaOriginal","lista","labelDefaultImplementation","updateFiltro","outputEvent","debouncer","Subject","resultado","listaFields","pipe","debounceTime","tableType","ngOnChanges","changes","checkChanges","preencherFields","property","previousValue","currentValue","filtrar","filtro","pi","row","label","verificarSeExisteField","getCustomFilterOptions","FilterColumnModule","CommonModule","MultiSelectModule","ButtonModule","CheckboxModule","DropdownModule","FormsModule","ReactiveFormsModule","InputTextModule","PageNotificationService","messageService","_super","successSeverity","infoSeverity","warnSeverity","errorSeverity","createMsg","updateMsg","deleteMsg","addCreateMsg","title","addSuccessMessage","message","addMsg","severity","add","summary","detail","addUpdateMsg","addDeleteMsg","addInfoMessage","addWarnMessage","addErrorMessage","addErrorProblem","problem","MessageService","NotificationProvider","ShowColumn","pageNotificationService","options","lastValue","header","mostrarColunas","ShowColumnModule","DatatableModule","TooltipModule","TableModule","BlockUIModule","ProgressSpinnerModule","HttpClientModule","PaginatorModule","provide","useClass","deps","BlockUiComponent","service","status","subscription","loaderStatus","blockui","ngOnDestroy","unsubscribe","isBlocked","show","hide","BlockUiService","BlockUiModule","HTTP_INTERCEPTORS","BlockUiInterceptor","multi","PageNotificationComponent","duration","PageNotificationModule","ToastModule","useExisting","FormNotificationComponent","FormNotificationComponentSuperclass","FormNotificationModule","FormNotificationBaseModule","ErrorStackComponent","errorStack","errors","errorSubscription","ErrorStackService","ErrorStackModule","ClipboardModule","ErrorProvider","ErrorStackProviderService","CrudFormComponent","route","disableSave","listRoute","paramMap","action","form","patchValue","disable","enable","ActivatedRoute","CRUD_SERVICE","InjectionToken","CrudListComponent","crudService","confirmationService","router","findLabel","find","uri","datatableClick","navigate","relativeTo","confirm","accept","delete","datatable","findAll","observers","element","Date","JSON","stringify","datatableNgAfterContentInit","toArray","datatableExtraParams","Inject","args","ConfirmationService","Router","CrudResolveGuard","resolve","STATUS","CrudServiceNuvem","save","entity","post","edit","put","append","MenuOrientation","SuccessMessageHandlerInterceptor","notification","intercept","req","handle","tap","HttpResponse","OK","CREATED","method","httpInterceptorProviders","FieldComponent","controlContainer","injector","onBlur","onSelect","onFocus","_name","formControlName","required","_label","setValidators","setRequired","input","ElementRef","nativeElement","setElementRefAttr","attr","setFormControlValidators","validator","control","formControl","onBlurEvent","onSelectEvent","onFocusEvent","ControlContainer","Injector","WrappedFormControlSuperclass","InputTextComponent","min","max","minLength","maxLength","pattern","InputTextComponent_1","provideValueAccessor","CALENDAR_LOCALE","firstDayOfWeek","dayNames","dayNamesShort","dayNamesMin","monthNames","monthNamesShort","today","clear","dateFormat","weekHeader","CalendarComponent","maxDate","yearRange","monthNavigator","yearNavigator","locale","outerToInner","CalendarComponent_1","TextAreaComponent","autoResize","TextAreaComponent_1","DropdownComponent","virtualScroll","itemSize","onChange","onChangeEvent","setValue","DropdownComponent_1","InputMaskComponent","InputMaskComponent_1","CheckComponent","formNotificationService","notifications","FieldFormNotification","FormNotificationService","CheckComponent_1","FormComponent","activatedRoute","saveLabel","submit","ValidationMessageComponent","AutoCompleteComponent","selectItem","option","results","AutoCompleteComponent_1","AUTOCOMPLETE_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","AutoCompleteCustomComponent","el","renderer","cd","differs","Renderer2","IterableDiffers","AutoCompletePrimeng","AutoCompleteItem","highlightOptionChange","originalEvent","AutoCompleteMultipleComponent","obs_1","forkJoin","AutoCompleteMultipleComponent_1","CheckPipe","transform","_i","Pipe","CrudModule","InputTextareaModule","CalendarModule","AutoCompleteModule","RouterModule","ConfirmDialogModule","ScrollingModule","InputMaskModule","RadioButtonModule","BreadcrumbService","itemsSource","itemsHandler","asObservable","setItems","items","BreadcrumbComponent","breadcrumbService","messages","accessibilityService","highContrastEnabled","events","NavigationEnd","distinctUntilChanged","buildBreadCrumb","root","enableHighContrast","disableHighContrast","increaseFontSize","decreaseFontSize","messageObserver","addAccessibilityMessages","addAccessibilityIcons","breadcrumbs","routeConfig","breadcrumb","path","split","pop","startsWith","snapshot","join","nextUrl","menuItem","routerLink","newBreadcrumbs","firstChild","AccessbilityService","BreadcrumbModule","MenusService","layoutMode","STATIC","itens","isOverlay","OVERLAY","isHorizontal","HORIZONTAL","isSlim","SLIM","changeToStaticMenu","changeToOverlayMenu","changeToHorizontalMenu","changeToSlimMenu","MenuComponent","menuService","SubMenuComponent","rootMenuToggle","menuHoverActive","activeMenuByIndex","activeIndex","execCommand","command","hideMenu","resetMenu","overlayMenuActive","staticMenuMobileActive","itemClick","preventDefault","onMouseEnter","isActive","_reset","_parentActive","animations","trigger","state","z-index","transition","animate","MenuModule","parent","list","children"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { DatatableService } from './datatable.service';\nimport { DatatableComponent } from './datatable.component';\n\nimport { DataProvider } from './dataprovider';\nimport { ServerDataProvider } from './server-dataprovider';\nimport { MemoryDataProvider } from './memory-dataprovider';\n\n/**\n * Enum DataProviderType\n * @enum\n */\nexport enum DataProviderType {\n    Memory = 'memory',\n    Server = 'server'\n}\n/**\n * Class DataProviderFactory\n * @class\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DataProviderFactory {\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {DatatableService} datatableService\n     */\n    constructor(private datatableService: DatatableService) {}\n\n    /**\n     * create method\n     * @param {DataProviderType} type\n     * @param {DatatableComponent} component\n     * @public\n     * @returns DataProvider\n     */\n    public create(type: DataProviderType, component: DatatableComponent): DataProvider {\n        if (DataProviderType.Server === type) {\n            return new ServerDataProvider(this.datatableService, component);\n        }\n\n        if (DataProviderType.Memory === type) {\n            return new MemoryDataProvider(component);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { LazyLoadEvent } from 'primeng';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n/**\n * Class DatatableService\n * @class\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DatatableService {\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {HttpClient} http\n     */\n    constructor(private http: HttpClient) {}\n\n    /**\n     * search method\n     * @param {LazyLoadEvent} event\n     * @param {String} url\n     * @param {number} rows\n     * @param {boolean} orderInSort\n     * @param {any} query\n     * @return Observable\n     */\n    search(event: LazyLoadEvent, url: string, rows: number, orderInSort: boolean, query?: any) {\n        let page = 0;\n        if (event !== undefined && event.first > 0) {\n            page = Math.floor(event.first / rows);\n        }\n\n        let order = event.sortOrder === 1 ? 'asc' : 'desc';\n        let params: HttpParams = new HttpParams()\n        .set('page', page.toString())\n        .set('size', rows.toString());\n\n        if (orderInSort) {\n            if (event.sortField !== undefined) {\n                params = params.set('sort', event.sortField + ',' + order);\n            }\n        } else {\n            if (event.sortField !== undefined) {\n                params = params\n                .set('sort', event.sortField)\n                .set('order', order);\n            }\n        }\n\n        if ('string' === typeof query) {\n            params = params.set('query', query);\n        }\n\n        if ('object' === typeof query) {\n            Object.keys(query).forEach(key => params = params.set(key, query[key]));\n        }\n        return this.http.get(`${url}?${params.toString()}`, { observe: 'response' });\n    }\n}\n","import { LazyLoadEvent } from 'primeng';\nimport { DatatableComponent } from './datatable.component';\nimport { DatatableService } from './datatable.service';\nimport { DataProvider } from './dataprovider';\n\n/**\n * Class ServerDataProvider\n * @class\n */\nexport class ServerDataProvider implements DataProvider {\n\n    /**\n     * currentLazyLoadEvent property\n     * @type {LazyLoadEvent}\n     */\n    currentLazyLoadEvent: LazyLoadEvent;\n\n    /**\n     * _query property\n     * @type {any}\n     */\n    private _query: any;\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {DatatableService} datatableService\n     * @param {DatatableComponent} component\n     */\n    constructor(private datatableService: DatatableService, private component: DatatableComponent) {\n        this.component.pDatatableComponent.onLazyLoad.subscribe((event: LazyLoadEvent) => this.onLazyLoad(event));\n        this.component.pDatatableComponent.lazy = true;\n    }\n\n    /**\n     * onLazyLoad method\n     * @param {LazyLoadEvent} onLazyLoad\n     * @returns void\n     */\n    onLazyLoad(event: LazyLoadEvent) {\n        this.currentLazyLoadEvent = event;\n        this.load();\n    }\n\n    /**\n     * load method\n     * @param {any} query\n     * @returns void\n     */\n    load(query?: any): void {\n        query = this.retrieveAndSaveQuery(query);\n        this.component.startedLoading.emit();\n        this.datatableService.search(\n            this.currentLazyLoadEvent,\n            this.component.url,\n            this.component.pDatatableComponent.rows,\n            this.component.orderInSort,\n            query)\n            .toPromise()\n            .then(\n            (response) => {\n                this.treatLoadResponse(response);\n                this.component.finishedLoading.emit();\n            },\n            (error) => {\n                this.component.finishedLoading.emit(error);\n            }\n        );\n    }\n\n    /**\n     * treatLoadResponse method\n     * @param {any} response\n     * @return void\n     */\n    private treatLoadResponse(response: any) {\n        const data = response.body;\n        if (this.component.paginationParameters) {\n            this.treatLoadResponseWithPaginationParameters(data);\n        } else {\n            this.treatLoadResponseWithoutPaginationParameters(response, data);\n        }\n    }\n\n    /**\n     * treatLoadResponseWithPaginationParameters method\n     * @param {any} data\n     * @returns void\n     */\n    private treatLoadResponseWithPaginationParameters(data) {\n        let contentIndex = this.component.paginationParameters.contentIndex;\n        let totalIndex = this.component.paginationParameters.totalElementsIndex;\n        this.component.value = (data[contentIndex])? data[contentIndex]: data;\n        this.component.pDatatableComponent.totalRecords = (data[totalIndex])? data[totalIndex]: this.component.value.length;\n    }\n\n    /**\n     * treatLoadResponseWithoutPaginationParameters method\n     * @param {any} response\n     * @param {any} data\n     * @returns void\n     */\n    private treatLoadResponseWithoutPaginationParameters(response: any, data) {\n        if (response.headers.has('x-total-count')) {\n            this.component.pDatatableComponent.totalRecords = parseInt(response.headers.get('x-total-count'), 10);\n            this.component.value = data;\n        } else {\n            this.component.pDatatableComponent.totalRecords = data.totalElements;\n            this.component.value = data.content;\n        }\n    }\n\n    /**\n     * retrieveAndSaveQuery method\n     * @param {any} query\n     * @returns any\n     */\n    private retrieveAndSaveQuery(query: any): any {\n        const oldQuery = this._query;\n        const currentQuery = this.doRetrieveAndSaveQuery(query);\n        this.resetToFirstPageIfQueryChanged(oldQuery, currentQuery);\n        return currentQuery;\n    }\n\n    /**\n     * doRetrieveAndSaveQuery method\n     * @param {any} query\n     * @returns any\n     */\n    private doRetrieveAndSaveQuery(query: any): any {\n        if ('object' === typeof query && query.value) {\n            this._query = query.value;\n        } else if (query) {\n            this._query = query;\n        }\n        return this._query;\n    }\n\n    /**\n     * resetToFirstPageIfQueryChanged method\n     * @param {any} oldQuery\n     * @param {any} currentQuery\n     * @returns void\n     */\n    private resetToFirstPageIfQueryChanged(oldQuery, currentQuery) {\n        if (oldQuery !== currentQuery) {\n            this.currentLazyLoadEvent.first = 0;\n            this.component.pDatatableComponent.first = 0;\n        }\n    }\n    /**\n     * reset method\n     * @returns void\n     */\n    reset() {\n        this._query = undefined;\n    }\n}\n","import { DataProvider } from './dataprovider';\nimport { DatatableComponent } from './datatable.component';\n\n/**\n * Class MemoryDataProvider\n * @class\n */\nexport class MemoryDataProvider implements DataProvider {\n\n    /**\n     * constructor method\n     * @param {DatatableComponent} component\n     * @constructor\n     */\n    constructor(private component: DatatableComponent) {}\n\n    /**\n     * load method\n     * @param {any} query\n     * @returns void\n     */\n    load(query ?: any): void {\n        this.component.pDatatableComponent.reset();\n        \n        for (let prop in query) {\n            let matchMode = 'contains';\n            if (query[prop] instanceof Array) {\n                matchMode = 'in';\n            }\n            this.component.pDatatableComponent.filter(\n                query[prop],\n                prop,\n                matchMode\n            );\n        }\n\n        this.component.pDatatableComponent.globalFilterFields = query;\n        this.component.pDatatableComponent._filter();\n    }\n\n    /**\n     * reset method\n     * @returns void\n     */\n    reset() {\n        this.component.pDatatableComponent.globalFilterFields = undefined;\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter\n} from '@angular/core';\n/**\n * Class DatatableButtonComponent\n * @class\n */\n@Component({\n    selector: 'basis-datatable-button',\n    templateUrl: './datatable-button.component.html'\n})\nexport class DatatableButtonComponent {\n\n    /**\n     * icon property\n     * @type {string}\n     */\n    @Input()\n    icon: string;\n\n    /**\n     * class property\n     * @type {string}\n     */\n    @Input()\n    class: string;\n\n    /**\n     * bTooltip property\n     * @type {string}\n     */\n    @Input()\n    bTooltip: string;\n\n    /**\n     * name property\n     * @type {string}\n     */\n    @Input()\n    name: string;\n\n    /**\n     * allowMultipleSelection property\n     * @type {boolean}\n     */\n    @Input()\n    allowMultipleSelection: boolean = true;\n\n    /**\n     * disabled property\n     * @type boolean\n     */\n    @Input()\n    disabled: boolean = false;\n\n    /**\n     * click property\n     * @type {EventEmitter<any>}\n     */\n    @Output()\n    click: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * onClick method\n     * @param {any} event\n     * @return void\n     */\n    onClick(event: any) {\n        this.click.emit(event);\n        event.stopPropagation();\n    }\n}\n","/**\n * Class DatatableClickEvent\n * @class\n */\nexport class DatatableClickEvent {\n    /**\n     * constructor method\n     * @constructor\n     * @param {string} button\n     * @param {any} selection\n     */\n    constructor(public button: string, public selection: any) {}\n}\n","import { Input, EventEmitter, QueryList, TemplateRef, AfterContentInit, Output, ContentChildren, ContentChild, Directive } from '@angular/core';\nimport { PrimeTemplate } from 'primeng';\n\n@Directive({\n    selector: 'p-column'\n})\nexport class Column implements AfterContentInit {\n\n    @Input() field: string;\n\n    @Input() colId: string;\n\n    @Input() sortField: string;\n\n    @Input() filterField: string;\n\n    @Input() header: string;\n\n    @Input() footer: string;\n\n    @Input() sortable: any;\n\n    @Input() editable: boolean;\n\n    @Input() filter: boolean;\n\n    @Input() filterMatchMode: string;\n\n    @Input() filterType: string = 'text';\n\n    @Input() excludeGlobalFilter: boolean;\n\n    @Input() rowspan: number;\n\n    @Input() colspan: number;\n\n    @Input() scope: string;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() exportable: boolean = true;\n\n    @Input() headerStyle: any;\n\n    @Input() headerStyleClass: string;\n\n    @Input() bodyStyle: any;\n\n    @Input() bodyStyleClass: string;\n\n    @Input() footerStyle: any;\n\n    @Input() footerStyleClass: string;\n\n    @Input() hidden: boolean;\n\n    @Input() expander: boolean;\n\n    @Input() selectionMode: string;\n\n    @Input() filterPlaceholder: string;\n\n    @Input() filterMaxlength: number;\n\n    @Input() frozen: boolean;\n\n    @Input() resizable: boolean = true;\n\n    @Output() sortFunction: EventEmitter<any> = new EventEmitter();\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    @ContentChild(TemplateRef) template: TemplateRef<any>;\n\n    public headerTemplate: TemplateRef<any>;\n\n    public bodyTemplate: TemplateRef<any>;\n\n    public footerTemplate: TemplateRef<any>;\n\n    public filterTemplate: TemplateRef<any>;\n\n    public editorTemplate: TemplateRef<any>;\n\n    public inputTemplate: TemplateRef<any>;\n\n    public outputTemplate: TemplateRef<any>;\n\n    ngAfterContentInit(): void {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n\n                case 'body':\n                    this.bodyTemplate = item.template;\n                    break;\n\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n\n                case 'filter':\n                    this.filterTemplate = item.template;\n                    break;\n\n                case 'editor':\n                    this.editorTemplate = item.template;\n                    break;\n\n                case 'input':\n                    this.inputTemplate = item.template;\n                    break;\n\n                case 'output':\n                    this.outputTemplate = item.template;\n                    break;\n\n                default:\n                    this.bodyTemplate = item.template;\n                    break;\n            }\n        });\n    }\n}\n","import {\n    Component,\n    ViewChild,\n    Input,\n    Output,\n    ContentChildren,\n    QueryList,\n    ChangeDetectorRef,\n    AfterViewInit,\n    AfterContentInit,\n    OnInit,\n    EventEmitter,\n    ViewEncapsulation,\n    ElementRef,\n} from '@angular/core';\nimport { Table as DataTable } from 'primeng/table';\nimport { DataProvider } from './dataprovider';\nimport { DataProviderFactory, DataProviderType } from './dataprovider-factory';\nimport { DatatableButtonComponent } from './datatable-button.component';\nimport { DatatableClickEvent } from './datatable-click-event';\nimport { DatatablePaginationParameters } from './datatable-pagination-parameters';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Authorization, User } from '@nuvem/angular-base';\nimport { Column } from './p-column.directive';\n\n/**\n * Class DatatableComponent\n * @class\n */\n@Component({\n    selector: 'basis-datatable',\n    templateUrl: './datatable.component.html',\n    styleUrls: ['./datatable.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class DatatableComponent implements AfterViewInit, AfterContentInit, OnInit {\n\n    /**\n     * selectedRow property\n     * @type {any}\n     */\n    selectedRow: any;\n\n    /**\n     * dataProvider property\n     * @type {DataProvider}\n     */\n    dataProvider: DataProvider;\n\n    /**\n     * filterParams property\n     * @type {any}\n     */\n    filterParams: any = {};\n\n    /**\n     * footerMsg property\n     * @type {string}\n     */\n    footerMsg: string = '';\n\n    /**\n     * orderInSort property\n     * @type {boolean}\n     */\n    orderInSort: boolean = false;\n\n    /**\n     * splitButton property\n     * @type {any}\n     */\n    @Input() splitButton: any;\n\n    /**\n     * value property\n     * @type {any}\n     */\n    @Input() value: any[] = [];\n\n    /**\n     * type property\n     * @type DataProviderType\n     */\n    @Input() type: DataProviderType = DataProviderType.Server;\n\n    /**\n     * rows property\n     * @type {number}\n     */\n    @Input() rows: number = 5;\n\n    /**\n     * rowsPerPageOptions property\n     * @type {number[]}\n     */\n    @Input() rowsPerPageOptions: number[];\n\n    /**\n     * url property\n     * @type {string}\n     */\n    @Input() url: string;\n\n    /**\n     * extraParams property\n     * @type {any}\n     */\n    @Input() extraParams: any;\n\n    /**\n     * paginationParameters property\n     * @type {DatatablePaginationParameters}\n     */\n    @Input() paginationParameters: DatatablePaginationParameters;\n\n    /**\n     * showPaginationFooter property\n     * @type {boolean}\n     */\n    @Input() showPaginationFooter = false;\n\n    /**\n     * disableEdit property\n     * @type {boolean}\n     */\n    @Input() disableEdit = false;\n\n    /**\n     * disableView property\n     * @type {boolean}\n     */\n    @Input() disableView = false;\n\n    /**\n     * disableDelete property\n     * @type {boolean}\n     */\n    @Input() disableDelete = false;\n\n    /**\n     * selectionMode property\n     * @type {string}\n     */\n    @Input() selectionMode = 'single';\n\n    /**\n     * enableButtonsScroll property\n     * @type {boolean}\n     */\n    @Input() enableButtonsScroll = false;\n\n    /**\n     * emptyMessage property\n     * @type {string}\n     */\n    @Input() emptyMessage = 'Nenhum registro encontrado.';\n\n    /**\n     * verticalButtons property\n     * @type {boolean}\n     */\n    @Input() verticalButtons = true;\n\n    /**\n     * enableScroll property\n     * @type {boolean}\n     */\n    @Input() enableScroll = false;\n\n    /**\n     * scrollHeight property\n     * @type {string}\n     */\n    @Input() scrollHeight: string;\n\n    /**\n     * scrollWidth property\n     * @type {string}\n     */\n    @Input() scrollWidth: string;\n\n    /**\n     * rulesToHide property\n     * @type {any}\n     */\n    @Input() rulesToHide: any;\n\n    /**\n     * rulesToShowEdit property\n     * @type {any}\n     */\n    @Input() rulesToShowEdit: any;\n\n    /**\n     * rulesToShowDelete property\n     * @type {any}\n     */\n    @Input() rulesToShowDelete: any;\n\n    /**\n     * rulesToHideView property\n     * @type {any}\n     */\n    @Input() rulesToHideView: any;\n\n    /**\n     * rulesToHideEdit property\n     * @type {any}\n     */\n    @Input() rulesToHideEdit: any;\n\n    /**\n     * rulesToHideDelete property\n     * @type {any}\n     */\n    @Input() rulesToHideDelete: any;\n\n    /**\n     * horizontalButtonsHeader property\n     * @type {string}\n     */\n    horizontalButtonsHeader: string;\n\n    /**\n     * disableLoadingBlockUI property\n     * @type {boolean}\n     */\n    @Input() disableLoadingBlockUI = false;\n\n    /**\n     * rowStyleClass property\n     * @type {any}\n     */\n    @Input() rowStyleClass: any;\n\n    /**\n     * filterOnColumn property\n     */\n    @Input() filterOnColumn = false;\n\n    /**\n     * filterSelectOptions property\n     */\n    filterSelectOptions: any[] = [];\n\n    /**\n     * updateFiltroHistorico property\n     */\n    updateFilterColumn: boolean = false;\n\n    /**\n     * customFilterOptions property\n     */\n    @Input() customFilterOptions: Object = {}\n\n    /**\n     * buttonClick property\n     * @type {EventEmitter<any>}\n     */\n    @Output() buttonClick: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * pDatatableComponent property\n     * @type {Table}\n     */\n    @ViewChild(DataTable, { static: true }) pDatatableComponent: DataTable;\n\n    /**\n     * extraButtons property\n     * @type {QueryList<DatatableButtonComponent>}\n     */\n    @ContentChildren(DatatableButtonComponent) extraButtons: QueryList<DatatableButtonComponent>;\n\n    /**\n     * columns property\n     * @type {any[]}\n     */\n    @ContentChildren(Column) columns: Column[];\n\n    /**\n     * startedLoading property\n     * @type {EventEmitter<void>}\n     */\n    @Output() startedLoading: EventEmitter<void> = new EventEmitter<void>();\n\n    /**\n     * finishedLoading property\n     * @type {EventEmitter<HttpErrorResponse>}\n     */\n    @Output() finishedLoading: EventEmitter<HttpErrorResponse> = new EventEmitter<HttpErrorResponse>();\n\n    /**\n     * onRowSelected property\n     * @type {EventEmitter<any>}\n     */\n    @Output() onRowSelected: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * showHorizontalButtonsHeader property\n     * @type {boolean}\n     */\n    showHorizontalButtonsHeader = false;\n\n    /**\n     * blockContent\n     * @type {boolean}\n     */\n    blockContent = false;\n\n    /**\n     * visibleColumns property\n     * @type {Object}\n     */\n    visibleColumns: Object = {};\n\n    /**\n     * showVisibleColumnsControl property\n     * @type {boolean}\n     */\n    @Input() showVisibleColumnsControl: boolean = false;\n\n    /**\n     * editMode property\n     * @type {string}\n     */\n    @Input() editMode: string;\n\n    /**\n     * dataKey property\n     * Identificador Ãºnico para cada registro da tabela\n     * @type {string}\n     */\n    @Input() dataKey: string = 'id';\n\n    /**\n     * onRowEditEvent property\n     * Evento disparado quando o usuÃ¡rio realiza aÃ§Ãµes de ediÃ§Ã£o em uma linha da tabela\n     * @type {EventEmitter<void>}\n     */\n    @Output() onRowEditEvent: EventEmitter<any> = new EventEmitter<any>();\n\n    clonedRowData: { [s: string]: any; } = {};\n\n    /**\n     * errorMessage property\n     * @type {string}\n     */\n    private errorMessage = 'Ocorreu um erro ao carregar os dados da tabela. Tente novamente.';\n\n    /**\n     * originalEmptyMessage property\n     * @type {string}\n     */\n    private originalEmptyMessage: string;\n\n    editingRow = false;\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {ChangeDetectorRef} changeDetectorRef\n     * @param {DataProviderFactory} dataProviderFactory\n     * @param {Authorization} authorizationService\n     */\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        private dataProviderFactory: DataProviderFactory,\n        private authorizationService: Authorization\n    ) { }\n\n    /**\n     * ngOnInit method\n     * @returns void\n     */\n    ngOnInit() {\n        this.dataProvider = this.dataProviderFactory.create(this.type, this);\n        this.pDatatableComponent.rows = this.rows;\n        this.subscribeToLoadingEvents();\n        this.initRowsPerPageOptionsIfPresent();\n        this.defineIfShouldShowHorizontalButtonsHeader();\n        this.updateOnValueChange();\n\n        this.finishedLoading.subscribe(() => {\n            this.updateOnValueChange();\n        });\n    }\n\n    /**\n     * subscribeFromValueChange method\n     * @returns void\n     */\n    private updateOnValueChange() {\n        this.filterSelectOptions = [];\n        if (this.value) {\n            this.value.map((item: any) => {\n                this.filterSelectOptions.push(item);\n            });\n        }\n    }\n\n    /**\n     * subscribeToLoadingEvents method\n     * @returns void\n     */\n    private subscribeToLoadingEvents() {\n        if (!this.disableLoadingBlockUI) {\n            this.originalEmptyMessage = this.emptyMessage;\n            this.startedLoading.subscribe(() => this.onStartedLoading());\n            this.finishedLoading.subscribe(error => this.onFinishedLoading(error));\n        }\n    }\n\n    /**\n     * onStartedLoading method\n     * @returns void\n     */\n    private onStartedLoading() {\n        this.blockContent = true;\n        this.emptyMessage = this.originalEmptyMessage;\n    }\n    /**\n     * onFinishedLoading method\n     * @param {HttpErrorResponse} error\n     * @returns void\n     */\n    private onFinishedLoading(error: HttpErrorResponse) {\n        this.blockContent = false;\n        if (error) {\n            this.emptyMessage = this.errorMessage;\n        }\n    }\n\n    /**\n     * initRowsPerPageOptionsIfPresent method\n     * @returns void\n     */\n    private initRowsPerPageOptionsIfPresent() {\n        if (this.rowsPerPageOptions) {\n            this.pDatatableComponent.rowsPerPageOptions = this.rowsPerPageOptions;\n        }\n    }\n\n    /**\n     * defineIfShouldShowHorizontalButtonsHeader method\n     * @returns void\n     */\n    private defineIfShouldShowHorizontalButtonsHeader() {\n        if (this.horizontalButtonsHeader) {\n            this.showHorizontalButtonsHeader = true;\n        }\n    }\n\n    /**\n     * ngAfterViewInit method\n     * @returns void\n     */\n    ngAfterViewInit() {\n        this.setExtraParams();\n        this.pDatatableComponent.columns = this.columns;\n        this.pDatatableComponent.ngAfterContentInit();\n        this.setAllColumnsVisible();\n        this.changeDetectorRef.detectChanges();\n    }\n\n    /**\n     * setExtraParams method\n     * @returns void\n     */\n    private setExtraParams() {\n        for (let i in this.extraParams) {\n            this.pDatatableComponent[i] = this.extraParams[i];\n        }\n    }\n    /**\n     * ngAfterContentInit method\n     * @returns void\n     */\n    ngAfterContentInit() {\n        this.extraButtons.forEach((button) => {\n            button.click.subscribe(event => {\n                this.onClick(button.name, event);\n            });\n        });\n    }\n\n    /**\n     * onClick method\n     * @param {string} button\n     * @param {any} event\n     * @return void\n     */\n    onClick(button: string, event: any) {\n        this.buttonClick.emit(new DatatableClickEvent(button, this.selectedRow));\n        event.stopPropagation();\n        this.resetSelectedRow(button);\n    }\n\n    /**\n     * onSelectChange method\n     * @param {any} event\n     * @returns void\n     */\n    onSelectChange(event: any) {\n        this.onRowSelected.emit(this.selectedRow);\n        if (Array.isArray(this.selectedRow) && this.selectedRow.length > 1) {\n            this.updateMultipleButtonsStatus(true);\n        } else {\n            this.updateMultipleButtonsStatus(false);\n        }\n    }\n\n    /**\n     * updateMultipleButtonsStatus method\n     * @param {boolean} hasMultipleSelection\n     * @return void\n     */\n    private updateMultipleButtonsStatus(hasMultipleSelection: boolean) {\n        this.extraButtons.forEach((button) => {\n            if (hasMultipleSelection && !button.allowMultipleSelection) {\n                button.disabled = true;\n            } else {\n                button.disabled = false;\n            }\n        });\n    }\n\n    /**\n     * refresh method\n     * @param query\n     * @returns void\n     */\n    refresh(query?: any) {\n        this.dataProvider.load(query);\n    }\n\n    /**\n     * resetSelectedRow method\n     * @param button\n     * @returns void\n     */\n    resetSelectedRow(button: string) {\n        if (button === 'delete') {\n            this.selectedRow = null;\n        }\n    }\n\n    /**\n     * reset method\n     * @returns void\n     */\n    reset() {\n        this.pDatatableComponent.first = 0;\n        this.dataProvider.reset();\n        this.refresh();\n    }\n\n    /**\n     * paginationFooterText method\n     * @param {string} msg\n     * @returns string\n     */\n    paginationFooterText(msg: string): string {\n        const registros = this.totalRecords() === 1 ? 'registro' : 'registros';\n        if (msg === '') {\n            return `Exibindo: ${this.currentFirstIndex()} a ${this.currentLastIndex()} de ${this.totalRecords()} ${registros}`;\n        }\n        msg = msg.replace('{totalRecords}', this.totalRecords().toString());\n        msg = msg.replace('{currentFirstIndex}', this.currentFirstIndex().toString());\n        msg = msg.replace('{currentLastIndex}', this.currentLastIndex().toString());\n        return msg;\n    }\n\n    /**\n     * currentFirstIndex method\n     * @returns number\n     */\n    currentFirstIndex(): number {\n        return this.pDatatableComponent.first + 1;\n    }\n\n    /**\n     * currentLastIndex method\n     * @returns number\n     */\n    currentLastIndex(): number {\n        const currentLastIndex: number = this.pDatatableComponent.first + this.pDatatableComponent.rows;\n        if (currentLastIndex > this.totalRecords()) {\n            return this.totalRecords();\n        }\n        return currentLastIndex;\n    }\n\n    /**\n     * totalRecords method\n     * @returns number\n     */\n    totalRecords(): number {\n        return this.pDatatableComponent.totalRecords;\n    }\n\n    /**\n     * checkRolesToButton method\n     * @param {string} button\n     * @return boolean\n     */\n    checkRolesToButton(button: string): boolean {\n        if (this[button]) {\n            if (button === 'rulesToHide' || button === 'rulesToShowEdit' || button === 'rulesToShowDelete') {\n                this.checkUseButtons(button);\n                return this.authorizationService.hasRole(this[button]);\n            }\n            return !this.authorizationService.hasRole(this[button]);\n        }\n        return true;\n    }\n\n    /**\n     * checkUseButtons method\n     * @param {string} button\n     * @returns void\n     */\n    checkUseButtons(button: string): void {\n        if (this[button] && this[button.replace('Show', 'Hide')]) {\n            throw new Error('NÃ£o Ã© possÃ­vel definir dois valores de roles para os botÃµes padrÃµes.');\n        }\n    }\n\n    /**\n     * filter method\n     * @returns void\n     */\n    filter() {\n        for (let prop in this.filterParams) {\n            if (this.filterParams[prop] === '' || (this.filterParams[prop].length === 0)) {\n                delete this.filterParams[prop];\n            }\n        }\n        if (Object.getOwnPropertyNames(this.filterParams).length === 0) {\n            this.reset();\n        } else {\n            this.refresh(this.filterParams);\n        }\n    }\n\n    /**\n     * MÃ©todo para filtrar por colunas\n     * @param column chave da coluna na tabela\n     * @param filters valor do filtro\n     */\n    filterColumn(column: string, filters: any) {\n        const values = [];\n        if (filters instanceof Array) {\n            values[column] = [];\n            for (let item in filters) {\n                let val = (filters[item] instanceof Object)? filters[item].value : filters[item];\n                values[column].push(val)\n            }\n        } else {\n            values[column] = filters;\n        }\n        this.filterParams = { ...this.filterParams, ...values }\n\n        return this.filter();\n    }\n\n    /**\n     * Inicia todas as colunas da tabela como visÃ­veis\n     */\n    setAllColumnsVisible() {\n        this.columns.forEach((col) => {\n            this.visibleColumns[col.field] = 'table-cell';\n        });\n    }\n\n    /**\n     * Verifica se uma coluna deve estar visÃ­vel\n     * @param column string\n     * @param visibleColumns Array\n     */\n    visibleColumnCheck(column: string, visibleColumns: []) {\n        return visibleColumns.some((item: any) => {\n            return (item.field) ? item.field == column : true;\n        });\n    }\n\n    /**\n     * Atualzia os valores da variÃ¡vel 'visibleColuns' para mostrar ou nÃ£o as colunas\n     * @param columns array\n     */\n    updateVisibleColumns(columns: []) {\n        for (let col in this.visibleColumns) {\n            if (this.visibleColumnCheck(col, columns)) {\n                this.visibleColumns[col] = 'table-cell';\n            } else {\n                this.visibleColumns[col] = 'none';\n            }\n        }\n    }\n\n    onRowEditInitEvent(event, rowData: any) {\n\n        const tr = event.srcElement.closest('tr');\n\n        setTimeout(() => {\n            this.editingRow = true;\n\n            const top = tr.offsetTop;\n            const height = tr.offsetHeight;\n            const editButtons = tr.querySelector('.editar-campos');\n\n            editButtons.style.top = (top + height - 75) + 'px';\n            editButtons.style.height ='75px';\n            editButtons.style.backgroundColor = '#d0d0d0';\n            editButtons.style.opacity = 1;\n\n            this.clonedRowData[rowData.id] = {...rowData};\n            this.onRowEditEvent.emit({event: \"init\", data: rowData});\n        }, null , tr);\n\n    }\n\n    onRowEditSaveEvent(event, rowData: any) {\n        this.onRowEditEvent.emit({event: \"save\", data: rowData});\n        this.resetEditingMode(event);\n    }\n\n    onRowEditCancelEvent(event, rowData: any, index: number) {\n        this.value[index] = this.clonedRowData[rowData.id];\n\n        delete this.clonedRowData[rowData[this.dataKey]];\n        this.onRowEditEvent.emit({event: \"cancel\", data: rowData});\n\n        this.resetEditingMode(event);\n    }\n\n    resetEditingMode(event) {\n        const editButtons = event.srcElement.closest('tr').querySelector('.editar-campos');\n\n        editButtons.style.opacity = 0;\n        editButtons.style.backgroundColor = '#0000006b';\n        editButtons.style.display = 'none';\n\n        this.editingRow = false;\n    }\n\n    editarLinhaOver(event) {\n        if (!this.editingRow && this.editMode == 'row') {\n            const top = event.srcElement.closest('tr').offsetTop;\n            const height = event.srcElement.closest('tr').offsetHeight;\n            const editButtons = event.srcElement.closest('tr').querySelector('.editar-campos');\n\n            editButtons.style.display = 'flex';\n            editButtons.style.top = top + 'px';\n            editButtons.style.height = height + 'px';\n            editButtons.style.backgroundColor = '#0000006b';\n            editButtons.style.opacity = 1;\n        }\n    }\n\n    editarLinhaOut(event) {\n        if (!this.editingRow) {\n            const editButtons = event.srcElement.closest('tr').querySelector('.editar-campos');\n            editButtons.style.display = 'none';\n            editButtons.style.opacity = 0;\n        }\n    }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n/**\n * Class DatatableSplitbuttonComponent\n * @class\n */\n@Component( {\n    selector: 'datatable-splitbutton',\n    templateUrl: 'datatable-splitbutton.component.html'\n} )\nexport class DatatableSplitbuttonComponent implements OnInit {\n\n    /**\n     * items property\n     * @type {any[]}\n     */\n    @Input()\n    items: any[];\n\n    /**\n     * label property\n     * @type {string}\n     */\n    @Input()\n    label: string;\n\n    /**\n     * class property\n     * @type {string}\n     */\n    @Input()\n    class: string;\n\n    /**\n     * icon property\n     * @type {string}\n     */\n    @Input()\n    icon: string;\n\n    /**\n     * method propety\n     * @type {any}\n     */\n    @Input()\n    method: any;\n\n    /**\n     * ngOnInit method\n     * @returns void\n     */\n    ngOnInit() {\n    }\n}\n","import { DatatableSplitbuttonComponent } from './datatable-splitbutton.component';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { SplitButtonModule } from 'primeng';\n/**\n * Class DatatableSplitbuttonModule\n * @class\n */\n@NgModule({\n  imports: [\n    SplitButtonModule\n  ],\n  declarations: [\n    DatatableSplitbuttonComponent\n  ],\n  providers: [],\n  exports: [\n    DatatableSplitbuttonComponent,\n    SplitButtonModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class DatatableSplitbuttonModule {\n}\n","import { Component, EventEmitter, Output, Input, OnChanges, SimpleChange, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n    selector: 'basis-filter-column',\n    templateUrl: './filter-column.component.html'\n})\nexport class FilterColumn implements OnChanges, OnInit {\n\n    @Input() listaOriginal: any[] = [];\n\n    @Input() lista: any[] = [];\n\n    @Input() field: string;\n\n    @Input() header: string;\n\n    @Input() labelDefaultImplementation: boolean = false;\n\n    @Input() labelDefaultName: string;\n\n    @Input() updateFiltro: boolean = false;\n\n    @Input() filterType: string;\n\n    @Input() tableType: string;\n\n    @Input() customFilterOptions: Object = {};\n\n    @Input() template = 'filter_text';\n\n    @Output() outputEvent = new EventEmitter();\n\n    private debouncer: Subject<any> = new Subject<any>();\n\n    filtro: any;\n\n    resultado: any[] = [];\n\n    private listaFields: any[] = [];\n\n    constructor() { }\n\n    ngOnInit() {\n        this.debouncer\n            .pipe(debounceTime((this.tableType === 'memory')? 300 : 1000))\n            .subscribe((value) => this.outputEvent.emit(value));\n\n        this.template = `filter_${this.filterType}`;\n    }\n\n    ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n        if (this.checkChanges(changes, 'listaOriginal')) {\n            this.preencherFields();\n        }\n    }\n\n    checkChanges(changes: { [propName: string]: SimpleChange }, property) {\n        return changes[property] && changes[property].previousValue != changes[property].currentValue;\n    }\n\n    /**\n     * MÃ©todo para propagar o evento de filtragem\n     * @param event filtro\n     */\n    filtrar(event) {\n        this.debouncer.next(this.filtro);\n    }\n\n    /**\n     * Preenche os itens que serÃ£o exibidos no multiselect, removendo duplicidades\n     */\n    preencherFields() {\n        this.listaFields = [];\n        this.listaOriginal.filter(pi => pi[this.field] !== null).forEach(row => {\n            let item = {label: row[this.field], value: row[this.field]};\n            if (!this.verificarSeExisteField(item)) {\n                this.listaFields.push(item);\n            }\n        });\n    }\n\n    /**\n     *\n     * @param field Verifica duplicidade de fields nas opÃ§Ãµes de seleÃ§Ã£o\n     */\n    verificarSeExisteField(field) {\n        return this.listaFields.some(item => {\n            return item.value == field.value;\n        });\n    }\n\n    /**\n     * Caso o usuaÅio nÃ£o forneÃ§a uma lista para o options, serÃ¡ criada uma lista com\n     * os valores presentes na tabela\n     */\n    getCustomFilterOptions() {\n        if (this.customFilterOptions.hasOwnProperty(this.field)) {\n            return this.customFilterOptions[this.field];\n        }\n\n        return this.listaFields;\n    }\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n    CheckboxModule,\n    MultiSelectModule,\n    InputTextModule,\n} from 'primeng';\n\nimport { FilterColumn } from './filter-column.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MultiSelectModule,\n        ButtonModule,\n        CheckboxModule,\n        DropdownModule,\n        FormsModule,\n        ReactiveFormsModule,\n        InputTextModule\n    ],\n    declarations: [\n        FilterColumn\n    ],\n    exports: [\n        FilterColumn\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class FilterColumnModule { }\n","import { Injectable } from '@angular/core';\nimport { MessageService } from 'primeng';\nimport { NotificationProvider, ApplicationProblemType } from '@nuvem/angular-base';\n\n/**\n * Class PageNotificationService\n * @class\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class PageNotificationService extends NotificationProvider {\n\n    /**\n     * successSeverity property\n     * @type {string}\n     */\n    private readonly successSeverity = 'success';\n\n    /**\n     * infoSeverity property\n     * @type {string}\n     */\n    private readonly infoSeverity = 'info';\n\n    /**\n     * warnSeverity property\n     * @type {string}\n     */\n    private readonly warnSeverity = 'warn';\n\n    /**\n     * errorSeverity property\n     * @type {string}\n     */\n    private readonly errorSeverity = 'error';\n\n    /**\n     * createMsg property\n     * @type {string}\n     */\n    private readonly createMsg = 'Registro incluÃ­do com sucesso!';\n\n    /**\n     * updateMsg property\n     * @type {string}\n     */\n    private readonly updateMsg = 'Registro alterado com sucesso!';\n\n    /**\n     * deleteMsg property\n     * @type {string}\n     */\n    private readonly deleteMsg = 'Registro excluÃ­do com sucesso!';\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {MessageService} messageService\n     */\n    constructor(private messageService: MessageService) {\n        super();\n    }\n\n    /**\n     * addCreateMsg method\n     * @param {string} title\n     */\n    addCreateMsg(title?: string) {\n        this.addSuccessMessage(this.createMsg, title);\n    }\n\n    /**\n     * addSuccessMessage method\n     * @param {string} message\n     * @param {string} title\n     */\n    addSuccessMessage(message: string, title?: string) {\n        this.addMsg(this.successSeverity, message, title);\n    }\n\n    /**\n     * addMsg method\n     * @param {string} severity\n     * @param {string} msg\n     * @param {string} title\n     */\n    private addMsg(severity: string, msg: string, title?: string) {\n        this.messageService.add({\n          severity: severity,\n          summary: title,\n          detail: msg\n        });\n    }\n\n    /**\n     * addUpdateMsg method\n     * @param {string} title\n     */\n    addUpdateMsg(title?: string) {\n        this.addSuccessMessage(this.updateMsg, title);\n    }\n\n    /**\n     * addDeleteMsg method\n     * @param {string} title\n     */\n    addDeleteMsg(title?: string) {\n        this.addSuccessMessage(this.deleteMsg, title);\n    }\n\n    /**\n     * addInfoMessage method\n     * @param {string} message\n     * @param {string} title\n     */\n    addInfoMessage(message: string, title?: string) {\n        this.addMsg(this.infoSeverity, message, title);\n    }\n\n    /**\n     * addWarnMessage method\n     * @param {string} message\n     * @param {string} title\n     */\n    addWarnMessage(message: string, title?: string) {\n        this.addMsg(this.warnSeverity, message, title);\n    }\n\n    /**\n     * addErrorMessage method\n     * @param {string} message\n     * @param {string} title\n     */\n    addErrorMessage(message: string, title?: string) {\n        this.addMsg(this.errorSeverity, message, title);\n    }\n\n    /**\n     * addErrorProblem method\n     * @param {ApplicationProblemType} problem\n     */\n    addErrorProblem(problem: ApplicationProblemType): void {\n        this.addMsg(this.errorSeverity, problem.detail, problem.title);\n    }\n\n}\n","import { Component, Input, OnInit, QueryList, Output, EventEmitter } from '@angular/core';\nimport { PageNotificationService } from './../../page-notification/page-notification.service';\n\n@Component({\n    selector: 'basis-show-column',\n    templateUrl: './show-column.component.html'\n})\nexport class ShowColumn implements OnInit {\n\n    /**\n     * atributo que representa as colunas da tabela\n     * @type {QueryList}\n     */\n    @Input() columns: QueryList<any>;\n\n    /**\n     * lista de colunas disponÃ­vels na tabela\n     * @type {Array}\n     */\n    options: any[] = [];\n\n    /**\n     * Valores do select de colunas\n     * @type {Array}\n     */\n    values: any[] = [];\n\n    /**\n     * Ãltimo valor vÃ¡lido para o select.\n     * @type {Array}\n     */\n    private lastValue: any[] = [];\n\n    /**\n     * Evento para atualizar a visibilidade das colunas da tabela\n     * @type {EventEmitter}\n     */\n    @Output() updateVisibleColumns: EventEmitter<any> = new EventEmitter();\n\n    constructor(private pageNotificationService: PageNotificationService) {}\n\n    ngOnInit () {\n        this.columns.forEach((column) => {\n            const col = {field: column.field, filterType: column.filterType, header: column.header};\n            this.options.push(col);\n            this.values.push(col)\n            this.lastValue.push(col);\n        });\n    }\n\n    mostrarColunas(event) {\n        if (this.values.length) {\n            this.lastValue = event.value;\n            this.updateVisibleColumns.emit(this.values);\n\t\t} else {\n            this.lastValue.map((item) => this.values.push(item));\n\t\t\tthis.pageNotificationService.addErrorMessage('NÃ£o Ã© possÃ­vel exibir menos de uma coluna');\n        }\n    }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n    CheckboxModule,\n    MultiSelectModule,\n    InputTextModule,\n} from 'primeng';\n\nimport { ShowColumn } from './show-column.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MultiSelectModule,\n        ButtonModule,\n        CheckboxModule,\n        DropdownModule,\n        FormsModule,\n        ReactiveFormsModule,\n        InputTextModule\n    ],\n    declarations: [\n        ShowColumn\n    ],\n    exports: [\n        ShowColumn\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class ShowColumnModule { }\n","\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    ButtonModule,\n    TooltipModule,\n    BlockUIModule,\n    ProgressSpinnerModule,\n    SplitButtonModule,\n    PaginatorModule,\n    InputTextModule\n} from 'primeng';\n\nimport { TableModule } from 'primeng/table';\n\nimport { DataProviderFactory } from './dataprovider-factory';\nimport { DatatableComponent } from './datatable.component';\nimport { DatatableButtonComponent } from './datatable-button.component';\nimport { DatatableService } from './datatable.service';\nimport { DatatableSplitbuttonModule } from '../extra-button/datatable-splitbutton.module';\nimport { FilterColumnModule } from './filter-column/filter-column.module';\nimport { ShowColumnModule } from './show-column/show-column.module';\nimport { Column } from './p-column.directive';\n\n/**\n * Class DatatableModule\n * @class\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        ButtonModule,\n        SplitButtonModule,\n        TooltipModule,\n        TableModule,\n        BlockUIModule,\n        ProgressSpinnerModule,\n        DatatableSplitbuttonModule,\n        HttpClientModule,\n        PaginatorModule,\n        FilterColumnModule,\n        ShowColumnModule,\n        InputTextModule\n    ],\n    declarations: [\n        DatatableComponent,\n        DatatableButtonComponent,\n        Column\n    ],\n    providers: [\n        { provide: DatatableService, useClass: DatatableService, deps: [HttpClient] },\n        DataProviderFactory\n    ],\n    exports: [\n        DatatableComponent,\n        DatatableButtonComponent,\n        FilterColumnModule,\n        ShowColumnModule,\n        Column\n    ]\n})\nexport class DatatableModule {\n}\n","import { BlockUiStatus, BlockUiService } from '@nuvem/angular-base';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n/**\n * Class BlockUiComponent\n * @class\n */\n@Component({\n    selector: 'basis-block-ui',\n    templateUrl: './block-ui.component.html',\n    styleUrls: [ './block-ui.component.css' ],\n})\nexport class BlockUiComponent implements OnInit , OnDestroy {\n    /**\n     * status property\n     * @type {boolean}\n     * @public\n     */\n    status = false;\n\n    /**\n     * subscription property\n     * @private\n     * @type {Subscription}\n     */\n    private subscription: Subscription;\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {BlockUiService} service\n     */\n    constructor(private service: BlockUiService) { }\n\n    /**\n     * ngOnInit method\n     * @returns void\n     */\n    ngOnInit() {\n        this.subscription = this.service.loaderStatus.subscribe((blockui: BlockUiStatus) => {\n            this.status = blockui.status;\n        });\n    }\n\n    /**\n     * ngOnDestroy methods\n     * @returns void\n     */\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    /**\n     * isBlocked method\n     * @returns boolean\n     */\n    isBlocked() {\n        return this.status;\n    }\n\n    /**\n     * show method\n     * @returns false\n     */\n    show() {\n        this.status = true;\n    }\n\n    /**\n     * hide methods\n     * @returns void\n     */\n    hide() {\n        this.status = false;\n    }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BlockUiInterceptor, BlockUiService } from '@nuvem/angular-base';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BlockUIModule, ProgressSpinnerModule } from 'primeng';\nimport { BlockUiComponent } from './block-ui.component';\n\n/**\n * Class BlockUiModule\n * @class\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        BlockUIModule,\n        ProgressSpinnerModule,\n    ],\n    declarations: [\n        BlockUiComponent\n    ],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: BlockUiInterceptor,\n            multi: true\n        },\n        BlockUiService\n    ],\n    exports: [\n        BlockUIModule,\n        BlockUiComponent,\n        ProgressSpinnerModule\n    ]\n})\nexport class BlockUiModule {\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * Class PageNotificationComponent\n * @class\n */\n@Component({\n  selector: 'basis-page-notification',\n  templateUrl: './page-notification.component.html'\n})\nexport class PageNotificationComponent {\n\n    /**\n     * duration property\n     * @type {number}\n     */\n    @Input() duration: number = 3000;\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageService } from 'primeng/api';\n\nimport { PageNotificationService } from './page-notification.service';\nimport { PageNotificationComponent } from './page-notification.component';\nimport { NotificationProvider } from '@nuvem/angular-base';\n\n/**\n * Class PageNotificationModule\n * @class\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        ToastModule\n    ],\n    declarations: [\n        PageNotificationComponent\n    ],\n    exports: [\n        PageNotificationComponent\n    ],\n    providers: [\n        MessageService,\n        PageNotificationService,\n        {\n            provide: NotificationProvider,\n            useExisting: PageNotificationService\n        }\n    ]\n})\nexport class PageNotificationModule {\n}\n","import { Component } from \"@angular/core\";\nimport { FormNotificationComponentSuperclass } from '@nuvem/angular-base';\n\n@Component({\n    selector: '[form-notification]',\n    templateUrl: 'form-notification.component.html'\n})\nexport class FormNotificationComponent extends FormNotificationComponentSuperclass {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormNotificationBaseModule, FormNotificationComponentSuperclass } from '@nuvem/angular-base';\nimport { FormNotificationComponent } from './form-notification.component';\n\n/**\n * MÃ³dulo para adicionar funcionalidade de notificaÃ§Ã£o de erros de formulÃ¡rios.\n * @module\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        FormNotificationBaseModule\n    ],\n    declarations: [\n        FormNotificationComponent\n    ],\n    exports: [\n        FormNotificationComponent\n    ]\n})\nexport class FormNotificationModule { }\n","import { Component, OnInit, OnDestroy, Input, TemplateRef } from '@angular/core';\n\nimport { ErrorStackService, NamedErrorType } from '@nuvem/angular-base';\n\nimport { Subscription } from 'rxjs';\n\n/**\n * Class ErrorStackComponent\n * @class\n */\n@Component({\n    selector: 'basis-error-stack',\n    templateUrl: './error-stack.component.html'\n})\nexport class ErrorStackComponent implements OnInit, OnDestroy {\n\n    /**\n     * title property\n     * @type {string}\n     */\n    @Input() title: string = 'Error Stack';\n\n    /**\n     * template property\n     * @type {TemplateRef}\n     */\n    @Input() template: TemplateRef<any>;\n\n    /**\n     * errors property\n     * @type {NamedErrorType}\n     */\n    errors: NamedErrorType[] = [];\n\n    /**\n     * errorSubscription property\n     * @type {Subscription}\n     */\n    private errorSubscription: Subscription;\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {ErrorStackService} errorStack\n     */\n    constructor(private errorStack: ErrorStackService) { }\n\n    /**\n     * ngOnInit method\n     * @returns void\n     */\n    ngOnInit() {\n        this.errorSubscription = this.errorStack.errors.subscribe((error: NamedErrorType) => {\n            this.errors = [error, ...this.errors];\n        });\n    }\n\n    /**\n     * ngOnDestroy method\n     * @returns void\n     */\n    ngOnDestroy() {\n        this.errorSubscription.unsubscribe();\n    }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableModule } from 'primeng/table';\nimport { ButtonModule, TooltipModule } from 'primeng';\n\nimport { ErrorStackComponent } from './error-stack.component';\nimport {\n    ErrorProvider,\n    ErrorStackService,\n    ErrorStackProviderService,\n    ClipboardModule\n} from '@nuvem/angular-base';\n\n/**\n * Class ErrorStackModule\n * @class\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        TableModule,\n        ButtonModule,\n        TooltipModule,\n        ClipboardModule\n    ],\n    declarations: [\n        ErrorStackComponent\n    ],\n    providers: [\n        ErrorStackService,\n        {\n            provide: ErrorProvider,\n            useClass: ErrorStackProviderService,\n            multi: true\n        }\n    ],\n    exports: [\n        ErrorStackComponent\n    ]\n})\nexport class ErrorStackModule {\n}\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { CrudService } from \"./crud-service.service\";\nimport { ActivatedRoute } from \"@angular/router\";\n\n@Component({\n    selector: 'nCrudForm',\n    templateUrl: './crud-form.component.html',\n})\nexport class CrudFormComponent implements OnInit {\n\n    @Input() form: FormGroup;\n\n    @Input() service: CrudService<any, any>;\n\n    @Input() disableSave = false;\n\n    action: string;\n\n    listRoute: string = \"../../list\";\n\n    constructor(private route: ActivatedRoute) { }\n\n    ngOnInit(): void {\n        this.route.paramMap.subscribe((params) => {\n            this.action = params.get('action');\n\n            if (params.get('id')) {\n                this.route.data.subscribe((data) => {\n                    if (data.value) {\n                        this.form.patchValue(data.value);\n                    }\n                });\n            } else {\n                this.listRoute = \"../list\";\n            }\n            if (this.action === \"view\") {\n                this.form.disable();\n            } else if (this.form.disabled) {\n                this.form.enable();\n            }\n        });\n    }\n\n}\n","import { InjectionToken } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nexport const CRUD_SERVICE = new InjectionToken<CrudService<any, any>>(\"CRUD_SERVICE\");\n\nexport interface CrudService<I, E> {\n\n    uri: string;\n\n    save(entidade: E): Observable<E>;\n\n    edit(entidade: E): Observable<E>;\n\n    find(id: I): Observable<E>;\n\n    delete(id: I): Observable<E>;\n\n    findAll(entidade: E): Observable<E>;\n\n}\n","import {\n    Component, OnInit, Inject, Input, Output, EventEmitter, AfterContentInit,\n    ViewChild, ContentChildren, QueryList, ChangeDetectorRef\n} from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { CrudService, CRUD_SERVICE } from \"./crud-service.service\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Column } from '../datatable/p-column.directive';\nimport { DatatableComponent } from '../datatable/datatable.component'\nimport { DatatableClickEvent } from '../datatable/datatable-click-event'\n\nimport { ConfirmationService } from 'primeng/api';\nimport { Url } from 'url';\n\n@Component({\n    selector: 'nCrudList',\n    templateUrl: './crud-list.component.html'\n})\nexport class CrudListComponent implements OnInit, AfterContentInit {\n\n    @Input() form: FormGroup;\n\n    @Input() action: string = \"findAll\";\n\n    @Input() findLabel: string = \"Pesquisar\";\n\n    @Input() service: CrudService<any, any>;\n\n    @Input() url: string;\n\n    @Input() disableSave = false;\n\n    @Input() disableEdit = false;\n\n    @Input() disableView = false;\n\n    @Input() disableDelete = false;\n\n    @Input() datatableExtraParams: any;\n\n    @Output() find: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild('datatable', { static: true }) datatable: DatatableComponent;\n\n    @ContentChildren(Column) columns: QueryList<Column>;\n\n    result: any[];\n\n    constructor(\n        @Inject(CRUD_SERVICE)\n        public crudService: CrudService<any, any>,\n        private confirmationService: ConfirmationService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) {  }\n\n    ngOnInit(): void {\n        if (this.service) {\n            this.crudService = this.service;\n        }\n        if (!this.url) {\n            this.url = this.crudService.uri\n        }\n    }\n\n    datatableClick(event: DatatableClickEvent) {\n        if (event.selection) {\n            switch (event.button) {\n                case \"edit\":\n                case \"view\":\n                    this.router.navigate([`../${event.button}`, event.selection.id], { relativeTo: this.route });\n                    break;\n                case \"delete\":\n                    this.confirmationService.confirm({\n                        message: 'VocÃª tem certeza que deseja excluir o registro?',\n                        accept: () => this.crudService.delete(event.selection.id)\n                            .subscribe(() => this.datatable.filter())\n                    });\n                    break;\n            }\n        }\n    }\n\n    findAll(event: any) {\n        if (this.find.observers.length) {\n            this.find.emit(this.form.value);\n        } else {\n            this.datatable.filterParams = {};\n            Object.keys(this.form.value).forEach(element => {\n                let value = this.form.value[element];\n                if (value) {\n                    this.datatable.filterParams[element] =\n                        value instanceof Date ? JSON.stringify(value).replace(/\"/g, \"\") : value;\n                }\n            });\n            this.datatable.filter();\n        }\n    }\n\n    ngAfterContentInit() {\n        const datatableNgAfterContentInit = this.datatable.pDatatableComponent.ngAfterContentInit;\n        this.datatable.pDatatableComponent.ngAfterContentInit = () => {\n            this.datatable.pDatatableComponent.columns = this.columns.toArray();\n            datatableNgAfterContentInit.call(this.datatable.pDatatableComponent);\n        };\n    }\n\n    ngAfterViewInit() {\n        for (let i in this.datatableExtraParams) {\n            this.datatable[i] = this.datatableExtraParams[i];\n        }\n    }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { CrudService, CRUD_SERVICE } from \"./crud-service.service\";\n\n@Injectable()\nexport class CrudResolveGuard implements Resolve<any> {\n\n  constructor(@Inject(CRUD_SERVICE) private crudService: CrudService<any, any>) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    return this.crudService.find(route.paramMap.get('id'));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HTTP_INTERCEPTORS, HttpResponse\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { PageNotificationService } from '../page-notification/page-notification.service';\n\nenum STATUS { OK=200, CREATED=201  }\n\n@Injectable({ providedIn: 'root' })\nexport class SuccessMessageHandlerInterceptor implements HttpInterceptor {\n\n  constructor(private notification: PageNotificationService) {\n\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n        tap((event) => {\n          if (event instanceof HttpResponse) {\n            if (event.headers.has(\"X-nuvem-alert\")) {\n              this.notification.addSuccessMessage(event.headers.get(\"X-nuvem-alert\"));\n            } else if ((event.status === STATUS.OK || event.status === STATUS.CREATED) && req.method != \"GET\") {\n              this.notification.addSuccessMessage(\"OperaÃ§Ã£o realizada com sucesso!\");\n            }\n          }\n        })\n    );\n  }\n\n}\n\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: SuccessMessageHandlerInterceptor, multi: true },\n];\n","import { CrudService } from \"./crud-service.service\";\nimport { Observable } from \"rxjs\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\n\nexport class CrudServiceNuvem<I, E> implements CrudService<I, E> {\n\n    constructor(public uri: string, protected http: HttpClient) {\n    }\n\n    save(entity: E): Observable<E> {\n        return this.http.post<E>(this.uri, entity);\n    }\n\n    edit(entity: E): Observable<E> {\n        return this.http.put<E>(this.uri, entity);\n    }\n\n    find(id: I): Observable<E> {\n        return this.http.get<E>(`${this.uri}/${id}`);\n    }\n\n    delete(id: I): Observable<E> {\n        return this.http.delete<E>(`${this.uri}/${id}`);\n    }\n\n    findAll(entity: E): Observable<E> {\n        let params = new HttpParams();\n\n        for (let field in entity) {\n            params = params.append(field, <any> entity[field]);\n        }\n\n        return this.http.get<E>(`${this.uri}`, { params: params });\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MenuItem } from 'primeng';\n\nexport enum MenuOrientation {\n    STATIC,\n    OVERLAY,\n    SLIM,\n    HORIZONTAL\n}\n\n/**\n * Class MenuService\n * @class\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class MenusService {\n\n    layoutMode: MenuOrientation = MenuOrientation.STATIC;\n\n    menuHoverActive: boolean;\n\n    itens: MenuItem[] = [];\n\n    resetMenu: boolean;\n\n    isMobile: boolean;\n\n    isTablet: boolean;\n\n    isDesktop: boolean;\n\n    overlayMenuActive: boolean;\n\n    staticMenuMobileActive: boolean;\n\n    staticMenuDesktopInactive: boolean;\n\n    isOverlay() {\n        return this.layoutMode === MenuOrientation.OVERLAY;\n    }\n\n    isHorizontal() {\n        return this.layoutMode === MenuOrientation.HORIZONTAL;\n    }\n\n    isSlim() {\n        return this.layoutMode === MenuOrientation.SLIM;\n    }\n\n    changeToStaticMenu() {\n        this.layoutMode = MenuOrientation.STATIC;\n    }\n\n    changeToOverlayMenu() {\n        this.layoutMode = MenuOrientation.OVERLAY;\n    }\n\n    changeToHorizontalMenu() {\n        this.layoutMode = MenuOrientation.HORIZONTAL;\n    }\n\n    changeToSlimMenu() {\n        this.layoutMode = MenuOrientation.SLIM;\n    }\n\n}\n","import { Injector, Input, OnInit, ViewChild, AfterViewInit, ElementRef, Output, EventEmitter, Directive } from \"@angular/core\";\nimport { WrappedFormControlSuperclass } from \"@nuvem/angular-base\";\nimport { ControlContainer } from \"@angular/forms\";\n\n@Directive({\n    selector: \"[nField]\"\n})\nexport class FieldComponent<OuterType, InnerType = OuterType>\n    extends WrappedFormControlSuperclass<OuterType, InnerType>\n    implements OnInit, AfterViewInit {\n\n    @Input() form: string;\n\n    @Input() formControlName: string;\n\n    @Input() extraParams: any;\n\n    @Input() required: boolean;\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output() onSelect: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild(\"input\", { static: false }) input: any;\n\n    private _name: string;\n\n    private _label: string;\n\n    get name(): string {\n        return this._name ? this._name : this.formControlName;\n    }\n\n    @Input()\n    set name(value: string) {\n        this._name = value;\n    }\n\n    get label(): string {\n        return this.required ? `${this._label}*` : this._label;\n    }\n\n    @Input()\n    set label(value: string) {\n        this._label = value;\n    }\n\n    constructor(\n        private controlContainer: ControlContainer,\n        private injector: Injector) {\n        super(injector);\n    }\n\n    ngOnInit() {\n        this.setValidators();\n        this.setRequired();\n    }\n\n    setRequired() {\n        if (this.required) {\n            if (this.input instanceof ElementRef) {\n                this.input.nativeElement.required = true;\n            } else {\n                this.input.required = true;\n            }\n        }\n    }\n\n    setElementRefAttr(attr: string, value: any) {\n        if (value && this.input instanceof ElementRef) {\n            this.input.nativeElement[attr] = value;\n        }\n    }\n\n    setFormControlValidators() {\n        if (this.controlContainer && this.formControlName) {\n            let validator = this.controlContainer.control.get(this.formControlName).validator;\n            if (validator) {\n                this.formControl.setValidators(validator);\n            }\n        }\n    }\n\n\n    setValidators() {\n        if (this.controlContainer && this.formControlName) {\n            let validator = this.controlContainer.control.get(this.formControlName).validator;\n            if (validator) {\n                this.formControl.setValidators(validator);\n            }\n        }\n    }\n\n    ngAfterViewInit() {\n        for (let i in this.extraParams) {\n            this.input[i] = this.extraParams[i];\n        }\n    }\n\n    onBlurEvent(event) {\n        this.onBlur.emit(event);\n    }\n\n    onSelectEvent(event) {\n        this.onSelect.emit(event);\n    }\n\n    onFocusEvent(event) {\n        this.onFocus.emit(event);\n    }\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\n\n@Component({\n    selector: \"[nInputText]\",\n    templateUrl: \"./input-text.component.html\",\n    providers: [ provideValueAccessor(InputTextComponent) ],\n})\nexport class InputTextComponent extends FieldComponent<string> implements OnInit {\n\n    @Input() minLength: number;\n\n    @Input() maxLength: number;\n\n    @Input() min: number;\n\n    @Input() max: number;\n\n    @Input() pattern: string | RegExp;\n\n    @Input() type: string = \"text\";\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.setElementRefAttr(\"min\", this.min);\n        this.setElementRefAttr(\"max\", this.max);\n        this.setElementRefAttr(\"minLength\", this.minLength);\n        this.setElementRefAttr(\"maxLength\", this.maxLength);\n        this.setElementRefAttr(\"pattern\", this.pattern);\n    }\n\n}\n","import { LocaleSettings } from 'primeng';\n\nexport const CALENDAR_LOCALE: LocaleSettings = {\n    firstDayOfWeek: 0,\n    dayNames: [\"Domingo\", \"Segunda\", \"TerÃ§a\", \"Quarta\", \"Quinta\", \"Sexta\", \"SÃ¡bado\"],\n    dayNamesShort: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sab\"],\n    dayNamesMin: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\n    monthNames: [\"Janeiro\", \"Fevereiro\", \"MarÃ§o\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n    monthNamesShort: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\n    today: 'Hoje',\n    clear: 'Limpar',\n    dateFormat: 'dd/mm/yy',\n    weekHeader: 'Semana'\n};\n","import { Component, Input } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\nimport { CALENDAR_LOCALE } from './calendar-locale';\n@Component({\n    selector: \"[nCalendar]\",\n    templateUrl: \"./calendar.component.html\",\n    providers: [ provideValueAccessor(CalendarComponent) ],\n})\nexport class CalendarComponent extends FieldComponent<string, Date> {\n\n    @Input()\n    maxDate: Date = null;\n\n    @Input()\n    yearRange: string = null;\n\n    @Input()\n    monthNavigator = false;\n\n    @Input()\n    yearNavigator = false;\n\n    @Input()\n    locale = CALENDAR_LOCALE;\n\n    protected outerToInner(value: string): Date {\n        return value ? new Date(value) : null;\n    }\n\n}\n","import { Component, Input } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\"\nimport { FieldComponent } from \"../field.component\";\n\n@Component({\n    selector: \"[nTextArea]\",\n    templateUrl: \"./text-area.component.html\",\n    providers: [ provideValueAccessor(TextAreaComponent) ],\n})\nexport class TextAreaComponent extends FieldComponent<string> {\n\n    @Input() autoResize: boolean = false;\n\n    @Input() rows: string;\n\n    @Input() cols: string;\n\n    @Input() minLength: number;\n\n    @Input() maxLength: number;\n\n}\n","import { Component, Input, AfterViewInit, Output, EventEmitter, OnInit } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\nimport { CrudService } from \"../../crud-service.service\";\n\n@Component({\n    selector: \"[nDropdown]\",\n    templateUrl: \"./dropdown.component.html\",\n    providers: [provideValueAccessor(DropdownComponent)],\n})\nexport class DropdownComponent extends FieldComponent<any> implements AfterViewInit, OnInit {\n\n    @Input() optionLabel: string;\n\n    @Input() virtualScroll = false;\n\n    @Input() filter = false;\n\n    @Input() itemSize = 30;\n\n    @Input() service: CrudService<any, any>;\n\n    @Input() options: any[] = [];\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter<any>();\n\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        if (this.service) {\n            this.service.findAll(null).subscribe(data => {\n                this.options = data;\n            });\n        }\n    }\n\n    onChangeEvent(event): void {\n        this.onChange.emit(event);\n    }\n\n    protected outerToInner(value: any): any {\n        if (value && value.id) {\n            this.service.find(value.id).subscribe((data) => {\n                this.formControl.setValue(data);\n            });\n        }\n        return value;\n    }\n\n}\n","import { Component, Input } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\n\n@Component({\n    selector: \"[nInputMask]\",\n    templateUrl: \"./input-mask.component.html\",\n    providers: [ provideValueAccessor(InputMaskComponent) ],\n})\nexport class InputMaskComponent extends FieldComponent<string> {\n\n    @Input()\n    mask: string;\n\n    @Input()\n    placeholder: string;\n\n}\n","import { Component, Injector } from \"@angular/core\";\n\nimport { Subscription } from \"rxjs\";\n\nimport { provideValueAccessor, FormNotificationService, FormNotification, FieldFormNotification } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\nimport { ControlContainer } from '@angular/forms';\n\n@Component({\n    selector: \"[nCheck]\",\n    templateUrl: \"./check.component.html\",\n    providers: [ provideValueAccessor(CheckComponent) ],\n})\nexport class CheckComponent extends FieldComponent<string> {\n\n    private subscription: Subscription;\n\n    message: String;\n\n    /**\n     * MÃ©todo construtor responsÃ¡vel por carregar o serviÃ§o de validaÃ§Ã£o\n     * @param formNotificationService\n     */\n    constructor(\n        controlContainer: ControlContainer,\n        injector: Injector,\n        protected formNotificationService: FormNotificationService) {\n        super(controlContainer, injector);\n    }\n\n    /**\n     * MÃ©todo Inicial para subscriÃ§Ã£o no endpoint responsÃ¡vel por validar o formulÃ¡rio\n     */\n    ngOnInit(): void {\n        super.ngOnInit()\n        this.subscription = this.formNotificationService\n            .notifications(this.form, this.name)\n            .subscribe((notification: FormNotification) => {\n                if (notification instanceof FieldFormNotification) {\n                    this.message = notification.message;\n                } else {\n                    this.message = null;\n                }\n            });\n    }\n\n    /**\n     * MÃ©todo responsÃ¡vel por realizar a saida das subscriÃ§Ãµes do endpont de validaÃ§Ã£o\n     */\n    ngOnDestroy(): void {\n        super.ngOnDestroy()\n        this.subscription.unsubscribe();\n    }\n\n\n}\n","import { Component, OnInit, Inject, Input, Output, EventEmitter } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { CrudService, CRUD_SERVICE } from \"./crud-service.service\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\n@Component({\n    selector: 'nForm',\n    templateUrl: './form.component.html'\n})\nexport class FormComponent implements OnInit {\n\n    @Input() form: FormGroup;\n\n    @Input() route: [];\n\n    @Input() action: string = \"save\";\n\n    @Input() saveLabel: string = \"Salvar\";\n\n    @Input() service: CrudService<any, any>;\n\n    @Input() disableSave: boolean = false;\n\n    @Output() save: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output() reset: EventEmitter<any> = new EventEmitter<any>();\n    constructor(\n        @Inject(CRUD_SERVICE)\n        private crudService: CrudService<any, any>,\n        private activatedRoute: ActivatedRoute,\n        private router: Router\n    ) {}\n\n    ngOnInit(): void {\n        if (this.service) {\n            this.crudService = this.service;\n        }\n    }\n\n    submit() {\n        if (this.save.observers.length) {\n            this.save.emit(this.form.value);\n        } else {\n            this.crudService[this.action](this.form.value)\n            .subscribe(() => {\n                if (this.route) {\n                    this.router.navigate(this.route, { relativeTo: this.activatedRoute });\n                } else if (this.reset.observers.length) {\n                    this.reset.emit(this.form);\n                } else {\n                    this.form.reset();\n                }\n            });\n        }\n    }\n\n}\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n    selector: 'nValidationMessage',\n    templateUrl: './validation-message.component.html'\n})\nexport class ValidationMessageComponent {\n\n    @Input() control: any;\n\n}\n","import { Component, Input, TemplateRef } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\nimport { CrudService } from \"../../crud-service.service\";\n\n@Component({\n    selector: \"[nAutoComplete]\",\n    templateUrl: \"./auto-complete.component.html\",\n    providers: [provideValueAccessor(AutoCompleteComponent)],\n})\nexport class AutoCompleteComponent extends FieldComponent<any> {\n\n    @Input() field: string;\n\n    @Input() virtualScroll: boolean = false;\n\n    @Input() itemSize: number = 30;\n\n    @Input() service: CrudService<any, any>;\n\n    results: any[];\n\n    selectItem(option) {\n        this.formControl.setValue(option);\n    }\n\n    findAll(event: any) {\n        let query = {};\n        query[this.field] = event.query;\n        this.service.findAll(query).subscribe(data => {\n            this.results = data;\n        });\n    }\n\n    protected outerToInner(value: any): any {\n        if (value && value.id && !value[this.field]) {\n            this.service.find(value.id).subscribe((data) => {\n                this.formControl.setValue(data);\n            });\n        }\n        return value;\n    }\n\n}\n","import { Component, ElementRef, Renderer2, ChangeDetectorRef, IterableDiffers, Input, forwardRef } from '@angular/core';\nimport { AutoComplete as AutoCompletePrimeng } from 'primeng/autocomplete';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AutoCompleteCustomComponent),\n    multi: true\n  };\n\n@Component({\n    selector: 'p-autoCompleteCustom',\n    templateUrl: './auto-complete-custom.component.html',\n    providers: [AUTOCOMPLETE_VALUE_ACCESSOR]\n})\nexport class AutoCompleteCustomComponent extends AutoCompletePrimeng {\n\n    @Input() virtualScroll: boolean;\n\n    @Input() itemSize: number;\n\n    constructor(public el: ElementRef, public renderer: Renderer2, public cd: ChangeDetectorRef, public differs: IterableDiffers) {\n        super(el, renderer, cd, differs)\n    }\n\n}\n","import { Component, Input, Output, TemplateRef, EventEmitter } from \"@angular/core\";\n\n@Component({\n    selector: 'p-autoCompleteItem',\n    template: `\n        <li role=\"option\" [ngClass]=\"{'ui-autocomplete-list-item ui-corner-all':true,'ui-state-highlight':(highlightOption==option)}\"\n            (mouseenter)=\"highlightOptionChange.emit(option)\" (mouseleave)=\"highlightOptionChange.emit(null)\"\n            [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem($event)\"\n            [ngStyle]=\"{'height': itemSize + 'px', 'display': 'table', 'width': '100%'}\">\n            <span *ngIf=\"!template\">{{resolvedFieldData}}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: {$implicit: option, index: index}\"></ng-container>\n        </li>\n    `\n})\nexport class AutoCompleteItem {\n\n    @Input() option: any;\n\n    @Input() resolvedFieldData: any;\n\n    @Input() highlightOption: any;\n\n    @Output() highlightOptionChange = new EventEmitter<any>();\n\n    @Input() index: number;\n\n    @Input() itemSize: number;\n\n    @Input() template: TemplateRef<any>;\n\n    @Output() onClick = new EventEmitter();\n\n    selectItem(event: Event): void {\n        this.onClick.emit({\n            originalEvent: event,\n            option: this.option\n        });\n    }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\nimport { CrudService } from \"../../crud-service.service\";\nimport { forkJoin } from 'rxjs';\n\n@Component({\n    selector: \"[nAutoCompleteMultiple]\",\n    templateUrl: \"./auto-complete-multiple.component.html\",\n    providers: [provideValueAccessor(AutoCompleteMultipleComponent)],\n})\nexport class AutoCompleteMultipleComponent extends FieldComponent<any[]> {\n\n    @Input() field: string;\n\n    @Input() service: CrudService<any, any>;\n\n    @Input() virtualScroll: boolean = false;\n\n    @Input() itemSize: number = 30;\n\n    results: any[];\n\n    findAll(event: any) {\n        let query = {};\n        query[this.field] = event.query;\n        this.service.findAll(query).subscribe(data => {\n            this.results = data;\n        });\n    }\n\n    protected outerToInner(value: any[]): any[] {\n        if (value && value.length > 0 && !value[0][this.field]) {\n            let obs: any[] = [];\n            value.forEach(element => {\n                if (element && element.id) {\n                    obs.push(this.service.find(element.id));\n                }\n            });\n            forkJoin(obs).subscribe((data) => {\n                this.formControl.setValue(data);\n            });\n        }\n        return value;\n    }\n\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n    name: \"check\"\n})\nexport class CheckPipe implements PipeTransform {\n\n    transform(value: any, ...args: any[]): any {\n        return value ? \"Sim\" : \"NÃ£o\";\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { httpInterceptorProviders } from './success-message-handler.interceptor';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextComponent } from './components/input-text/input-text.component';\n\nimport { CalendarModule } from 'primeng/calendar';\nimport { CalendarComponent } from './components/calendar/calendar.component';\n\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { TextAreaComponent } from './components/text-area/text-area.component';\n\nimport { DropdownModule } from 'primeng/dropdown';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\n\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputMaskComponent } from './components/input-mask/input-mask.component';\n\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { CheckComponent } from './components/check/check.component';\n\nimport { FormNotificationModule } from '../form-notification/form-notification.module';\nimport { ButtonModule } from 'primeng/button';\nimport { FormComponent } from './form.component';\n\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmationService } from 'primeng/api';\nimport { CrudListComponent } from './crud-list.component';\n\nimport { ValidationMessageComponent } from './components/validation-message/validation-message.component';\n\nimport { CrudFormComponent } from './crud-form.component';\n\nimport { FieldComponent } from './components/field.component';\n\nimport { DatatableModule } from '../datatable/datatable.module';\n\nimport { RouterModule } from '@angular/router';\n\nimport { AutoCompleteComponent } from './components/auto-complete/auto-complete.component';\nimport { AutoCompleteCustomComponent } from './components/auto-complete/auto-complete-custom.component';\nimport { AutoCompleteItem } from './components/auto-complete/auto-complete-item.component';\nimport { AutoCompleteMultipleComponent } from './components/auto-complete-multiple/auto-complete-multiple.component';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { AutoCompleteModule } from 'primeng';\nimport { CheckPipe } from './components/check/check.pipe';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FormNotificationModule,\n        InputTextModule,\n        InputTextareaModule,\n        CalendarModule,\n        AutoCompleteModule,\n        ButtonModule,\n        DatatableModule,\n        HttpClientModule,\n        RouterModule,\n        ConfirmDialogModule,\n        DropdownModule,\n        ScrollingModule,\n        InputMaskModule,\n        RadioButtonModule,\n    ],\n    declarations: [\n        CalendarComponent,\n        InputTextComponent,\n        TextAreaComponent,\n        FormComponent,\n        AutoCompleteComponent,\n        AutoCompleteMultipleComponent,\n        CrudListComponent,\n        CrudFormComponent,\n        FieldComponent,\n        ValidationMessageComponent,\n        DropdownComponent,\n        AutoCompleteItem,\n        AutoCompleteCustomComponent,\n        CheckComponent,\n        InputMaskComponent,\n        CheckPipe,\n    ],\n    exports: [\n        CalendarComponent,\n        InputTextComponent,\n        TextAreaComponent,\n        FormComponent,\n        AutoCompleteComponent,\n        AutoCompleteMultipleComponent,\n        CrudListComponent,\n        CrudFormComponent,\n        FieldComponent,\n        ValidationMessageComponent,\n        DropdownComponent,\n        CheckComponent,\n        InputMaskComponent,\n        CheckPipe,\n    ],\n    providers: [\n        httpInterceptorProviders,\n        ConfirmationService,\n    ]\n})\nexport class CrudModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MenuItem } from 'primeng';\n\n@Injectable()\nexport class BreadcrumbService {\n\n    private readonly itemsSource = new Subject<MenuItem[]>();\n\n    itemsHandler = this.itemsSource.asObservable();\n\n    setItems(items: MenuItem[]) {\n        this.itemsSource.next(items);\n    }\n\n    reset() {\n        this.itemsSource.next([]);\n    }\n}\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { MenuItem, MessageService, Message } from 'primeng';\nimport { BreadcrumbService } from './breadcrumb.service';\nimport { AccessbilityService } from '@nuvem/angular-base';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\nimport { filter, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n    selector: 'breadcrumb',\n    templateUrl: './breadcrumb.component.html',\n    styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent implements OnInit, AfterViewInit {\n\n    subscription: Subscription;\n\n    items: MenuItem[];\n\n    highContrastEnabled = false;\n\n    constructor(\n        private readonly router: Router,\n        private readonly activatedRoute: ActivatedRoute,\n        private readonly breadcrumbService: BreadcrumbService,\n        private readonly messages: MessageService,\n        private readonly accessibilityService: AccessbilityService\n    ) {\n        this.subscription = breadcrumbService.itemsHandler.subscribe(response => {\n            this.items = response;\n        });\n    }\n\n    ngOnInit() {\n        this.router.events.pipe(filter(\n            (event: any) => event instanceof NavigationEnd),\n            distinctUntilChanged(),\n        ).subscribe((event) => {\n            this.items = this.buildBreadCrumb(this.activatedRoute.root);\n        })\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    enableHighContrast() {\n        this.highContrastEnabled = true;\n        this.accessibilityService.enableHighContrast();\n    }\n\n    disableHighContrast() {\n        this.highContrastEnabled = false;\n        this.accessibilityService.disableHighContrast();\n    }\n\n    increaseFontSize() {\n        this.accessibilityService.increaseFontSize();\n    }\n\n    decreaseFontSize() {\n        this.accessibilityService.decreaseFontSize();\n    }\n\n    ngAfterViewInit() {\n        this.messages.messageObserver.subscribe(\n            (msg: Message) => {\n                this.accessibilityService.addAccessibilityMessages({ severity: msg.severity });\n            }\n        );\n        this.accessibilityService.addAccessibilityIcons();\n    }\n\n    buildBreadCrumb(route: ActivatedRoute, url: string = '', breadcrumbs: MenuItem[] = []): MenuItem[] {\n\n        let label = route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : '';\n        let path = route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';\n\n        const lastRoutePart = path.split('/').pop();\n        const isDynamicRoute = lastRoutePart.startsWith(':');\n\n        if (isDynamicRoute && !!route.snapshot) {\n            for (let key in route.snapshot.params) {\n                path = path.replace(`:${key}`, route.snapshot.params[key]);\n            }\n            label = Object.values(route.snapshot.params).join(' ');\n        }\n\n        const nextUrl = path ? `${url}/${path}` : url;\n\n        const menuItem: MenuItem = {\n            \"label\": label,\n            \"routerLink\": nextUrl\n        }\n\n        const newBreadcrumbs = menuItem.label ? [...breadcrumbs, menuItem] : [...breadcrumbs];\n\n        if (route.firstChild) {\n            return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);\n        }\n\n        return newBreadcrumbs;\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreadcrumbComponent } from './breadcrumb.component';\nimport { BreadcrumbService } from './breadcrumb.service';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n    declarations: [BreadcrumbComponent],\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    exports: [\n        BreadcrumbComponent\n    ],\n    providers: [\n        BreadcrumbService\n    ]\n})\nexport class BreadcrumbModule { }\n","import { Component, Input } from '@angular/core';\nimport { MenusService } from './menu.service';\n\n@Component({\n    selector: 'app-menu',\n    templateUrl: './menu.component.html',\n})\nexport class MenuComponent {\n\n    constructor(public menuService: MenusService) {}\n\n}\n\n","import { Component, Input } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { MenuItem } from 'primeng';\nimport { MenusService } from './menu.service';\n\n@Component({\n    selector: '[submenu]',\n    templateUrl: './submenu.component.html',\n    animations: [\n        trigger('children', [\n            state('hiddenAnimated', style({\n                height: '0px'\n            })),\n            state('visibleAnimated', style({\n                height: '*'\n            })),\n            state('visible', style({\n                height: '*',\n                'z-index': 100\n            })),\n            state('hidden', style({\n                height: '0px',\n                'z-index': '*'\n            })),\n            transition('visibleAnimated => hiddenAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),\n            transition('hiddenAnimated => visibleAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ])\n    ]\n})\nexport class SubMenuComponent {\n\n    @Input() item: MenuItem;\n\n    @Input() root: boolean;\n\n    @Input() visible: boolean;\n\n    _reset: boolean;\n\n    _parentActive: boolean;\n\n    activeIndex: number;\n\n    constructor(public menuService: MenusService) { }\n\n    /**\n     * Alterar o menu root entre aberto e fechado\n     */\n    private rootMenuToggle() {\n        if (this.root) {\n            this.menuService.menuHoverActive = !this.menuService.menuHoverActive;\n        }\n    }\n\n    /**\n     * Activa o menu por index e desativa o item ativo\n     * @param index\n     */\n    private activeMenuByIndex(index: number) {\n        this.activeIndex = (this.activeIndex === index) ? null : index;\n        return this.activeIndex;\n    }\n\n    /**\n     * Verifica se foi informado um comando para o item de menu e executa caso necessÃ¡rio\n     * @param item menu\n     */\n    private execCommand(event: Event, item: MenuItem) {\n        if (item.command) {\n            item.command({ 'originalEvent': event, 'item': item });\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Esconte o menu caso este nÃ£o possua itens\n     * @param item menu\n     */\n    private hideMenu(item: MenuItem) {\n        if (!item.items) {\n            if (this.menuService.isHorizontal() || this.menuService.isSlim()) {\n                this.menuService.resetMenu = true;\n            } else {\n                this.menuService.resetMenu = false;\n            }\n\n            this.menuService.overlayMenuActive = false;\n            this.menuService.staticMenuMobileActive = false;\n            this.menuService.menuHoverActive = !this.menuService.menuHoverActive;\n\n            return true;\n        }\n\n        return false;\n    }\n\n    itemClick(event: Event, item: MenuItem, index: number) {\n\n        this.rootMenuToggle();\n\n        if (item.disabled) {\n            event.preventDefault();\n            return false;\n        }\n\n        this.activeMenuByIndex(index);\n        this.execCommand(event, item);\n\n        if (item.items || (!item.url && !item.routerLink)) {\n            event.preventDefault();\n        }\n\n        this.hideMenu(item);\n\n        return true;\n    }\n\n    onMouseEnter(index: number) {\n        if (this.root && this.menuService.menuHoverActive && (this.menuService.isHorizontal() || this.menuService.isSlim())) {\n            this.activeIndex = index;\n        }\n    }\n\n    isActive(index: number): boolean {\n        return this.activeIndex === index;\n    }\n\n    @Input() get reset(): boolean {\n        return this._reset;\n    }\n\n    set reset(val: boolean) {\n        this._reset = val;\n\n        if (this._reset && (this.menuService.isHorizontal() || this.menuService.isSlim())) {\n            this.activeIndex = null;\n        }\n    }\n\n    @Input() get parentActive(): boolean {\n        return this._parentActive;\n    }\n\n    set parentActive(val: boolean) {\n        this._parentActive = val;\n\n        if (!this._parentActive) {\n            this.activeIndex = null;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MenuComponent } from './menu.component';\nimport { SubMenuComponent } from './submenu.component';\nimport { RouterModule } from '@angular/router';\nimport { MenusService } from './menu.service';\n\n@NgModule({\n    declarations: [\n        MenuComponent,\n        SubMenuComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    exports: [\n        MenuComponent,\n        SubMenuComponent\n    ],\n    providers: [\n        MenusService\n    ]\n})\nexport class MenuModule { }\n","import { Route } from '@angular/router';\n\nimport { CrudResolveGuard } from './crud-resolve.guard';\n\nexport function crudRouteBuilder(route: string, parent: any, list: any, form: any): Route {\n    return   {\n        path: route,\n        component: parent,\n        data: { breadcrumb: route },\n        children: [\n            {\n                path: 'list',\n                component: list,\n                data: { breadcrumb: 'list' },\n            },\n            {\n                path: ':action',\n                component: form,\n                data: { breadcrumb: ':action' },\n            },\n            {\n                path: ':action/:id',\n                component: form,\n                resolve: {\n                    value: CrudResolveGuard\n                },\n                data: { breadcrumb: ':action' },\n            }\n        ]\n    }\n\n\n}\n"]}