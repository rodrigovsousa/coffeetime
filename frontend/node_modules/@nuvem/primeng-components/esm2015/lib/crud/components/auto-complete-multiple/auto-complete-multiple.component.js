import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../../form-notification/form-notification.component';
import * as ɵngcc2 from '../auto-complete/auto-complete-custom.component';
import * as ɵngcc3 from '@angular/forms';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '../validation-message/validation-message.component';

const _c0 = ["nAutoCompleteMultiple", ""];
function AutoCompleteMultipleComponent_nValidationMessage_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "nValidationMessage", 6);
} if (rf & 2) {
    const ctx_r1050 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("control", ctx_r1050.formControl);
} }
const _c1 = ["*"];
var AutoCompleteMultipleComponent_1;
import { __decorate } from "tslib";
import { Component, Input } from "@angular/core";
import { provideValueAccessor } from "@nuvem/angular-base";
import { FieldComponent } from "../field.component";
import { forkJoin } from 'rxjs';
let AutoCompleteMultipleComponent = AutoCompleteMultipleComponent_1 = class AutoCompleteMultipleComponent extends FieldComponent {
    constructor() {
        super(...arguments);
        this.virtualScroll = false;
        this.itemSize = 30;
    }
    findAll(event) {
        let query = {};
        query[this.field] = event.query;
        this.service.findAll(query).subscribe(data => {
            this.results = data;
        });
    }
    outerToInner(value) {
        if (value && value.length > 0 && !value[0][this.field]) {
            let obs = [];
            value.forEach(element => {
                if (element && element.id) {
                    obs.push(this.service.find(element.id));
                }
            });
            forkJoin(obs).subscribe((data) => {
                this.formControl.setValue(data);
            });
        }
        return value;
    }
};
AutoCompleteMultipleComponent.ɵfac = function AutoCompleteMultipleComponent_Factory(t) { return ɵAutoCompleteMultipleComponent_BaseFactory(t || AutoCompleteMultipleComponent); };
AutoCompleteMultipleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AutoCompleteMultipleComponent, selectors: [["", "nAutoCompleteMultiple", ""]], inputs: { virtualScroll: "virtualScroll", itemSize: "itemSize", field: "field", service: "service" }, features: [ɵngcc0.ɵɵProvidersFeature([provideValueAccessor(AutoCompleteMultipleComponent_1)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 7, vars: 11, consts: [["form-notification", "", 1, "md-inputfield", 3, "name", "form"], ["notification", ""], [3, "formControl", "suggestions", "field", "virtualScroll", "itemSize", "multiple", "completeMethod", "onBlur", "onSelect", "onFocus"], ["input", ""], [3, "for", "innerHTML"], [3, "control", 4, "ngIf"], [3, "control"]], template: function AutoCompleteMultipleComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "p-autoCompleteCustom", 2, 3);
        ɵngcc0.ɵɵlistener("completeMethod", function AutoCompleteMultipleComponent_Template_p_autoCompleteCustom_completeMethod_2_listener($event) { return ctx.findAll($event); })("onBlur", function AutoCompleteMultipleComponent_Template_p_autoCompleteCustom_onBlur_2_listener($event) { return ctx.onBlurEvent($event); })("onSelect", function AutoCompleteMultipleComponent_Template_p_autoCompleteCustom_onSelect_2_listener($event) { return ctx.onSelectEvent($event); })("onFocus", function AutoCompleteMultipleComponent_Template_p_autoCompleteCustom_onFocus_2_listener($event) { return ctx.onFocusEvent($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "label", 4);
        ɵngcc0.ɵɵtemplate(5, AutoCompleteMultipleComponent_nValidationMessage_5_Template, 1, 1, "nValidationMessage", 5);
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r1048 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("form", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("formControl", ctx.formControl)("suggestions", ctx.results)("field", ctx.field)("virtualScroll", ctx.virtualScroll)("itemSize", ctx.itemSize)("multiple", true);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("for", ctx.name)("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !_r1048.message);
    } }, directives: [ɵngcc1.FormNotificationComponent, ɵngcc2.AutoCompleteCustomComponent, ɵngcc3.NgControlStatus, ɵngcc3.FormControlDirective, ɵngcc4.NgIf, ɵngcc5.ValidationMessageComponent], encapsulation: 2 });
__decorate([
    Input()
], AutoCompleteMultipleComponent.prototype, "field", void 0);
__decorate([
    Input()
], AutoCompleteMultipleComponent.prototype, "service", void 0);
__decorate([
    Input()
], AutoCompleteMultipleComponent.prototype, "virtualScroll", void 0);
__decorate([
    Input()
], AutoCompleteMultipleComponent.prototype, "itemSize", void 0);
const ɵAutoCompleteMultipleComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AutoCompleteMultipleComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutoCompleteMultipleComponent, [{
        type: Component,
        args: [{
                selector: "[nAutoCompleteMultiple]",
                template: "<span #notification form-notification class=\"md-inputfield\" [name]=\"name\" [form]=\"form\">\n    <p-autoCompleteCustom #input\n        [formControl]=\"formControl\"\n        [suggestions]=\"results\"\n        (completeMethod)=\"findAll($event)\"\n        [field]=\"field\"\n        [virtualScroll]=\"virtualScroll\"\n        [itemSize]=\"itemSize\"\n        (onBlur)=\"onBlurEvent($event)\"\n        (onSelect)=\"onSelectEvent($event)\"\n        (onFocus)=\"onFocusEvent($event)\"\n        [multiple]=\"true\">\n    </p-autoCompleteCustom>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
                providers: [provideValueAccessor(AutoCompleteMultipleComponent_1)]
            }]
    }], null, { virtualScroll: [{
            type: Input
        }], itemSize: [{
            type: Input
        }], field: [{
            type: Input
        }], service: [{
            type: Input
        }] }); })();
export { AutoCompleteMultipleComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by1jb21wbGV0ZS1tdWx0aXBsZS5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIm5nOi9AbnV2ZW0vcHJpbWVuZy1jb21wb25lbnRzL2xpYi9jcnVkL2NvbXBvbmVudHMvYXV0by1jb21wbGV0ZS1tdWx0aXBsZS9hdXRvLWNvbXBsZXRlLW11bHRpcGxlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzNELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUVwRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBT2hDLElBQWEsNkJBQTZCLHFDQUExQyxNQUFhLDZCQUE4QixTQUFRLGNBQXFCO0FBQ3hFLElBREE7QUFBZ0I7QUFBNkIsUUFNaEMsa0JBQWEsR0FBWSxLQUFLLENBQUM7QUFDNUMsUUFDYSxhQUFRLEdBQVcsRUFBRSxDQUFDO0FBQ25DLElBMEJBLENBQUM7QUFDRCxJQXhCSSxPQUFPLENBQUMsS0FBVTtBQUN0QixRQUFRLElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQztBQUN2QixRQUFRLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztBQUN4QyxRQUFRLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRTtBQUNyRCxZQUFZLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO0FBQ2hDLFFBQVEsQ0FBQyxDQUFDLENBQUM7QUFDWCxJQUFJLENBQUM7QUFDTCxJQUNjLFlBQVksQ0FBQyxLQUFZO0FBQUksUUFDbkMsSUFBSSxLQUFLLElBQUksS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFO0FBQ2hFLFlBQVksSUFBSSxHQUFHLEdBQVUsRUFBRSxDQUFDO0FBQ2hDLFlBQVksS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtBQUNwQyxnQkFBZ0IsSUFBSSxPQUFPLElBQUksT0FBTyxDQUFDLEVBQUUsRUFBRTtBQUMzQyxvQkFBb0IsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUM1RCxpQkFBaUI7QUFDakIsWUFBWSxDQUFDLENBQUMsQ0FBQztBQUNmLFlBQVksUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO0FBQzdDLGdCQUFnQixJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNoRCxZQUFZLENBQUMsQ0FBQyxDQUFDO0FBQ2YsU0FBUztBQUNULFFBQVEsT0FBTyxLQUFLLENBQUM7QUFDckIsSUFBSSxDQUFDO0FBQ0wsQ0FDQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3NOQUFBO0FBakNZO0FBQWEsSUFBckIsS0FBSyxFQUFFO0FBQUMsNERBQWM7QUFFZDtBQUFhLElBQXJCLEtBQUssRUFBRTtBQUFDLDhEQUErQjtBQUUvQjtBQUFhLElBQXJCLEtBQUssRUFBRTtBQUFDLG9FQUErQjtBQUUvQjtBQUFhLElBQXJCLEtBQUssRUFBRTtBQUFDLCtEQUFzQjtBQVJ0Qiw2QkFBNkIsc0RBTHpDLFNBQVMsQ0FBQyxVQUNQLFFBQVE7Q0FBRSx5QkFBeUIsVUFDbkM7Ozs7b21CQUFzRCxVQUN0RCxTQUFTLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQywrQkFBNkIsQ0FBQyxDQUFDLE1BQ25FLENBQUMsSUFDVyw2QkFBNkIsQ0FtQ3pDOzs7Ozs7Ozs7OztvQkFDRDtBQUFDLFNBcENZLDZCQUE2QjtBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBwcm92aWRlVmFsdWVBY2Nlc3NvciB9IGZyb20gXCJAbnV2ZW0vYW5ndWxhci1iYXNlXCI7XG5pbXBvcnQgeyBGaWVsZENvbXBvbmVudCB9IGZyb20gXCIuLi9maWVsZC5jb21wb25lbnRcIjtcbmltcG9ydCB7IENydWRTZXJ2aWNlIH0gZnJvbSBcIi4uLy4uL2NydWQtc2VydmljZS5zZXJ2aWNlXCI7XG5pbXBvcnQgeyBmb3JrSm9pbiB9IGZyb20gJ3J4anMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogXCJbbkF1dG9Db21wbGV0ZU11bHRpcGxlXVwiLFxuICAgIHRlbXBsYXRlVXJsOiBcIi4vYXV0by1jb21wbGV0ZS1tdWx0aXBsZS5jb21wb25lbnQuaHRtbFwiLFxuICAgIHByb3ZpZGVyczogW3Byb3ZpZGVWYWx1ZUFjY2Vzc29yKEF1dG9Db21wbGV0ZU11bHRpcGxlQ29tcG9uZW50KV0sXG59KVxuZXhwb3J0IGNsYXNzIEF1dG9Db21wbGV0ZU11bHRpcGxlQ29tcG9uZW50IGV4dGVuZHMgRmllbGRDb21wb25lbnQ8YW55W10+IHtcblxuICAgIEBJbnB1dCgpIGZpZWxkOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKSBzZXJ2aWNlOiBDcnVkU2VydmljZTxhbnksIGFueT47XG5cbiAgICBASW5wdXQoKSB2aXJ0dWFsU2Nyb2xsOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKSBpdGVtU2l6ZTogbnVtYmVyID0gMzA7XG5cbiAgICByZXN1bHRzOiBhbnlbXTtcblxuICAgIGZpbmRBbGwoZXZlbnQ6IGFueSkge1xuICAgICAgICBsZXQgcXVlcnkgPSB7fTtcbiAgICAgICAgcXVlcnlbdGhpcy5maWVsZF0gPSBldmVudC5xdWVyeTtcbiAgICAgICAgdGhpcy5zZXJ2aWNlLmZpbmRBbGwocXVlcnkpLnN1YnNjcmliZShkYXRhID0+IHtcbiAgICAgICAgICAgIHRoaXMucmVzdWx0cyA9IGRhdGE7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvdXRlclRvSW5uZXIodmFsdWU6IGFueVtdKTogYW55W10ge1xuICAgICAgICBpZiAodmFsdWUgJiYgdmFsdWUubGVuZ3RoID4gMCAmJiAhdmFsdWVbMF1bdGhpcy5maWVsZF0pIHtcbiAgICAgICAgICAgIGxldCBvYnM6IGFueVtdID0gW107XG4gICAgICAgICAgICB2YWx1ZS5mb3JFYWNoKGVsZW1lbnQgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlbGVtZW50ICYmIGVsZW1lbnQuaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgb2JzLnB1c2godGhpcy5zZXJ2aWNlLmZpbmQoZWxlbWVudC5pZCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZm9ya0pvaW4ob2JzKS5zdWJzY3JpYmUoKGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmZvcm1Db250cm9sLnNldFZhbHVlKGRhdGEpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cblxufVxuIl19