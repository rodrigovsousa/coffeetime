import { __decorate } from "tslib";
import { Component, Input, Output, EventEmitter } from "@angular/core";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function AutoCompleteItem_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1046 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1046.resolvedFieldData);
} }
function AutoCompleteItem_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c0 = function (a1) { return { "ui-autocomplete-list-item ui-corner-all": true, "ui-state-highlight": a1 }; };
const _c1 = function (a0) { return { "height": a0, "display": "table", "width": "100%" }; };
const _c2 = function (a0, a1) { return { $implicit: a0, index: a1 }; };
let AutoCompleteItem = class AutoCompleteItem {
    constructor() {
        this.highlightOptionChange = new EventEmitter();
        this.onClick = new EventEmitter();
    }
    selectItem(event) {
        this.onClick.emit({
            originalEvent: event,
            option: this.option
        });
    }
};
AutoCompleteItem.ɵfac = function AutoCompleteItem_Factory(t) { return new (t || AutoCompleteItem)(); };
AutoCompleteItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AutoCompleteItem, selectors: [["p-autoCompleteItem"]], inputs: { option: "option", resolvedFieldData: "resolvedFieldData", highlightOption: "highlightOption", index: "index", itemSize: "itemSize", template: "template" }, outputs: { highlightOptionChange: "highlightOptionChange", onClick: "onClick" }, decls: 3, vars: 13, consts: [["role", "option", 3, "ngClass", "id", "ngStyle", "mouseenter", "mouseleave", "click"], [4, "ngIf"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"]], template: function AutoCompleteItem_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "li", 0);
        ɵngcc0.ɵɵlistener("mouseenter", function AutoCompleteItem_Template_li_mouseenter_0_listener() { return ctx.highlightOptionChange.emit(ctx.option); })("mouseleave", function AutoCompleteItem_Template_li_mouseleave_0_listener() { return ctx.highlightOptionChange.emit(null); })("click", function AutoCompleteItem_Template_li_click_0_listener($event) { return ctx.selectItem($event); });
        ɵngcc0.ɵɵtemplate(1, AutoCompleteItem_span_1_Template, 2, 1, "span", 1);
        ɵngcc0.ɵɵtemplate(2, AutoCompleteItem_ng_container_2_Template, 1, 0, "ng-container", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(6, _c0, ctx.highlightOption == ctx.option))("id", ctx.highlightOption == ctx.option ? "p-highlighted-option" : "")("ngStyle", ɵngcc0.ɵɵpureFunction1(8, _c1, ctx.itemSize + "px"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.template);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.template)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(10, _c2, ctx.option, ctx.index));
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], encapsulation: 2 });
__decorate([
    Input()
], AutoCompleteItem.prototype, "option", void 0);
__decorate([
    Input()
], AutoCompleteItem.prototype, "resolvedFieldData", void 0);
__decorate([
    Input()
], AutoCompleteItem.prototype, "highlightOption", void 0);
__decorate([
    Output()
], AutoCompleteItem.prototype, "highlightOptionChange", void 0);
__decorate([
    Input()
], AutoCompleteItem.prototype, "index", void 0);
__decorate([
    Input()
], AutoCompleteItem.prototype, "itemSize", void 0);
__decorate([
    Input()
], AutoCompleteItem.prototype, "template", void 0);
__decorate([
    Output()
], AutoCompleteItem.prototype, "onClick", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutoCompleteItem, [{
        type: Component,
        args: [{
                selector: 'p-autoCompleteItem',
                template: `
        <li role="option" [ngClass]="{'ui-autocomplete-list-item ui-corner-all':true,'ui-state-highlight':(highlightOption==option)}"
            (mouseenter)="highlightOptionChange.emit(option)" (mouseleave)="highlightOptionChange.emit(null)"
            [id]="highlightOption == option ? 'p-highlighted-option':''" (click)="selectItem($event)"
            [ngStyle]="{'height': itemSize + 'px', 'display': 'table', 'width': '100%'}">
            <span *ngIf="!template">{{resolvedFieldData}}</span>
            <ng-container *ngTemplateOutlet="template; context: {$implicit: option, index: index}"></ng-container>
        </li>
    `
            }]
    }], function () { return []; }, { highlightOptionChange: [{
            type: Output
        }], onClick: [{
            type: Output
        }], option: [{
            type: Input
        }], resolvedFieldData: [{
            type: Input
        }], highlightOption: [{
            type: Input
        }], index: [{
            type: Input
        }], itemSize: [{
            type: Input
        }], template: [{
            type: Input
        }] }); })();
export { AutoCompleteItem };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by1jb21wbGV0ZS1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsibmc6L0BudXZlbS9wcmltZW5nLWNvbXBvbmVudHMvbGliL2NydWQvY29tcG9uZW50cy9hdXRvLWNvbXBsZXRlL2F1dG8tY29tcGxldGUtaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBZSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFjcEYsSUFBYSxnQkFBZ0IsR0FBN0IsTUFBYSxnQkFBZ0I7QUFDN0IsSUFEQTtBQUFnQixRQVFGLDBCQUFxQixHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7QUFDOUQsUUFPYyxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztBQUMzQyxJQU9BLENBQUM7QUFDRCxJQVBJLFVBQVUsQ0FBQyxLQUFZO0FBQUksUUFDdkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7QUFDMUIsWUFBWSxhQUFhLEVBQUUsS0FBSztBQUNoQyxZQUFZLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTTtBQUMvQixTQUFTLENBQUMsQ0FBQztBQUNYLElBQUksQ0FBQztBQUNMLENBQUM7Ozs7Ozs7Ozs7Ozs7O2lIQUFBO0FBdEJZO0FBQ2IsSUFESyxLQUFLLEVBQUU7QUFBQyxnREFBWTtBQUVaO0FBQWEsSUFBckIsS0FBSyxFQUFFO0FBQUMsMkRBQXVCO0FBRXZCO0FBQWEsSUFBckIsS0FBSyxFQUFFO0FBQUMseURBQXFCO0FBRXBCO0FBQWEsSUFBdEIsTUFBTSxFQUFFO0FBQUMsK0RBQWdEO0FBRWpEO0FBQWEsSUFBckIsS0FBSyxFQUFFO0FBQUMsK0NBQWM7QUFFZDtBQUFhLElBQXJCLEtBQUssRUFBRTtBQUFDLGtEQUFpQjtBQUVqQjtBQUFhLElBQXJCLEtBQUssRUFBRTtBQUFDLGtEQUEyQjtBQUUxQjtBQUFhLElBQXRCLE1BQU0sRUFBRTtBQUFDLGlEQUE2QjtBQWhCOUIsZ0JBQWdCLG9CQVo1QixTQUFTLENBQUMsVUFDUCxRQUFRLEVBQUU7V0FBb0IsVUFDOUI7SUFBUSxFQUFFOzs7Ozs7OztpREFRVCxNQUNKLENBQUMsSUFDVyxnQkFBZ0IsQ0F3QjVCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFDRDtBQUFDLFNBekJZLGdCQUFnQjtBQUU3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgVGVtcGxhdGVSZWYsIEV2ZW50RW1pdHRlciB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAncC1hdXRvQ29tcGxldGVJdGVtJyxcbiAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8bGkgcm9sZT1cIm9wdGlvblwiIFtuZ0NsYXNzXT1cInsndWktYXV0b2NvbXBsZXRlLWxpc3QtaXRlbSB1aS1jb3JuZXItYWxsJzp0cnVlLCd1aS1zdGF0ZS1oaWdobGlnaHQnOihoaWdobGlnaHRPcHRpb249PW9wdGlvbil9XCJcbiAgICAgICAgICAgIChtb3VzZWVudGVyKT1cImhpZ2hsaWdodE9wdGlvbkNoYW5nZS5lbWl0KG9wdGlvbilcIiAobW91c2VsZWF2ZSk9XCJoaWdobGlnaHRPcHRpb25DaGFuZ2UuZW1pdChudWxsKVwiXG4gICAgICAgICAgICBbaWRdPVwiaGlnaGxpZ2h0T3B0aW9uID09IG9wdGlvbiA/ICdwLWhpZ2hsaWdodGVkLW9wdGlvbic6JydcIiAoY2xpY2spPVwic2VsZWN0SXRlbSgkZXZlbnQpXCJcbiAgICAgICAgICAgIFtuZ1N0eWxlXT1cInsnaGVpZ2h0JzogaXRlbVNpemUgKyAncHgnLCAnZGlzcGxheSc6ICd0YWJsZScsICd3aWR0aCc6ICcxMDAlJ31cIj5cbiAgICAgICAgICAgIDxzcGFuICpuZ0lmPVwiIXRlbXBsYXRlXCI+e3tyZXNvbHZlZEZpZWxkRGF0YX19PC9zcGFuPlxuICAgICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cInRlbXBsYXRlOyBjb250ZXh0OiB7JGltcGxpY2l0OiBvcHRpb24sIGluZGV4OiBpbmRleH1cIj48L25nLWNvbnRhaW5lcj5cbiAgICAgICAgPC9saT5cbiAgICBgXG59KVxuZXhwb3J0IGNsYXNzIEF1dG9Db21wbGV0ZUl0ZW0ge1xuXG4gICAgQElucHV0KCkgb3B0aW9uOiBhbnk7XG5cbiAgICBASW5wdXQoKSByZXNvbHZlZEZpZWxkRGF0YTogYW55O1xuXG4gICAgQElucHV0KCkgaGlnaGxpZ2h0T3B0aW9uOiBhbnk7XG5cbiAgICBAT3V0cHV0KCkgaGlnaGxpZ2h0T3B0aW9uQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgICBASW5wdXQoKSBpbmRleDogbnVtYmVyO1xuXG4gICAgQElucHV0KCkgaXRlbVNpemU6IG51bWJlcjtcblxuICAgIEBJbnB1dCgpIHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gICAgQE91dHB1dCgpIG9uQ2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgICBzZWxlY3RJdGVtKGV2ZW50OiBFdmVudCk6IHZvaWQge1xuICAgICAgICB0aGlzLm9uQ2xpY2suZW1pdCh7XG4gICAgICAgICAgICBvcmlnaW5hbEV2ZW50OiBldmVudCxcbiAgICAgICAgICAgIG9wdGlvbjogdGhpcy5vcHRpb25cbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl19