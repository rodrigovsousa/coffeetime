var AutoCompleteComponent_1;
import { __decorate } from "tslib";
import { Component, Input } from "@angular/core";
import { provideValueAccessor } from "@nuvem/angular-base";
import { FieldComponent } from "../field.component";
let AutoCompleteComponent = AutoCompleteComponent_1 = class AutoCompleteComponent extends FieldComponent {
    constructor() {
        super(...arguments);
        this.virtualScroll = false;
        this.itemSize = 30;
    }
    selectItem(option) {
        this.formControl.setValue(option);
    }
    findAll(event) {
        let query = {};
        query[this.field] = event.query;
        this.service.findAll(query).subscribe(data => {
            this.results = data;
        });
    }
    outerToInner(value) {
        if (value && value.id && !value[this.field]) {
            this.service.find(value.id).subscribe((data) => {
                this.formControl.setValue(data);
            });
        }
        return value;
    }
};
__decorate([
    Input()
], AutoCompleteComponent.prototype, "field", void 0);
__decorate([
    Input()
], AutoCompleteComponent.prototype, "virtualScroll", void 0);
__decorate([
    Input()
], AutoCompleteComponent.prototype, "itemSize", void 0);
__decorate([
    Input()
], AutoCompleteComponent.prototype, "service", void 0);
AutoCompleteComponent = AutoCompleteComponent_1 = __decorate([
    Component({
        selector: "[nAutoComplete]",
        template: "<span #notification form-notification class=\"md-inputfield\" [name]=\"name\" [form]=\"form\">\n    <p-autoCompleteCustom #input\n        [formControl]=\"formControl\"\n        [suggestions]=\"results\"\n        [virtualScroll]=\"virtualScroll\"\n        [itemSize]=\"itemSize\"\n        (onBlur)=\"onBlurEvent($event)\"\n        (onSelect)=\"onSelectEvent($event)\"\n        (onFocus)=\"onFocusEvent($event)\"\n        (completeMethod)=\"findAll($event)\"\n        [field]=\"field\">\n    </p-autoCompleteCustom>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
        providers: [provideValueAccessor(AutoCompleteComponent_1)]
    })
], AutoCompleteComponent);
export { AutoCompleteComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by1jb21wbGV0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbnV2ZW0vcHJpbWVuZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NydWQvY29tcG9uZW50cy9hdXRvLWNvbXBsZXRlL2F1dG8tY29tcGxldGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBUXBELElBQWEscUJBQXFCLDZCQUFsQyxNQUFhLHFCQUFzQixTQUFRLGNBQW1CO0lBQTlEOztRQUlhLGtCQUFhLEdBQVksS0FBSyxDQUFDO1FBRS9CLGFBQVEsR0FBVyxFQUFFLENBQUM7SUEyQm5DLENBQUM7SUFyQkcsVUFBVSxDQUFDLE1BQU07UUFDYixJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRUQsT0FBTyxDQUFDLEtBQVU7UUFDZCxJQUFJLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDZixLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDaEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3pDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ3hCLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVTLFlBQVksQ0FBQyxLQUFVO1FBQzdCLElBQUksS0FBSyxJQUFJLEtBQUssQ0FBQyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ3pDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtnQkFDM0MsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDcEMsQ0FBQyxDQUFDLENBQUM7U0FDTjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7Q0FFSixDQUFBO0FBL0JZO0lBQVIsS0FBSyxFQUFFO29EQUFlO0FBRWQ7SUFBUixLQUFLLEVBQUU7NERBQWdDO0FBRS9CO0lBQVIsS0FBSyxFQUFFO3VEQUF1QjtBQUV0QjtJQUFSLEtBQUssRUFBRTtzREFBZ0M7QUFSL0IscUJBQXFCO0lBTGpDLFNBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxpQkFBaUI7UUFDM0IsMHRCQUE2QztRQUM3QyxTQUFTLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQyx1QkFBcUIsQ0FBQyxDQUFDO0tBQzNELENBQUM7R0FDVyxxQkFBcUIsQ0FpQ2pDO1NBakNZLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIFRlbXBsYXRlUmVmIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IHByb3ZpZGVWYWx1ZUFjY2Vzc29yIH0gZnJvbSBcIkBudXZlbS9hbmd1bGFyLWJhc2VcIjtcbmltcG9ydCB7IEZpZWxkQ29tcG9uZW50IH0gZnJvbSBcIi4uL2ZpZWxkLmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgQ3J1ZFNlcnZpY2UgfSBmcm9tIFwiLi4vLi4vY3J1ZC1zZXJ2aWNlLnNlcnZpY2VcIjtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6IFwiW25BdXRvQ29tcGxldGVdXCIsXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9hdXRvLWNvbXBsZXRlLmNvbXBvbmVudC5odG1sXCIsXG4gICAgcHJvdmlkZXJzOiBbcHJvdmlkZVZhbHVlQWNjZXNzb3IoQXV0b0NvbXBsZXRlQ29tcG9uZW50KV0sXG59KVxuZXhwb3J0IGNsYXNzIEF1dG9Db21wbGV0ZUNvbXBvbmVudCBleHRlbmRzIEZpZWxkQ29tcG9uZW50PGFueT4ge1xuXG4gICAgQElucHV0KCkgZmllbGQ6IHN0cmluZztcblxuICAgIEBJbnB1dCgpIHZpcnR1YWxTY3JvbGw6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIEBJbnB1dCgpIGl0ZW1TaXplOiBudW1iZXIgPSAzMDtcblxuICAgIEBJbnB1dCgpIHNlcnZpY2U6IENydWRTZXJ2aWNlPGFueSwgYW55PjtcblxuICAgIHJlc3VsdHM6IGFueVtdO1xuXG4gICAgc2VsZWN0SXRlbShvcHRpb24pIHtcbiAgICAgICAgdGhpcy5mb3JtQ29udHJvbC5zZXRWYWx1ZShvcHRpb24pO1xuICAgIH1cblxuICAgIGZpbmRBbGwoZXZlbnQ6IGFueSkge1xuICAgICAgICBsZXQgcXVlcnkgPSB7fTtcbiAgICAgICAgcXVlcnlbdGhpcy5maWVsZF0gPSBldmVudC5xdWVyeTtcbiAgICAgICAgdGhpcy5zZXJ2aWNlLmZpbmRBbGwocXVlcnkpLnN1YnNjcmliZShkYXRhID0+IHtcbiAgICAgICAgICAgIHRoaXMucmVzdWx0cyA9IGRhdGE7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvdXRlclRvSW5uZXIodmFsdWU6IGFueSk6IGFueSB7XG4gICAgICAgIGlmICh2YWx1ZSAmJiB2YWx1ZS5pZCAmJiAhdmFsdWVbdGhpcy5maWVsZF0pIHtcbiAgICAgICAgICAgIHRoaXMuc2VydmljZS5maW5kKHZhbHVlLmlkKS5zdWJzY3JpYmUoKGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmZvcm1Db250cm9sLnNldFZhbHVlKGRhdGEpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cblxufVxuIl19