var CheckComponent_1;
import { __decorate } from "tslib";
import { Component, Injector } from "@angular/core";
import { provideValueAccessor, FormNotificationService, FormNotification, FieldFormNotification } from "@nuvem/angular-base";
import { FieldComponent } from "../field.component";
import { ControlContainer } from '@angular/forms';
let CheckComponent = CheckComponent_1 = class CheckComponent extends FieldComponent {
    /**
     * Método construtor responsável por carregar o serviço de validação
     * @param formNotificationService
     */
    constructor(controlContainer, injector, formNotificationService) {
        super(controlContainer, injector);
        this.formNotificationService = formNotificationService;
    }
    /**
     * Método Inicial para subscrição no endpoint responsável por validar o formulário
     */
    ngOnInit() {
        super.ngOnInit();
        this.subscription = this.formNotificationService
            .notifications(this.form, this.name)
            .subscribe((notification) => {
            if (notification instanceof FieldFormNotification) {
                this.message = notification.message;
            }
            else {
                this.message = null;
            }
        });
    }
    /**
     * Método responsável por realizar a saida das subscrições do endpont de validação
     */
    ngOnDestroy() {
        super.ngOnDestroy();
        this.subscription.unsubscribe();
    }
};
CheckComponent.ctorParameters = () => [
    { type: ControlContainer },
    { type: Injector },
    { type: FormNotificationService }
];
CheckComponent = CheckComponent_1 = __decorate([
    Component({
        selector: "[nCheck]",
        template: "<div class=\"ui-g-12 semborda\">\n    <div class=\"ui-g-4\" [innerHTML]=\"label\"></div>\n    <div class=\"ui-g-4\">\n        <p-radioButton\n            [ngClass]=\"{ 'ng-invalid ng-dirty': message }\"\n            id=\"sim\"\n            type=\"radio\"\n            [value]=\"true\"\n            [name]=\"name\"\n            [formControl]=\"formControl\"\n            pRadioButton></p-radioButton>\n        <label>Sim</label>\n    </div>\n    <div class=\"ui-g-4\">\n        <p-radioButton\n            [ngClass]=\"{ 'ng-invalid ng-dirty': message }\"\n            id=\"n\u00E3o\"\n            type=\"radio\"\n            [value]=\"false\"\n            name=\"correspondencia\"\n            [formControl]=\"formControl\"\n            pRadioButton></p-radioButton>\n        <label>N\u00E3o</label>\n    </div>\n    <ng-content></ng-content>\n</div>\n",
        providers: [provideValueAccessor(CheckComponent_1)]
    })
], CheckComponent);
export { CheckComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2suY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG51dmVtL3ByaW1lbmctY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi9jcnVkL2NvbXBvbmVudHMvY2hlY2svY2hlY2suY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJcEQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLHVCQUF1QixFQUFFLGdCQUFnQixFQUFFLHFCQUFxQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDN0gsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBT2xELElBQWEsY0FBYyxzQkFBM0IsTUFBYSxjQUFlLFNBQVEsY0FBc0I7SUFNdEQ7OztPQUdHO0lBQ0gsWUFDSSxnQkFBa0MsRUFDbEMsUUFBa0IsRUFDUix1QkFBZ0Q7UUFDMUQsS0FBSyxDQUFDLGdCQUFnQixFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBRHhCLDRCQUF1QixHQUF2Qix1QkFBdUIsQ0FBeUI7SUFFOUQsQ0FBQztJQUVEOztPQUVHO0lBQ0gsUUFBUTtRQUNKLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQTtRQUNoQixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyx1QkFBdUI7YUFDM0MsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQzthQUNuQyxTQUFTLENBQUMsQ0FBQyxZQUE4QixFQUFFLEVBQUU7WUFDMUMsSUFBSSxZQUFZLFlBQVkscUJBQXFCLEVBQUU7Z0JBQy9DLElBQUksQ0FBQyxPQUFPLEdBQUcsWUFBWSxDQUFDLE9BQU8sQ0FBQzthQUN2QztpQkFBTTtnQkFDSCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQzthQUN2QjtRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1gsQ0FBQztJQUVEOztPQUVHO0lBQ0gsV0FBVztRQUNQLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQTtRQUNuQixJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3BDLENBQUM7Q0FHSixDQUFBOztZQS9CeUIsZ0JBQWdCO1lBQ3hCLFFBQVE7WUFDaUIsdUJBQXVCOztBQWJyRCxjQUFjO0lBTDFCLFNBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLCsxQkFBcUM7UUFDckMsU0FBUyxFQUFFLENBQUUsb0JBQW9CLENBQUMsZ0JBQWMsQ0FBQyxDQUFFO0tBQ3RELENBQUM7R0FDVyxjQUFjLENBMEMxQjtTQTFDWSxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3RvciB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gXCJyeGpzXCI7XG5cbmltcG9ydCB7IHByb3ZpZGVWYWx1ZUFjY2Vzc29yLCBGb3JtTm90aWZpY2F0aW9uU2VydmljZSwgRm9ybU5vdGlmaWNhdGlvbiwgRmllbGRGb3JtTm90aWZpY2F0aW9uIH0gZnJvbSBcIkBudXZlbS9hbmd1bGFyLWJhc2VcIjtcbmltcG9ydCB7IEZpZWxkQ29tcG9uZW50IH0gZnJvbSBcIi4uL2ZpZWxkLmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgQ29udHJvbENvbnRhaW5lciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6IFwiW25DaGVja11cIixcbiAgICB0ZW1wbGF0ZVVybDogXCIuL2NoZWNrLmNvbXBvbmVudC5odG1sXCIsXG4gICAgcHJvdmlkZXJzOiBbIHByb3ZpZGVWYWx1ZUFjY2Vzc29yKENoZWNrQ29tcG9uZW50KSBdLFxufSlcbmV4cG9ydCBjbGFzcyBDaGVja0NvbXBvbmVudCBleHRlbmRzIEZpZWxkQ29tcG9uZW50PHN0cmluZz4ge1xuXG4gICAgcHJpdmF0ZSBzdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcblxuICAgIG1lc3NhZ2U6IFN0cmluZztcblxuICAgIC8qKlxuICAgICAqIE3DqXRvZG8gY29uc3RydXRvciByZXNwb25zw6F2ZWwgcG9yIGNhcnJlZ2FyIG8gc2VydmnDp28gZGUgdmFsaWRhw6fDo29cbiAgICAgKiBAcGFyYW0gZm9ybU5vdGlmaWNhdGlvblNlcnZpY2VcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgY29udHJvbENvbnRhaW5lcjogQ29udHJvbENvbnRhaW5lcixcbiAgICAgICAgaW5qZWN0b3I6IEluamVjdG9yLFxuICAgICAgICBwcm90ZWN0ZWQgZm9ybU5vdGlmaWNhdGlvblNlcnZpY2U6IEZvcm1Ob3RpZmljYXRpb25TZXJ2aWNlKSB7XG4gICAgICAgIHN1cGVyKGNvbnRyb2xDb250YWluZXIsIGluamVjdG9yKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBNw6l0b2RvIEluaWNpYWwgcGFyYSBzdWJzY3Jpw6fDo28gbm8gZW5kcG9pbnQgcmVzcG9uc8OhdmVsIHBvciB2YWxpZGFyIG8gZm9ybXVsw6FyaW9cbiAgICAgKi9cbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICAgICAgc3VwZXIubmdPbkluaXQoKVxuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbiA9IHRoaXMuZm9ybU5vdGlmaWNhdGlvblNlcnZpY2VcbiAgICAgICAgICAgIC5ub3RpZmljYXRpb25zKHRoaXMuZm9ybSwgdGhpcy5uYW1lKVxuICAgICAgICAgICAgLnN1YnNjcmliZSgobm90aWZpY2F0aW9uOiBGb3JtTm90aWZpY2F0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKG5vdGlmaWNhdGlvbiBpbnN0YW5jZW9mIEZpZWxkRm9ybU5vdGlmaWNhdGlvbikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1lc3NhZ2UgPSBub3RpZmljYXRpb24ubWVzc2FnZTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1lc3NhZ2UgPSBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE3DqXRvZG8gcmVzcG9uc8OhdmVsIHBvciByZWFsaXphciBhIHNhaWRhIGRhcyBzdWJzY3Jpw6fDtWVzIGRvIGVuZHBvbnQgZGUgdmFsaWRhw6fDo29cbiAgICAgKi9cbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICAgICAgc3VwZXIubmdPbkRlc3Ryb3koKVxuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgIH1cblxuXG59XG4iXX0=