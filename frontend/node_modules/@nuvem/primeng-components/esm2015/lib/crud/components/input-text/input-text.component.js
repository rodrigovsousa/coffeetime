var InputTextComponent_1;
import { __decorate } from "tslib";
import { Component, Input } from "@angular/core";
import { provideValueAccessor } from "@nuvem/angular-base";
import { FieldComponent } from "../field.component";
let InputTextComponent = InputTextComponent_1 = class InputTextComponent extends FieldComponent {
    constructor() {
        super(...arguments);
        this.type = "text";
    }
    ngOnInit() {
        super.ngOnInit();
        this.setElementRefAttr("min", this.min);
        this.setElementRefAttr("max", this.max);
        this.setElementRefAttr("minLength", this.minLength);
        this.setElementRefAttr("maxLength", this.maxLength);
        this.setElementRefAttr("pattern", this.pattern);
    }
};
__decorate([
    Input()
], InputTextComponent.prototype, "minLength", void 0);
__decorate([
    Input()
], InputTextComponent.prototype, "maxLength", void 0);
__decorate([
    Input()
], InputTextComponent.prototype, "min", void 0);
__decorate([
    Input()
], InputTextComponent.prototype, "max", void 0);
__decorate([
    Input()
], InputTextComponent.prototype, "pattern", void 0);
__decorate([
    Input()
], InputTextComponent.prototype, "type", void 0);
InputTextComponent = InputTextComponent_1 = __decorate([
    Component({
        selector: "[nInputText]",
        template: "<span #notification form-notification class=\"md-inputfield\" [name]=\"name\" [form]=\"form\">\n    <input #input\n        pInputText\n        [ngClass]=\"{ 'ng-invalid ng-dirty': notification.message }\"\n        [type]=\"type\"\n        [name]=\"name\"\n        (blur)=\"onBlurEvent($event)\"\n        (focus)=\"onFocusEvent($event)\"\n        [formControl]=\"formControl\" />\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
        providers: [provideValueAccessor(InputTextComponent_1)]
    })
], InputTextComponent);
export { InputTextComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtdGV4dC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbnV2ZW0vcHJpbWVuZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NydWQvY29tcG9uZW50cy9pbnB1dC10ZXh0L2lucHV0LXRleHQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBT3BELElBQWEsa0JBQWtCLDBCQUEvQixNQUFhLGtCQUFtQixTQUFRLGNBQXNCO0lBQTlEOztRQVlhLFNBQUksR0FBVyxNQUFNLENBQUM7SUFXbkMsQ0FBQztJQVRHLFFBQVE7UUFDSixLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDeEMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDeEMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDcEQsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDcEQsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDcEQsQ0FBQztDQUVKLENBQUE7QUFyQlk7SUFBUixLQUFLLEVBQUU7cURBQW1CO0FBRWxCO0lBQVIsS0FBSyxFQUFFO3FEQUFtQjtBQUVsQjtJQUFSLEtBQUssRUFBRTsrQ0FBYTtBQUVaO0lBQVIsS0FBSyxFQUFFOytDQUFhO0FBRVo7SUFBUixLQUFLLEVBQUU7bURBQTBCO0FBRXpCO0lBQVIsS0FBSyxFQUFFO2dEQUF1QjtBQVp0QixrQkFBa0I7SUFMOUIsU0FBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLGNBQWM7UUFDeEIsbWxCQUEwQztRQUMxQyxTQUFTLEVBQUUsQ0FBRSxvQkFBb0IsQ0FBQyxvQkFBa0IsQ0FBQyxDQUFFO0tBQzFELENBQUM7R0FDVyxrQkFBa0IsQ0F1QjlCO1NBdkJZLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBwcm92aWRlVmFsdWVBY2Nlc3NvciB9IGZyb20gXCJAbnV2ZW0vYW5ndWxhci1iYXNlXCI7XG5pbXBvcnQgeyBGaWVsZENvbXBvbmVudCB9IGZyb20gXCIuLi9maWVsZC5jb21wb25lbnRcIjtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6IFwiW25JbnB1dFRleHRdXCIsXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9pbnB1dC10ZXh0LmNvbXBvbmVudC5odG1sXCIsXG4gICAgcHJvdmlkZXJzOiBbIHByb3ZpZGVWYWx1ZUFjY2Vzc29yKElucHV0VGV4dENvbXBvbmVudCkgXSxcbn0pXG5leHBvcnQgY2xhc3MgSW5wdXRUZXh0Q29tcG9uZW50IGV4dGVuZHMgRmllbGRDb21wb25lbnQ8c3RyaW5nPiBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgICBASW5wdXQoKSBtaW5MZW5ndGg6IG51bWJlcjtcblxuICAgIEBJbnB1dCgpIG1heExlbmd0aDogbnVtYmVyO1xuXG4gICAgQElucHV0KCkgbWluOiBudW1iZXI7XG5cbiAgICBASW5wdXQoKSBtYXg6IG51bWJlcjtcblxuICAgIEBJbnB1dCgpIHBhdHRlcm46IHN0cmluZyB8IFJlZ0V4cDtcblxuICAgIEBJbnB1dCgpIHR5cGU6IHN0cmluZyA9IFwidGV4dFwiO1xuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHN1cGVyLm5nT25Jbml0KCk7XG4gICAgICAgIHRoaXMuc2V0RWxlbWVudFJlZkF0dHIoXCJtaW5cIiwgdGhpcy5taW4pO1xuICAgICAgICB0aGlzLnNldEVsZW1lbnRSZWZBdHRyKFwibWF4XCIsIHRoaXMubWF4KTtcbiAgICAgICAgdGhpcy5zZXRFbGVtZW50UmVmQXR0cihcIm1pbkxlbmd0aFwiLCB0aGlzLm1pbkxlbmd0aCk7XG4gICAgICAgIHRoaXMuc2V0RWxlbWVudFJlZkF0dHIoXCJtYXhMZW5ndGhcIiwgdGhpcy5tYXhMZW5ndGgpO1xuICAgICAgICB0aGlzLnNldEVsZW1lbnRSZWZBdHRyKFwicGF0dGVyblwiLCB0aGlzLnBhdHRlcm4pO1xuICAgIH1cblxufVxuIl19