var TextAreaComponent_1;
import { __decorate } from "tslib";
import { Component, Input } from "@angular/core";
import { provideValueAccessor } from "@nuvem/angular-base";
import { FieldComponent } from "../field.component";
let TextAreaComponent = TextAreaComponent_1 = class TextAreaComponent extends FieldComponent {
    constructor() {
        super(...arguments);
        this.autoResize = false;
    }
};
__decorate([
    Input()
], TextAreaComponent.prototype, "autoResize", void 0);
__decorate([
    Input()
], TextAreaComponent.prototype, "rows", void 0);
__decorate([
    Input()
], TextAreaComponent.prototype, "cols", void 0);
__decorate([
    Input()
], TextAreaComponent.prototype, "minLength", void 0);
__decorate([
    Input()
], TextAreaComponent.prototype, "maxLength", void 0);
TextAreaComponent = TextAreaComponent_1 = __decorate([
    Component({
        selector: "[nTextArea]",
        template: "<span #notification form-notification class=\"md-inputfield\" [name]=\"name\" [form]=\"form\">\n    <textarea #input\n        pInputTextarea\n        [ngClass]=\"{ 'ng-invalid ng-dirty': notification.message }\"\n        type=\"text\"\n        [name]=\"name\"\n        [autoResize]=\"autoResize\"\n        [rows]=\"rows\"\n        [cols]=\"cols\"\n        [minLength]=\"minLength\"\n        [maxLength]=\"maxLength\"\n        [formControl]=\"formControl\"\n        (blur)=\"onBlurEvent($event)\"\n        (focus)=\"onFocusEvent($event)\">\n    </textarea>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
        providers: [provideValueAccessor(TextAreaComponent_1)]
    })
], TextAreaComponent);
export { TextAreaComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dC1hcmVhLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BudXZlbS9wcmltZW5nLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvY3J1ZC9jb21wb25lbnRzL3RleHQtYXJlYS90ZXh0LWFyZWEuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0scUJBQXFCLENBQUE7QUFDMUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBT3BELElBQWEsaUJBQWlCLHlCQUE5QixNQUFhLGlCQUFrQixTQUFRLGNBQXNCO0lBQTdEOztRQUVhLGVBQVUsR0FBWSxLQUFLLENBQUM7SUFVekMsQ0FBQztDQUFBLENBQUE7QUFWWTtJQUFSLEtBQUssRUFBRTtxREFBNkI7QUFFNUI7SUFBUixLQUFLLEVBQUU7K0NBQWM7QUFFYjtJQUFSLEtBQUssRUFBRTsrQ0FBYztBQUViO0lBQVIsS0FBSyxFQUFFO29EQUFtQjtBQUVsQjtJQUFSLEtBQUssRUFBRTtvREFBbUI7QUFWbEIsaUJBQWlCO0lBTDdCLFNBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxhQUFhO1FBQ3ZCLG93QkFBeUM7UUFDekMsU0FBUyxFQUFFLENBQUUsb0JBQW9CLENBQUMsbUJBQWlCLENBQUMsQ0FBRTtLQUN6RCxDQUFDO0dBQ1csaUJBQWlCLENBWTdCO1NBWlksaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBwcm92aWRlVmFsdWVBY2Nlc3NvciB9IGZyb20gXCJAbnV2ZW0vYW5ndWxhci1iYXNlXCJcbmltcG9ydCB7IEZpZWxkQ29tcG9uZW50IH0gZnJvbSBcIi4uL2ZpZWxkLmNvbXBvbmVudFwiO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogXCJbblRleHRBcmVhXVwiLFxuICAgIHRlbXBsYXRlVXJsOiBcIi4vdGV4dC1hcmVhLmNvbXBvbmVudC5odG1sXCIsXG4gICAgcHJvdmlkZXJzOiBbIHByb3ZpZGVWYWx1ZUFjY2Vzc29yKFRleHRBcmVhQ29tcG9uZW50KSBdLFxufSlcbmV4cG9ydCBjbGFzcyBUZXh0QXJlYUNvbXBvbmVudCBleHRlbmRzIEZpZWxkQ29tcG9uZW50PHN0cmluZz4ge1xuXG4gICAgQElucHV0KCkgYXV0b1Jlc2l6ZTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgQElucHV0KCkgcm93czogc3RyaW5nO1xuXG4gICAgQElucHV0KCkgY29sczogc3RyaW5nO1xuXG4gICAgQElucHV0KCkgbWluTGVuZ3RoOiBudW1iZXI7XG5cbiAgICBASW5wdXQoKSBtYXhMZW5ndGg6IG51bWJlcjtcblxufVxuIl19