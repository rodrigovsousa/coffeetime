import { __decorate, __param } from "tslib";
import { Component, Inject, Input, Output, EventEmitter, ViewChild, ContentChildren } from "@angular/core";
import { CRUD_SERVICE } from "./crud-service.service";
import { Router, ActivatedRoute } from "@angular/router";
import { Column } from '../datatable/p-column.directive';
import { ConfirmationService } from 'primeng/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'primeng/api';
import * as ɵngcc2 from '@angular/router';
import * as ɵngcc3 from './form.component';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '../datatable/datatable.component';
import * as ɵngcc6 from 'primeng/confirmdialog';
import * as ɵngcc7 from 'primeng';

const _c0 = ["datatable"];
const _c1 = function () { return ["../save"]; };
function CrudListComponent_button_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "button", 6);
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("routerLink", ɵngcc0.ɵɵpureFunction0(1, _c1));
} }
const _c2 = [[["", "nForm", ""]], [["p-column"]]];
const _c3 = ["[nForm]", "p-column"];
let CrudListComponent = class CrudListComponent {
    constructor(crudService, confirmationService, route, router) {
        this.crudService = crudService;
        this.confirmationService = confirmationService;
        this.route = route;
        this.router = router;
        this.action = "findAll";
        this.findLabel = "Pesquisar";
        this.disableSave = false;
        this.disableEdit = false;
        this.disableView = false;
        this.disableDelete = false;
        this.find = new EventEmitter();
    }
    ngOnInit() {
        if (this.service) {
            this.crudService = this.service;
        }
        if (!this.url) {
            this.url = this.crudService.uri;
        }
    }
    datatableClick(event) {
        if (event.selection) {
            switch (event.button) {
                case "edit":
                case "view":
                    this.router.navigate([`../${event.button}`, event.selection.id], { relativeTo: this.route });
                    break;
                case "delete":
                    this.confirmationService.confirm({
                        message: 'Você tem certeza que deseja excluir o registro?',
                        accept: () => this.crudService.delete(event.selection.id)
                            .subscribe(() => this.datatable.filter())
                    });
                    break;
            }
        }
    }
    findAll(event) {
        if (this.find.observers.length) {
            this.find.emit(this.form.value);
        }
        else {
            this.datatable.filterParams = {};
            Object.keys(this.form.value).forEach(element => {
                let value = this.form.value[element];
                if (value) {
                    this.datatable.filterParams[element] =
                        value instanceof Date ? JSON.stringify(value).replace(/"/g, "") : value;
                }
            });
            this.datatable.filter();
        }
    }
    ngAfterContentInit() {
        const datatableNgAfterContentInit = this.datatable.pDatatableComponent.ngAfterContentInit;
        this.datatable.pDatatableComponent.ngAfterContentInit = () => {
            this.datatable.pDatatableComponent.columns = this.columns.toArray();
            datatableNgAfterContentInit.call(this.datatable.pDatatableComponent);
        };
    }
    ngAfterViewInit() {
        for (let i in this.datatableExtraParams) {
            this.datatable[i] = this.datatableExtraParams[i];
        }
    }
};
CrudListComponent.ɵfac = function CrudListComponent_Factory(t) { return new (t || CrudListComponent)(ɵngcc0.ɵɵdirectiveInject(CRUD_SERVICE), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ConfirmationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Router)); };
CrudListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CrudListComponent, selectors: [["nCrudList"]], contentQueries: function CrudListComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, Column, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columns = _t);
    } }, viewQuery: function CrudListComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.datatable = _t.first);
    } }, inputs: { action: "action", findLabel: "findLabel", disableSave: "disableSave", disableEdit: "disableEdit", disableView: "disableView", disableDelete: "disableDelete", url: "url", form: "form", service: "service", datatableExtraParams: "datatableExtraParams" }, outputs: { find: "find" }, ngContentSelectors: _c3, decls: 8, vars: 8, consts: [[3, "form", "saveLabel", "save"], ["nButton", "", 1, "ui-g-12", "ui-lg-2", "ui-md-4", "ui-sm-12"], ["pButton", "", "type", "button", "label", "Novo", 3, "routerLink", 4, "ngIf"], [3, "value", "url", "disableEdit", "disableView", "disableDelete", "buttonClick"], ["datatable", ""], ["header", "Confirmar Exclus\u00E3o", "acceptLabel", "Sim", "rejectLabel", "N\u00E3o", "icon", "pi pi-exclamation-triangle"], ["pButton", "", "type", "button", "label", "Novo", 3, "routerLink"]], template: function CrudListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c2);
        ɵngcc0.ɵɵelementStart(0, "nForm", 0);
        ɵngcc0.ɵɵlistener("save", function CrudListComponent_Template_nForm_save_0_listener($event) { return ctx.findAll($event); });
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵtemplate(3, CrudListComponent_button_3_Template, 1, 2, "button", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "basis-datatable", 3, 4);
        ɵngcc0.ɵɵlistener("buttonClick", function CrudListComponent_Template_basis_datatable_buttonClick_4_listener($event) { return ctx.datatableClick($event); });
        ɵngcc0.ɵɵprojection(6, 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(7, "p-confirmDialog", 5);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("form", ctx.form)("saveLabel", ctx.findLabel);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.disableSave);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("value", ctx.result)("url", ctx.url)("disableEdit", ctx.disableEdit)("disableView", ctx.disableView)("disableDelete", ctx.disableDelete);
    } }, directives: [ɵngcc3.FormComponent, ɵngcc4.NgIf, ɵngcc5.DatatableComponent, ɵngcc6.ConfirmDialog, ɵngcc7.ButtonDirective, ɵngcc2.RouterLink], encapsulation: 2 });
CrudListComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [CRUD_SERVICE,] }] },
    { type: ConfirmationService },
    { type: ActivatedRoute },
    { type: Router }
];
__decorate([
    Input()
], CrudListComponent.prototype, "form", void 0);
__decorate([
    Input()
], CrudListComponent.prototype, "action", void 0);
__decorate([
    Input()
], CrudListComponent.prototype, "findLabel", void 0);
__decorate([
    Input()
], CrudListComponent.prototype, "service", void 0);
__decorate([
    Input()
], CrudListComponent.prototype, "url", void 0);
__decorate([
    Input()
], CrudListComponent.prototype, "disableSave", void 0);
__decorate([
    Input()
], CrudListComponent.prototype, "disableEdit", void 0);
__decorate([
    Input()
], CrudListComponent.prototype, "disableView", void 0);
__decorate([
    Input()
], CrudListComponent.prototype, "disableDelete", void 0);
__decorate([
    Input()
], CrudListComponent.prototype, "datatableExtraParams", void 0);
__decorate([
    Output()
], CrudListComponent.prototype, "find", void 0);
__decorate([
    ViewChild('datatable', { static: true })
], CrudListComponent.prototype, "datatable", void 0);
__decorate([
    ContentChildren(Column)
], CrudListComponent.prototype, "columns", void 0);
CrudListComponent = __decorate([ __param(0, Inject(CRUD_SERVICE))
], CrudListComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CrudListComponent, [{
        type: Component,
        args: [{
                selector: 'nCrudList',
                template: "<nForm [form]=\"form\" (save)=\"findAll($event)\" [saveLabel]=\"findLabel\">\n    <ng-content select=\"[nForm]\"></ng-content>\n    <div nButton class=\"ui-g-12 ui-lg-2 ui-md-4 ui-sm-12\">\n        <button pButton type=\"button\" [routerLink]=\"['../save']\" label=\"Novo\" *ngIf=\"!disableSave\"></button>\n    </div>\n</nForm>\n\n<basis-datatable #datatable [value]=\"result\" (buttonClick)=\"datatableClick($event)\" [url]=\"url\"\n    [disableEdit]=\"disableEdit\" [disableView]=\"disableView\" [disableDelete]=\"disableDelete\">\n    <ng-content select=\"p-column\"></ng-content>\n</basis-datatable>\n\n<p-confirmDialog header=\"Confirmar Exclus\u00E3o\" acceptLabel=\"Sim\" rejectLabel=\"N\u00E3o\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\n"
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [CRUD_SERVICE]
            }] }, { type: ɵngcc1.ConfirmationService }, { type: ɵngcc2.ActivatedRoute }, { type: ɵngcc2.Router }]; }, { action: [{
            type: Input
        }], findLabel: [{
            type: Input
        }], disableSave: [{
            type: Input
        }], disableEdit: [{
            type: Input
        }], disableView: [{
            type: Input
        }], disableDelete: [{
            type: Input
        }], find: [{
            type: Output
        }], url: [{
            type: Input
        }], form: [{
            type: Input
        }], service: [{
            type: Input
        }], datatableExtraParams: [{
            type: Input
        }], datatable: [{
            type: ViewChild,
            args: ['datatable', { static: true }]
        }], columns: [{
            type: ContentChildren,
            args: [Column]
        }] }); })();
export { CrudListComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,