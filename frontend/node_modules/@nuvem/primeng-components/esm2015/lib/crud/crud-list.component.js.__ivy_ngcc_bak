import { __decorate, __param } from "tslib";
import { Component, Inject, Input, Output, EventEmitter, ViewChild, ContentChildren } from "@angular/core";
import { CRUD_SERVICE } from "./crud-service.service";
import { Router, ActivatedRoute } from "@angular/router";
import { Column } from '../datatable/p-column.directive';
import { ConfirmationService } from 'primeng/api';
let CrudListComponent = class CrudListComponent {
    constructor(crudService, confirmationService, route, router) {
        this.crudService = crudService;
        this.confirmationService = confirmationService;
        this.route = route;
        this.router = router;
        this.action = "findAll";
        this.findLabel = "Pesquisar";
        this.disableSave = false;
        this.disableEdit = false;
        this.disableView = false;
        this.disableDelete = false;
        this.find = new EventEmitter();
    }
    ngOnInit() {
        if (this.service) {
            this.crudService = this.service;
        }
        if (!this.url) {
            this.url = this.crudService.uri;
        }
    }
    datatableClick(event) {
        if (event.selection) {
            switch (event.button) {
                case "edit":
                case "view":
                    this.router.navigate([`../${event.button}`, event.selection.id], { relativeTo: this.route });
                    break;
                case "delete":
                    this.confirmationService.confirm({
                        message: 'VocÃª tem certeza que deseja excluir o registro?',
                        accept: () => this.crudService.delete(event.selection.id)
                            .subscribe(() => this.datatable.filter())
                    });
                    break;
            }
        }
    }
    findAll(event) {
        if (this.find.observers.length) {
            this.find.emit(this.form.value);
        }
        else {
            this.datatable.filterParams = {};
            Object.keys(this.form.value).forEach(element => {
                let value = this.form.value[element];
                if (value) {
                    this.datatable.filterParams[element] =
                        value instanceof Date ? JSON.stringify(value).replace(/"/g, "") : value;
                }
            });
            this.datatable.filter();
        }
    }
    ngAfterContentInit() {
        const datatableNgAfterContentInit = this.datatable.pDatatableComponent.ngAfterContentInit;
        this.datatable.pDatatableComponent.ngAfterContentInit = () => {
            this.datatable.pDatatableComponent.columns = this.columns.toArray();
            datatableNgAfterContentInit.call(this.datatable.pDatatableComponent);
        };
    }
    ngAfterViewInit() {
        for (let i in this.datatableExtraParams) {
            this.datatable[i] = this.datatableExtraParams[i];
        }
    }
};
CrudListComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [CRUD_SERVICE,] }] },
    { type: ConfirmationService },
    { type: ActivatedRoute },
    { type: Router }
];
__decorate([
    Input()
], CrudListComponent.prototype, "form", void 0);
__decorate([
    Input()
], CrudListComponent.prototype, "action", void 0);
__decorate([
    Input()
], CrudListComponent.prototype, "findLabel", void 0);
__decorate([
    Input()
], CrudListComponent.prototype, "service", void 0);
__decorate([
    Input()
], CrudListComponent.prototype, "url", void 0);
__decorate([
    Input()
], CrudListComponent.prototype, "disableSave", void 0);
__decorate([
    Input()
], CrudListComponent.prototype, "disableEdit", void 0);
__decorate([
    Input()
], CrudListComponent.prototype, "disableView", void 0);
__decorate([
    Input()
], CrudListComponent.prototype, "disableDelete", void 0);
__decorate([
    Input()
], CrudListComponent.prototype, "datatableExtraParams", void 0);
__decorate([
    Output()
], CrudListComponent.prototype, "find", void 0);
__decorate([
    ViewChild('datatable', { static: true })
], CrudListComponent.prototype, "datatable", void 0);
__decorate([
    ContentChildren(Column)
], CrudListComponent.prototype, "columns", void 0);
CrudListComponent = __decorate([
    Component({
        selector: 'nCrudList',
        template: "<nForm [form]=\"form\" (save)=\"findAll($event)\" [saveLabel]=\"findLabel\">\n    <ng-content select=\"[nForm]\"></ng-content>\n    <div nButton class=\"ui-g-12 ui-lg-2 ui-md-4 ui-sm-12\">\n        <button pButton type=\"button\" [routerLink]=\"['../save']\" label=\"Novo\" *ngIf=\"!disableSave\"></button>\n    </div>\n</nForm>\n\n<basis-datatable #datatable [value]=\"result\" (buttonClick)=\"datatableClick($event)\" [url]=\"url\"\n    [disableEdit]=\"disableEdit\" [disableView]=\"disableView\" [disableDelete]=\"disableDelete\">\n    <ng-content select=\"p-column\"></ng-content>\n</basis-datatable>\n\n<p-confirmDialog header=\"Confirmar Exclus\u00E3o\" acceptLabel=\"Sim\" rejectLabel=\"N\u00E3o\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\n"
    }),
    __param(0, Inject(CRUD_SERVICE))
], CrudListComponent);
export { CrudListComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3J1ZC1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BudXZlbS9wcmltZW5nLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvY3J1ZC9jcnVkLWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0gsU0FBUyxFQUFVLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFDdEQsU0FBUyxFQUFFLGVBQWUsRUFDN0IsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFlLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ25FLE9BQU8sRUFBRSxNQUFNLEVBQUUsY0FBYyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDekQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBSXpELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQU9sRCxJQUFhLGlCQUFpQixHQUE5QixNQUFhLGlCQUFpQjtJQThCMUIsWUFFVyxXQUFrQyxFQUNqQyxtQkFBd0MsRUFDeEMsS0FBcUIsRUFDckIsTUFBYztRQUhmLGdCQUFXLEdBQVgsV0FBVyxDQUF1QjtRQUNqQyx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXFCO1FBQ3hDLFVBQUssR0FBTCxLQUFLLENBQWdCO1FBQ3JCLFdBQU0sR0FBTixNQUFNLENBQVE7UUEvQmpCLFdBQU0sR0FBVyxTQUFTLENBQUM7UUFFM0IsY0FBUyxHQUFXLFdBQVcsQ0FBQztRQU1oQyxnQkFBVyxHQUFHLEtBQUssQ0FBQztRQUVwQixnQkFBVyxHQUFHLEtBQUssQ0FBQztRQUVwQixnQkFBVyxHQUFHLEtBQUssQ0FBQztRQUVwQixrQkFBYSxHQUFHLEtBQUssQ0FBQztRQUlyQixTQUFJLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7SUFjdkQsQ0FBQztJQUVOLFFBQVE7UUFDSixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFD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Q3BEO0lBQ0wsQ0FBQztDQUVKLENBQUE7OzRDQWhFUSxNQUFNLFNBQUMsWUFBWTtZQUVTLG1CQUFtQjtZQUNqQyxjQUFjO1lBQ2IsTUFBTTs7QUFqQ2pCO0lBQVIsS0FBSyxFQUFFOytDQUFpQjtBQUVoQjtJQUFSLEtBQUssRUFBRTtpREFBNEI7QUFFM0I7SUFBUixLQUFLLEVBQUU7b0RBQWlDO0FBRWhDO0lBQVIsS0FBSyxFQUFFO2tEQUFnQztBQUUvQjtJQUFSLEtBQUssRUFBRTs4Q0FBYTtBQUVaO0lBQVIsS0FBSyxFQUFFO3NEQUFxQjtBQUVwQjtJQUFSLEtBQUssRUFBRTtzREFBcUI7QUFFcEI7SUFBUixLQUFLLEVBQUU7c0RBQXFCO0FBRXBCO0lBQVIsS0FBSyxFQUFFO3dEQUF1QjtBQUV0QjtJQUFSLEtBQUssRUFBRTsrREFBMkI7QUFFekI7SUFBVCxNQUFNLEVBQUU7K0NBQW1EO0FBRWxCO0lBQXpDLFNBQVMsQ0FBQyxXQUFXLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7b0RBQStCO0FBRS9DO0lBQXhCLGVBQWUsQ0FBQyxNQUFNLENBQUM7a0RBQTRCO0FBMUIzQyxpQkFBaUI7SUFKN0IsU0FBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLFdBQVc7UUFDckIscXdCQUF5QztLQUM1QyxDQUFDO0lBZ0NPLFdBQUEsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFBO0dBL0JoQixpQkFBaUIsQ0ErRjdCO1NBL0ZZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ29tcG9uZW50LCBPbkluaXQsIEluamVjdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBBZnRlckNvbnRlbnRJbml0LFxuICAgIFZpZXdDaGlsZCwgQ29udGVudENoaWxkcmVuLCBRdWVyeUxpc3QsIENoYW5nZURldGVjdG9yUmVmXG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcbmltcG9ydCB7IENydWRTZXJ2aWNlLCBDUlVEX1NFUlZJQ0UgfSBmcm9tIFwiLi9jcnVkLXNlcnZpY2Uuc2VydmljZVwiO1xuaW1wb3J0IHsgUm91dGVyLCBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gXCJAYW5ndWxhci9yb3V0ZXJcIjtcbmltcG9ydCB7IENvbHVtbiB9IGZyb20gJy4uL2RhdGF0YWJsZS9wLWNvbHVtbi5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRGF0YXRhYmxlQ29tcG9uZW50IH0gZnJvbSAnLi4vZGF0YXRhYmxlL2RhdGF0YWJsZS5jb21wb25lbnQnXG5pbXBvcnQgeyBEYXRhdGFibGVDbGlja0V2ZW50IH0gZnJvbSAnLi4vZGF0YXRhYmxlL2RhdGF0YWJsZS1jbGljay1ldmVudCdcblxuaW1wb3J0IHsgQ29uZmlybWF0aW9uU2VydmljZSB9IGZyb20gJ3ByaW1lbmcvYXBpJztcbmltcG9ydCB7IFVybCB9IGZyb20gJ3VybCc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnbkNydWRMaXN0JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vY3J1ZC1saXN0LmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBDcnVkTGlzdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJDb250ZW50SW5pdCB7XG5cbiAgICBASW5wdXQoKSBmb3JtOiBGb3JtR3JvdXA7XG5cbiAgICBASW5wdXQoKSBhY3Rpb246IHN0cmluZyA9IFwiZmluZEFsbFwiO1xuXG4gICAgQElucHV0KCkgZmluZExhYmVsOiBzdHJpbmcgPSBcIlBlc3F1aXNhclwiO1xuXG4gICAgQElucHV0KCkgc2VydmljZTogQ3J1ZFNlcnZpY2U8YW55LCBhbnk+O1xuXG4gICAgQElucHV0KCkgdXJsOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKSBkaXNhYmxlU2F2ZSA9IGZhbHNlO1xuXG4gICAgQElucHV0KCkgZGlzYWJsZUVkaXQgPSBmYWxzZTtcblxuICAgIEBJbnB1dCgpIGRpc2FibGVWaWV3ID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKSBkaXNhYmxlRGVsZXRlID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKSBkYXRhdGFibGVFeHRyYVBhcmFtczogYW55O1xuXG4gICAgQE91dHB1dCgpIGZpbmQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgICBAVmlld0NoaWxkKCdkYXRhdGFibGUnLCB7IHN0YXRpYzogdHJ1ZSB9KSBkYXRhdGFibGU6IERhdGF0YWJsZUNvbXBvbmVudDtcblxuICAgIEBDb250ZW50Q2hpbGRyZW4oQ29sdW1uKSBjb2x1bW5zOiBRdWVyeUxpc3Q8Q29sdW1uPjtcblxuICAgIHJlc3VsdDogYW55W107XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChDUlVEX1NFUlZJQ0UpXG4gICAgICAgIHB1YmxpYyBjcnVkU2VydmljZTogQ3J1ZFNlcnZpY2U8YW55LCBhbnk+LFxuICAgICAgICBwcml2YXRlIGNvbmZpcm1hdGlvblNlcnZpY2U6IENvbmZpcm1hdGlvblNlcnZpY2UsXG4gICAgICAgIHByaXZhdGUgcm91dGU6IEFjdGl2YXRlZFJvdXRlLFxuICAgICAgICBwcml2YXRlIHJvdXRlcjogUm91dGVyXG4gICAgKSB7ICB9XG5cbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuc2VydmljZSkge1xuICAgICAgICAgICAgdGhpcy5jcnVkU2VydmljZSA9IHRoaXMuc2VydmljZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMudXJsKSB7XG4gICAgICAgICAgICB0aGlzLnVybCA9IHRoaXMuY3J1ZFNlcnZpY2UudXJpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkYXRhdGFibGVDbGljayhldmVudDogRGF0YXRhYmxlQ2xpY2tFdmVudCkge1xuICAgICAgICBpZiAoZXZlbnQuc2VsZWN0aW9uKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKGV2ZW50LmJ1dHRvbikge1xuICAgICAgICAgICAgICAgIGNhc2UgXCJlZGl0XCI6XG4gICAgICAgICAgICAgICAgY2FzZSBcInZpZXdcIjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yb3V0ZXIubmF2aWdhdGUoW2AuLi8ke2V2ZW50LmJ1dHRvbn1gLCBldmVudC5zZWxlY3Rpb24uaWRdLCB7IHJlbGF0aXZlVG86IHRoaXMucm91dGUgfSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJkZWxldGVcIjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb25maXJtYXRpb25TZXJ2aWNlLmNvbmZpcm0oe1xuICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ1ZvY8OqIHRlbSBjZXJ0ZXphIHF1ZSBkZXNlamEgZXhjbHVpciBvIHJlZ2lzdHJvPycsXG4gICAgICAgICAgICAgICAgICAgICAgICBhY2NlcHQ6ICgpID0+IHRoaXMuY3J1ZFNlcnZpY2UuZGVsZXRlKGV2ZW50LnNlbGVjdGlvbi5pZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc3Vic2NyaWJlKCgpID0+IHRoaXMuZGF0YXRhYmxlLmZpbHRlcigpKVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmaW5kQWxsKGV2ZW50OiBhbnkpIHtcbiAgICAgICAgaWYgKHRoaXMuZmluZC5vYnNlcnZlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aGlzLmZpbmQuZW1pdCh0aGlzLmZvcm0udmFsdWUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5kYXRhdGFibGUuZmlsdGVyUGFyYW1zID0ge307XG4gICAgICAgICAgICBPYmplY3Qua2V5cyh0aGlzLmZvcm0udmFsdWUpLmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IHZhbHVlID0gdGhpcy5mb3JtLnZhbHVlW2VsZW1lbnRdO1xuICAgICAgICAgICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRhdGF0YWJsZS5maWx0ZXJQYXJhbXNbZWxlbWVudF0gPVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgaW5zdGFuY2VvZiBEYXRlID8gSlNPTi5zdHJpbmdpZnkodmFsdWUpLnJlcGxhY2UoL1wiL2csIFwiXCIpIDogdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLmRhdGF0YWJsZS5maWx0ZXIoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcbiAgICAgICAgY29uc3QgZGF0YXRhYmxlTmdBZnRlckNvbnRlbnRJbml0ID0gdGhpcy5kYXRhdGFibGUucERhdGF0YWJsZUNvbXBvbmVudC5uZ0FmdGVyQ29udGVudEluaXQ7XG4gICAgICAgIHRoaXMuZGF0YXRhYmxlLnBEYXRhdGFibGVDb21wb25lbnQubmdBZnRlckNvbnRlbnRJbml0ID0gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5kYXRhdGFibGUucERhdGF0YWJsZUNvbXBvbmVudC5jb2x1bW5zID0gdGhpcy5jb2x1bW5zLnRvQXJyYXkoKTtcbiAgICAgICAgICAgIGRhdGF0YWJsZU5nQWZ0ZXJDb250ZW50SW5pdC5jYWxsKHRoaXMuZGF0YXRhYmxlLnBEYXRhdGFibGVDb21wb25lbnQpO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICAgICAgZm9yIChsZXQgaSBpbiB0aGlzLmRhdGF0YWJsZUV4dHJhUGFyYW1zKSB7XG4gICAgICAgICAgICB0aGlzLmRhdGF0YWJsZVtpXSA9IHRoaXMuZGF0YXRhYmxlRXh0cmFQYXJhbXNbaV07XG4gICAgICAgIH1cbiAgICB9XG5cbn1cbiJdfQ==