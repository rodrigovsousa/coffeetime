import { __decorate, __param } from "tslib";
import { Component, Inject, Input, Output, EventEmitter } from "@angular/core";
import { CRUD_SERVICE } from "./crud-service.service";
import { Router, ActivatedRoute } from "@angular/router";
let FormComponent = class FormComponent {
    constructor(crudService, activatedRoute, router) {
        this.crudService = crudService;
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.action = "save";
        this.saveLabel = "Salvar";
        this.disableSave = false;
        this.save = new EventEmitter();
        this.reset = new EventEmitter();
    }
    ngOnInit() {
        if (this.service) {
            this.crudService = this.service;
        }
    }
    submit() {
        if (this.save.observers.length) {
            this.save.emit(this.form.value);
        }
        else {
            this.crudService[this.action](this.form.value)
                .subscribe(() => {
                if (this.route) {
                    this.router.navigate(this.route, { relativeTo: this.activatedRoute });
                }
                else if (this.reset.observers.length) {
                    this.reset.emit(this.form);
                }
                else {
                    this.form.reset();
                }
            });
        }
    }
};
FormComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [CRUD_SERVICE,] }] },
    { type: ActivatedRoute },
    { type: Router }
];
__decorate([
    Input()
], FormComponent.prototype, "form", void 0);
__decorate([
    Input()
], FormComponent.prototype, "route", void 0);
__decorate([
    Input()
], FormComponent.prototype, "action", void 0);
__decorate([
    Input()
], FormComponent.prototype, "saveLabel", void 0);
__decorate([
    Input()
], FormComponent.prototype, "service", void 0);
__decorate([
    Input()
], FormComponent.prototype, "disableSave", void 0);
__decorate([
    Output()
], FormComponent.prototype, "save", void 0);
__decorate([
    Output()
], FormComponent.prototype, "reset", void 0);
FormComponent = __decorate([
    Component({
        selector: 'nForm',
        template: "<div>\n    <form (submit)=\"submit()\" class=\"ui-g form-group\">\n        <ng-content></ng-content>\n        <div class=\"ui-g-12 ui-lg-2 ui-md-4 ui-sm-12\" *ngIf=\"!disableSave\">\n            <button pButton type=\"submit\" [label]=\"saveLabel\" [disabled]=\"form.disabled || form.invalid\"></button>\n        </div>\n        <ng-content select=\"[nButton]\"></ng-content>\n    </form>\n</div>"
    }),
    __param(0, Inject(CRUD_SERVICE))
], FormComponent);
export { FormComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbnV2ZW0vcHJpbWVuZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NydWQvZm9ybS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXZGLE9BQU8sRUFBZSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsTUFBTSxFQUFFLGNBQWMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBTXpELElBQWEsYUFBYSxHQUExQixNQUFhLGFBQWE7SUFpQnRCLFlBRVksV0FBa0MsRUFDbEMsY0FBOEIsRUFDOUIsTUFBYztRQUZkLGdCQUFXLEdBQVgsV0FBVyxDQUF1QjtRQUNsQyxtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7UUFDOUIsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQWZqQixXQUFNLEdBQVcsTUFBTSxDQUFDO1FBRXhCLGNBQVMsR0FBVyxRQUFRLENBQUM7UUFJN0IsZ0JBQVcsR0FBWSxLQUFLLENBQUM7UUFFNUIsU0FBSSxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO1FBRWxELFVBQUssR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQU0xRCxDQUFDO0lBRUosUUFBUTtRQUNKLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNkLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztTQUNuQztJQUNMLENBQUM7SUFFRCxNQUFNO1FBQ0YsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUU7WUFDNUIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUNuQzthQUFNO1lBQ0gsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7aUJBQzdDLFNBQVMsQ0FBQyxHQUFHLEVBQUU7Z0JBQ1osSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO29CQUNaLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsRUFBRSxVQUFVLEVBQUUsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUM7aUJBQ3pFO3FCQUFNLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFO29CQUNwQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7aUJBQzlCO3FCQUFNO29CQUNILElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7aUJBQ3JCO1lBQ0wsQ0FBQyxDQUFDLENBQUM7U0FDTjtJQUNMLENBQUM7Q0FFSixDQUFBOzs0Q0E3QlEsTUFBTSxTQUFDLFlBQVk7WUFFSSxjQUFjO1lBQ3RCLE1BQU07O0FBbkJqQjtJQUFSLEtBQUssRUFBRTsyQ0FBaUI7QUFFaEI7SUFBUixLQUFLLEVBQUU7NENBQVc7QUFFVjtJQUFSLEtBQUssRUFBRTs2Q0FBeUI7QUFFeEI7SUFBUixLQUFLLEVBQUU7Z0RBQThCO0FBRTdCO0lBQVIsS0FBSyxFQUFFOzhDQUFnQztBQUUvQjtJQUFSLEtBQUssRUFBRTtrREFBOEI7QUFFNUI7SUFBVCxNQUFNLEVBQUU7MkNBQW1EO0FBRWxEO0lBQVQsTUFBTSxFQUFFOzRDQUFvRDtBQWhCcEQsYUFBYTtJQUp6QixTQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsT0FBTztRQUNqQix3WkFBb0M7S0FDdkMsQ0FBQztJQW1CTyxXQUFBLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQTtHQWxCaEIsYUFBYSxDQStDekI7U0EvQ1ksYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbmplY3QsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcbmltcG9ydCB7IENydWRTZXJ2aWNlLCBDUlVEX1NFUlZJQ0UgfSBmcm9tIFwiLi9jcnVkLXNlcnZpY2Uuc2VydmljZVwiO1xuaW1wb3J0IHsgUm91dGVyLCBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gXCJAYW5ndWxhci9yb3V0ZXJcIjtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICduRm9ybScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2Zvcm0uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gICAgQElucHV0KCkgZm9ybTogRm9ybUdyb3VwO1xuXG4gICAgQElucHV0KCkgcm91dGU6IFtdO1xuXG4gICAgQElucHV0KCkgYWN0aW9uOiBzdHJpbmcgPSBcInNhdmVcIjtcblxuICAgIEBJbnB1dCgpIHNhdmVMYWJlbDogc3RyaW5nID0gXCJTYWx2YXJcIjtcblxuICAgIEBJbnB1dCgpIHNlcnZpY2U6IENydWRTZXJ2aWNlPGFueSwgYW55PjtcblxuICAgIEBJbnB1dCgpIGRpc2FibGVTYXZlOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBAT3V0cHV0KCkgc2F2ZTogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICAgIEBPdXRwdXQoKSByZXNldDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChDUlVEX1NFUlZJQ0UpXG4gICAgICAgIHByaXZhdGUgY3J1ZFNlcnZpY2U6IENydWRTZXJ2aWNlPGFueSwgYW55PixcbiAgICAgICAgcHJpdmF0ZSBhY3RpdmF0ZWRSb3V0ZTogQWN0aXZhdGVkUm91dGUsXG4gICAgICAgIHByaXZhdGUgcm91dGVyOiBSb3V0ZXJcbiAgICApIHt9XG5cbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuc2VydmljZSkge1xuICAgICAgICAgICAgdGhpcy5jcnVkU2VydmljZSA9IHRoaXMuc2VydmljZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHN1Ym1pdCgpIHtcbiAgICAgICAgaWYgKHRoaXMuc2F2ZS5vYnNlcnZlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aGlzLnNhdmUuZW1pdCh0aGlzLmZvcm0udmFsdWUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5jcnVkU2VydmljZVt0aGlzLmFjdGlvbl0odGhpcy5mb3JtLnZhbHVlKVxuICAgICAgICAgICAgLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucm91dGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yb3V0ZXIubmF2aWdhdGUodGhpcy5yb3V0ZSwgeyByZWxhdGl2ZVRvOiB0aGlzLmFjdGl2YXRlZFJvdXRlIH0pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5yZXNldC5vYnNlcnZlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVzZXQuZW1pdCh0aGlzLmZvcm0pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZm9ybS5yZXNldCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG59XG4iXX0=