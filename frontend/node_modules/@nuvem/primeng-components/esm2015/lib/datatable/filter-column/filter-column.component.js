import { __decorate } from "tslib";
import { Component, EventEmitter, Output, Input } from '@angular/core';
import { Subject } from 'rxjs';
import { debounceTime } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/forms';
import * as ɵngcc3 from 'primeng';

function FilterColumn_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r945 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 2);
    ɵngcc0.ɵɵelementStart(2, "div", 3);
    ɵngcc0.ɵɵelementStart(3, "span", 4);
    ɵngcc0.ɵɵelementStart(4, "input", 5);
    ɵngcc0.ɵɵlistener("input", function FilterColumn_div_1_Template_input_input_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r945); const ctx_r944 = ɵngcc0.ɵɵnextContext(); return ctx_r944.filtrar($event); })("ngModelChange", function FilterColumn_div_1_Template_input_ngModelChange_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r945); const ctx_r946 = ɵngcc0.ɵɵnextContext(); return ctx_r946.filtro = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "label");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r942 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r942.filtro);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r942.header ? ctx_r942.header : "Filtro");
} }
const _c0 = function () { return { "width": "100%" }; };
const _c1 = function () { return { standalone: true }; };
function FilterColumn_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r948 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "p-multiSelect", 6);
    ɵngcc0.ɵɵlistener("onChange", function FilterColumn_div_2_Template_p_multiSelect_onChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r948); const ctx_r947 = ɵngcc0.ɵɵnextContext(); return ctx_r947.filtrar($event); })("ngModelChange", function FilterColumn_div_2_Template_p_multiSelect_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r948); const ctx_r949 = ɵngcc0.ɵɵnextContext(); return ctx_r949.filtro = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r943 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleMap(ɵngcc0.ɵɵpureFunction0(7, _c0));
    ɵngcc0.ɵɵproperty("options", ctx_r943.getCustomFilterOptions())("defaultLabel", ctx_r943.header ? ctx_r943.header : "\u00A0")("optionLabel", "label")("ngModelOptions", ɵngcc0.ɵɵpureFunction0(8, _c1))("ngModel", ctx_r943.filtro);
} }
let FilterColumn = class FilterColumn {
    constructor() {
        this.listaOriginal = [];
        this.lista = [];
        this.labelDefaultImplementation = false;
        this.updateFiltro = false;
        this.customFilterOptions = {};
        this.template = 'filter_text';
        this.outputEvent = new EventEmitter();
        this.debouncer = new Subject();
        this.resultado = [];
        this.listaFields = [];
    }
    ngOnInit() {
        this.debouncer
            .pipe(debounceTime((this.tableType === 'memory') ? 300 : 1000))
            .subscribe((value) => this.outputEvent.emit(value));
        this.template = `filter_${this.filterType}`;
    }
    ngOnChanges(changes) {
        if (this.checkChanges(changes, 'listaOriginal')) {
            this.preencherFields();
        }
    }
    checkChanges(changes, property) {
        return changes[property] && changes[property].previousValue != changes[property].currentValue;
    }
    /**
     * Método para propagar o evento de filtragem
     * @param event filtro
     */
    filtrar(event) {
        this.debouncer.next(this.filtro);
    }
    /**
     * Preenche os itens que serão exibidos no multiselect, removendo duplicidades
     */
    preencherFields() {
        this.listaFields = [];
        this.listaOriginal.filter(pi => pi[this.field] !== null).forEach(row => {
            let item = { label: row[this.field], value: row[this.field] };
            if (!this.verificarSeExisteField(item)) {
                this.listaFields.push(item);
            }
        });
    }
    /**
     *
     * @param field Verifica duplicidade de fields nas opções de seleção
     */
    verificarSeExisteField(field) {
        return this.listaFields.some(item => {
            return item.value == field.value;
        });
    }
    /**
     * Caso o usuaŕio não forneça uma lista para o options, será criada uma lista com
     * os valores presentes na tabela
     */
    getCustomFilterOptions() {
        if (this.customFilterOptions.hasOwnProperty(this.field)) {
            return this.customFilterOptions[this.field];
        }
        return this.listaFields;
    }
};
FilterColumn.ɵfac = function FilterColumn_Factory(t) { return new (t || FilterColumn)(); };
FilterColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FilterColumn, selectors: [["basis-filter-column"]], inputs: { listaOriginal: "listaOriginal", lista: "lista", labelDefaultImplementation: "labelDefaultImplementation", updateFiltro: "updateFiltro", customFilterOptions: "customFilterOptions", template: "template", field: "field", header: "header", labelDefaultName: "labelDefaultName", filterType: "filterType", tableType: "tableType" }, outputs: { outputEvent: "outputEvent" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 3, vars: 3, consts: [[3, "ngSwitch"], [4, "ngSwitchCase"], [1, "ui-g", "form-group"], [1, "ui-md-12"], [1, "md-inputfield"], ["type", "text", "pInputText", "", 3, "ngModel", "input", "ngModelChange"], ["appendTo", "body", 3, "options", "defaultLabel", "optionLabel", "ngModelOptions", "ngModel", "onChange", "ngModelChange"]], template: function FilterColumn_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, FilterColumn_div_1_Template, 7, 2, "div", 1);
        ɵngcc0.ɵɵtemplate(2, FilterColumn_div_2_Template, 2, 9, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngSwitch", ctx.filterType);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "text");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "select");
    } }, directives: [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc2.DefaultValueAccessor, ɵngcc3.InputText, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc3.MultiSelect], encapsulation: 2 });
__decorate([
    Input()
], FilterColumn.prototype, "listaOriginal", void 0);
__decorate([
    Input()
], FilterColumn.prototype, "lista", void 0);
__decorate([
    Input()
], FilterColumn.prototype, "field", void 0);
__decorate([
    Input()
], FilterColumn.prototype, "header", void 0);
__decorate([
    Input()
], FilterColumn.prototype, "labelDefaultImplementation", void 0);
__decorate([
    Input()
], FilterColumn.prototype, "labelDefaultName", void 0);
__decorate([
    Input()
], FilterColumn.prototype, "updateFiltro", void 0);
__decorate([
    Input()
], FilterColumn.prototype, "filterType", void 0);
__decorate([
    Input()
], FilterColumn.prototype, "tableType", void 0);
__decorate([
    Input()
], FilterColumn.prototype, "customFilterOptions", void 0);
__decorate([
    Input()
], FilterColumn.prototype, "template", void 0);
__decorate([
    Output()
], FilterColumn.prototype, "outputEvent", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FilterColumn, [{
        type: Component,
        args: [{
                selector: 'basis-filter-column',
                template: "<div [ngSwitch]=\"filterType\">\n    <div *ngSwitchCase=\"'text'\">\n        <div class=\"ui-g form-group\">\n            <div class=\"ui-md-12\">\n                <span class=\"md-inputfield\">\n                    <input type=\"text\" pInputText (input)=\"filtrar($event)\" [(ngModel)]=\"filtro\">\n                    <label>{{ (header) ? header : 'Filtro' }}</label>\n                </span>\n            </div>\n        </div>\n    </div>\n    <div *ngSwitchCase=\"'select'\">\n        <p-multiSelect\n            [options]=\"getCustomFilterOptions()\"\n            [defaultLabel]=\"(header)? header: '&nbsp;'\"\n            [optionLabel]=\"'label'\"\n            appendTo=\"body\"\n            [ngModelOptions]=\"{standalone: true}\"\n            (onChange)=\"filtrar($event)\"\n            [(ngModel)]=\"filtro\"\n            [style]=\"{'width':'100%'}\">\n        </p-multiSelect>\n    </div>\n</div>\n"
            }]
    }], function () { return []; }, { listaOriginal: [{
            type: Input
        }], lista: [{
            type: Input
        }], labelDefaultImplementation: [{
            type: Input
        }], updateFiltro: [{
            type: Input
        }], customFilterOptions: [{
            type: Input
        }], template: [{
            type: Input
        }], outputEvent: [{
            type: Output
        }], field: [{
            type: Input
        }], header: [{
            type: Input
        }], labelDefaultName: [{
            type: Input
        }], filterType: [{
            type: Input
        }], tableType: [{
            type: Input
        }] }); })();
export { FilterColumn };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,