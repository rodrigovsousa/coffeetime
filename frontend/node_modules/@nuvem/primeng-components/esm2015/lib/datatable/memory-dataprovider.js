/**
 * Class MemoryDataProvider
 * @class
 */
export class MemoryDataProvider {
    /**
     * constructor method
     * @param {DatatableComponent} component
     * @constructor
     */
    constructor(component) {
        this.component = component;
    }
    /**
     * load method
     * @param {any} query
     * @returns void
     */
    load(query) {
        this.component.pDatatableComponent.reset();
        for (let prop in query) {
            let matchMode = 'contains';
            if (query[prop] instanceof Array) {
                matchMode = 'in';
            }
            this.component.pDatatableComponent.filter(query[prop], prop, matchMode);
        }
        this.component.pDatatableComponent.globalFilterFields = query;
        this.component.pDatatableComponent._filter();
    }
    /**
     * reset method
     * @returns void
     */
    reset() {
        this.component.pDatatableComponent.globalFilterFields = undefined;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVtb3J5LWRhdGFwcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BudXZlbS9wcmltZW5nLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvZGF0YXRhYmxlL21lbW9yeS1kYXRhcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7OztHQUdHO0FBQ0gsTUFBTSxPQUFPLGtCQUFrQjtJQUUzQjs7OztPQUlHO0lBQ0gsWUFBb0IsU0FBNkI7UUFBN0IsY0FBUyxHQUFULFNBQVMsQ0FBb0I7SUFBRyxDQUFDO0lBRXJEOzs7O09BSUc7SUFDSCxJQUFJLENBQUMsS0FBWTtRQUNiLElBQUksQ0FBQyxTQUFTLENBQUMsbUJBQW1CLENBQUMsS0FBSyxFQUFFLENBQUM7UUFFM0MsS0FBSyxJQUFJLElBQUksSUFBSSxLQUFLLEVBQUU7WUFDcEIsSUFBSSxTQUFTLEdBQUcsVUFBVSxDQUFDO1lBQzNCLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxZQUFZLEtBQUssRUFBRTtnQkFDOUIsU0FBUyxHQUFHLElBQUksQ0FBQzthQUNwQjtZQUNELElBQUksQ0FBQyxTQUFTLENBQUMsbUJBQW1CLENBQUMsTUFBTSxDQUNyQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQ1gsSUFBSSxFQUNKLFNBQVMsQ0FDWixDQUFDO1NBQ0w7UUFFRCxJQUFJLENBQUMsU0FBUyxDQUFDLG1CQUFtQixDQUFDLGtCQUFrQixHQUFHLEtBQUssQ0FBQztRQUM5RCxJQUFJLENBQUMsU0FBUyxDQUFDLG1CQUFtQixDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ2pELENBQUM7SUFFRDs7O09BR0c7SUFDSCxLQUFLO1FBQ0QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxtQkFBbUIsQ0FBQyxrQkFBa0IsR0FBRyxTQUFTLENBQUM7SUFDdEUsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGF0YVByb3ZpZGVyIH0gZnJvbSAnLi9kYXRhcHJvdmlkZXInO1xuaW1wb3J0IHsgRGF0YXRhYmxlQ29tcG9uZW50IH0gZnJvbSAnLi9kYXRhdGFibGUuY29tcG9uZW50JztcblxuLyoqXG4gKiBDbGFzcyBNZW1vcnlEYXRhUHJvdmlkZXJcbiAqIEBjbGFzc1xuICovXG5leHBvcnQgY2xhc3MgTWVtb3J5RGF0YVByb3ZpZGVyIGltcGxlbWVudHMgRGF0YVByb3ZpZGVyIHtcblxuICAgIC8qKlxuICAgICAqIGNvbnN0cnVjdG9yIG1ldGhvZFxuICAgICAqIEBwYXJhbSB7RGF0YXRhYmxlQ29tcG9uZW50fSBjb21wb25lbnRcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNvbXBvbmVudDogRGF0YXRhYmxlQ29tcG9uZW50KSB7fVxuXG4gICAgLyoqXG4gICAgICogbG9hZCBtZXRob2RcbiAgICAgKiBAcGFyYW0ge2FueX0gcXVlcnlcbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgbG9hZChxdWVyeSA/OiBhbnkpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5jb21wb25lbnQucERhdGF0YWJsZUNvbXBvbmVudC5yZXNldCgpO1xuICAgICAgICBcbiAgICAgICAgZm9yIChsZXQgcHJvcCBpbiBxdWVyeSkge1xuICAgICAgICAgICAgbGV0IG1hdGNoTW9kZSA9ICdjb250YWlucyc7XG4gICAgICAgICAgICBpZiAocXVlcnlbcHJvcF0gaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICAgICAgICAgIG1hdGNoTW9kZSA9ICdpbic7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmNvbXBvbmVudC5wRGF0YXRhYmxlQ29tcG9uZW50LmZpbHRlcihcbiAgICAgICAgICAgICAgICBxdWVyeVtwcm9wXSxcbiAgICAgICAgICAgICAgICBwcm9wLFxuICAgICAgICAgICAgICAgIG1hdGNoTW9kZVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuY29tcG9uZW50LnBEYXRhdGFibGVDb21wb25lbnQuZ2xvYmFsRmlsdGVyRmllbGRzID0gcXVlcnk7XG4gICAgICAgIHRoaXMuY29tcG9uZW50LnBEYXRhdGFibGVDb21wb25lbnQuX2ZpbHRlcigpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHJlc2V0IG1ldGhvZFxuICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgKi9cbiAgICByZXNldCgpIHtcbiAgICAgICAgdGhpcy5jb21wb25lbnQucERhdGF0YWJsZUNvbXBvbmVudC5nbG9iYWxGaWx0ZXJGaWVsZHMgPSB1bmRlZmluZWQ7XG4gICAgfVxufVxuIl19