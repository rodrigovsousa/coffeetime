import { __decorate } from "tslib";
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { PageNotificationService } from './../../page-notification/page-notification.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'primeng';
import * as ɵngcc2 from '@angular/forms';

const _c0 = function () { return { width: "100%" }; };
const _c1 = function () { return { standalone: true }; };
let ShowColumn = class ShowColumn {
    constructor(pageNotificationService) {
        this.pageNotificationService = pageNotificationService;
        /**
         * lista de colunas disponívels na tabela
         * @type {Array}
         */
        this.options = [];
        /**
         * Valores do select de colunas
         * @type {Array}
         */
        this.values = [];
        /**
         * Último valor válido para o select.
         * @type {Array}
         */
        this.lastValue = [];
        /**
         * Evento para atualizar a visibilidade das colunas da tabela
         * @type {EventEmitter}
         */
        this.updateVisibleColumns = new EventEmitter();
    }
    ngOnInit() {
        this.columns.forEach((column) => {
            const col = { field: column.field, filterType: column.filterType, header: column.header };
            this.options.push(col);
            this.values.push(col);
            this.lastValue.push(col);
        });
    }
    mostrarColunas(event) {
        if (this.values.length) {
            this.lastValue = event.value;
            this.updateVisibleColumns.emit(this.values);
        }
        else {
            this.lastValue.map((item) => this.values.push(item));
            this.pageNotificationService.addErrorMessage('Não é possível exibir menos de uma coluna');
        }
    }
};
ShowColumn.ɵfac = function ShowColumn_Factory(t) { return new (t || ShowColumn)(ɵngcc0.ɵɵdirectiveInject(PageNotificationService)); };
ShowColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ShowColumn, selectors: [["basis-show-column"]], inputs: { columns: "columns" }, outputs: { updateVisibleColumns: "updateVisibleColumns" }, decls: 6, vars: 9, consts: [[1, "ui-g-12", "ui-g-nopad"], [1, "ui-g-3", "ui-md-offset-6"], [1, "text-right"], [1, "ui-g-3"], ["defaultLabel", "Selecione as colunas a serem exibidas", 1, "column", 3, "optionLabel", "displaySelectedLabel", "ngModelOptions", "options", "ngModel", "onChange", "ngModelChange"]], template: function ShowColumn_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtext(3, "Visibilidade das Colunas:");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 3);
        ɵngcc0.ɵɵelementStart(5, "p-multiSelect", 4);
        ɵngcc0.ɵɵlistener("onChange", function ShowColumn_Template_p_multiSelect_onChange_5_listener($event) { return ctx.mostrarColunas($event); })("ngModelChange", function ShowColumn_Template_p_multiSelect_ngModelChange_5_listener($event) { return ctx.values = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵstyleMap(ɵngcc0.ɵɵpureFunction0(7, _c0));
        ɵngcc0.ɵɵproperty("optionLabel", "header")("displaySelectedLabel", false)("ngModelOptions", ɵngcc0.ɵɵpureFunction0(8, _c1))("options", ctx.options)("ngModel", ctx.values);
    } }, directives: [ɵngcc1.MultiSelect, ɵngcc2.NgControlStatus, ɵngcc2.NgModel], encapsulation: 2 });
ShowColumn.ctorParameters = () => [
    { type: PageNotificationService }
];
__decorate([
    Input()
], ShowColumn.prototype, "columns", void 0);
__decorate([
    Output()
], ShowColumn.prototype, "updateVisibleColumns", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShowColumn, [{
        type: Component,
        args: [{
                selector: 'basis-show-column',
                template: "<div class=\"ui-g-12 ui-g-nopad\">\n    <div class=\"ui-g-3 ui-md-offset-6\">\n        <div class=\"text-right\">Visibilidade das Colunas:</div>\n    </div>\n    <div class=\"ui-g-3\">\n        <p-multiSelect\n            class=\"column\"\n            defaultLabel=\"Selecione as colunas a serem exibidas\"\n            [optionLabel]=\"'header'\"\n            [displaySelectedLabel]=\"false\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            (onChange)=\"mostrarColunas($event)\"\n            [options]=\"options\"\n            [(ngModel)]=\"values\"\n            [style]=\"{ width: '100%' }\"\n        >\n        </p-multiSelect>\n    </div>\n</div>\n"
            }]
    }], function () { return [{ type: PageNotificationService }]; }, { updateVisibleColumns: [{
            type: Output
        }], columns: [{
            type: Input
        }] }); })();
export { ShowColumn };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hvdy1jb2x1bW4uY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZzovQG51dmVtL3ByaW1lbmctY29tcG9uZW50cy9saWIvZGF0YXRhYmxlL3Nob3ctY29sdW1uL3Nob3ctY29sdW1uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0scURBQXFELENBQUM7Ozs7Ozs7QUFNOUYsSUFBYSxVQUFVLEdBQXZCLE1BQWEsVUFBVTtBQUFHLElBZ0N0QixZQUFvQix1QkFBZ0Q7QUFBSSxRQUFwRCw0QkFBdUIsR0FBdkIsdUJBQXVCLENBQXlCO0FBQUMsUUF4QnJFO0FBQ0o7QUFDSTtBQUVKLFdBRE87QUFDUCxRQUFJLFlBQU8sR0FBVSxFQUFFLENBQUM7QUFDeEIsUUFDSTtBQUNKO0FBQ0k7QUFFSixXQURPO0FBQ1AsUUFBSSxXQUFNLEdBQVUsRUFBRSxDQUFDO0FBQ3ZCLFFBQ0k7QUFDSjtBQUNJO0FBRUosV0FETztBQUNQLFFBQVksY0FBUyxHQUFVLEVBQUUsQ0FBQztBQUNsQyxRQUNJO0FBQ0o7QUFDSTtBQUVKLFdBRE87QUFDUCxRQUFjLHlCQUFvQixHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQzNFLElBQzJFLENBQUM7QUFDNUUsSUFDSSxRQUFRO0FBQUssUUFDVCxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFO0FBQ3hDLFlBQVksTUFBTSxHQUFHLEdBQUcsRUFBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLEtBQUssRUFBRSxVQUFVLEVBQUUsTUFBTSxDQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLE1BQU0sRUFBQyxDQUFDO0FBQ3BHLFlBQVksSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDbkMsWUFBWSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTtBQUNqQyxZQUFZLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3JDLFFBQVEsQ0FBQyxDQUFDLENBQUM7QUFDWCxJQUFJLENBQUM7QUFDTCxJQUNJLGNBQWMsQ0FBQyxLQUFLO0FBQ3hCLFFBQVEsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRTtBQUNoQyxZQUFZLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztBQUN6QyxZQUFZLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3hELFNBQUc7QUFBQyxhQUFLO0FBQ1QsWUFBWSxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUNqRSxZQUFHLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxlQUFlLENBQUMsMkNBQTJDLENBQUMsQ0FBQztBQUM3RixTQUFTO0FBQ1QsSUFBSSxDQUFDO0FBQ0wsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt1R0FBQTtBQUNEO0FBQW9DLFlBckJhLHVCQUF1QjtBQUFHO0FBMUI5RDtBQUFhLElBQXJCLEtBQUssRUFBRTtBQUFDLDJDQUF3QjtBQXdCdkI7QUFBYSxJQUF0QixNQUFNLEVBQUU7QUFBQyx3REFBNkQ7QUE5QjlELFVBQVUsb0JBSnRCLFNBQVMsQ0FBQyxVQUNQLFFBQVEsRUFBRTtVQUFtQixVQUM3Qjs7O3NtQkFBMkMsTUFDOUMsQ0FBQyxJQUNXLFVBQVUsQ0FvRHRCOzs7Ozs7b0JBQ0Q7QUFBQyxTQXJEWSxVQUFVO0FBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQsIFF1ZXJ5TGlzdCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBhZ2VOb3RpZmljYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi8uLi8uLi9wYWdlLW5vdGlmaWNhdGlvbi9wYWdlLW5vdGlmaWNhdGlvbi5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdiYXNpcy1zaG93LWNvbHVtbicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3Nob3ctY29sdW1uLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBTaG93Q29sdW1uIGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgIC8qKlxuICAgICAqIGF0cmlidXRvIHF1ZSByZXByZXNlbnRhIGFzIGNvbHVuYXMgZGEgdGFiZWxhXG4gICAgICogQHR5cGUge1F1ZXJ5TGlzdH1cbiAgICAgKi9cbiAgICBASW5wdXQoKSBjb2x1bW5zOiBRdWVyeUxpc3Q8YW55PjtcblxuICAgIC8qKlxuICAgICAqIGxpc3RhIGRlIGNvbHVuYXMgZGlzcG9uw612ZWxzIG5hIHRhYmVsYVxuICAgICAqIEB0eXBlIHtBcnJheX1cbiAgICAgKi9cbiAgICBvcHRpb25zOiBhbnlbXSA9IFtdO1xuXG4gICAgLyoqXG4gICAgICogVmFsb3JlcyBkbyBzZWxlY3QgZGUgY29sdW5hc1xuICAgICAqIEB0eXBlIHtBcnJheX1cbiAgICAgKi9cbiAgICB2YWx1ZXM6IGFueVtdID0gW107XG5cbiAgICAvKipcbiAgICAgKiDDmmx0aW1vIHZhbG9yIHbDoWxpZG8gcGFyYSBvIHNlbGVjdC5cbiAgICAgKiBAdHlwZSB7QXJyYXl9XG4gICAgICovXG4gICAgcHJpdmF0ZSBsYXN0VmFsdWU6IGFueVtdID0gW107XG5cbiAgICAvKipcbiAgICAgKiBFdmVudG8gcGFyYSBhdHVhbGl6YXIgYSB2aXNpYmlsaWRhZGUgZGFzIGNvbHVuYXMgZGEgdGFiZWxhXG4gICAgICogQHR5cGUge0V2ZW50RW1pdHRlcn1cbiAgICAgKi9cbiAgICBAT3V0cHV0KCkgdXBkYXRlVmlzaWJsZUNvbHVtbnM6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBwYWdlTm90aWZpY2F0aW9uU2VydmljZTogUGFnZU5vdGlmaWNhdGlvblNlcnZpY2UpIHt9XG5cbiAgICBuZ09uSW5pdCAoKSB7XG4gICAgICAgIHRoaXMuY29sdW1ucy5mb3JFYWNoKChjb2x1bW4pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGNvbCA9IHtmaWVsZDogY29sdW1uLmZpZWxkLCBmaWx0ZXJUeXBlOiBjb2x1bW4uZmlsdGVyVHlwZSwgaGVhZGVyOiBjb2x1bW4uaGVhZGVyfTtcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucy5wdXNoKGNvbCk7XG4gICAgICAgICAgICB0aGlzLnZhbHVlcy5wdXNoKGNvbClcbiAgICAgICAgICAgIHRoaXMubGFzdFZhbHVlLnB1c2goY29sKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgbW9zdHJhckNvbHVuYXMoZXZlbnQpIHtcbiAgICAgICAgaWYgKHRoaXMudmFsdWVzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5sYXN0VmFsdWUgPSBldmVudC52YWx1ZTtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlVmlzaWJsZUNvbHVtbnMuZW1pdCh0aGlzLnZhbHVlcyk7XG5cdFx0fSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMubGFzdFZhbHVlLm1hcCgoaXRlbSkgPT4gdGhpcy52YWx1ZXMucHVzaChpdGVtKSk7XG5cdFx0XHR0aGlzLnBhZ2VOb3RpZmljYXRpb25TZXJ2aWNlLmFkZEVycm9yTWVzc2FnZSgnTsOjbyDDqSBwb3Nzw612ZWwgZXhpYmlyIG1lbm9zIGRlIHVtYSBjb2x1bmEnKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==