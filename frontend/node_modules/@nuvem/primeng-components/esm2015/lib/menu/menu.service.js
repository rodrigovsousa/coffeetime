import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as ɵngcc0 from '@angular/core';
export var MenuOrientation;
(function (MenuOrientation) {
    MenuOrientation[MenuOrientation["STATIC"] = 0] = "STATIC";
    MenuOrientation[MenuOrientation["OVERLAY"] = 1] = "OVERLAY";
    MenuOrientation[MenuOrientation["SLIM"] = 2] = "SLIM";
    MenuOrientation[MenuOrientation["HORIZONTAL"] = 3] = "HORIZONTAL";
})(MenuOrientation || (MenuOrientation = {}));
/**
 * Class MenuService
 * @class
 */
let MenusService = class MenusService {
    constructor() {
        this.layoutMode = MenuOrientation.STATIC;
        this.itens = [];
    }
    isOverlay() {
        return this.layoutMode === MenuOrientation.OVERLAY;
    }
    isHorizontal() {
        return this.layoutMode === MenuOrientation.HORIZONTAL;
    }
    isSlim() {
        return this.layoutMode === MenuOrientation.SLIM;
    }
    changeToStaticMenu() {
        this.layoutMode = MenuOrientation.STATIC;
    }
    changeToOverlayMenu() {
        this.layoutMode = MenuOrientation.OVERLAY;
    }
    changeToHorizontalMenu() {
        this.layoutMode = MenuOrientation.HORIZONTAL;
    }
    changeToSlimMenu() {
        this.layoutMode = MenuOrientation.SLIM;
    }
};
MenusService.ɵfac = function MenusService_Factory(t) { return new (t || MenusService)(); };
MenusService.ɵprov = i0.ɵɵdefineInjectable({ factory: function MenusService_Factory() { return new MenusService(); }, token: MenusService, providedIn: "root" });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MenusService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
export { MenusService };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyJuZzovQG51dmVtL3ByaW1lbmctY29tcG9uZW50cy9saWIvbWVudS9tZW51LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0M7O0FBRUEsTUFBTSxDQUFOLElBQVksZUFLWDtBQUxELFdBQVksZUFBZTtBQUMxQixJQUFHLHlEQUFNLENBQUE7QUFBQyxJQUNQLDJEQUFPLENBQUE7QUFBQyxJQUNSLHFEQUFJLENBQUE7QUFBQyxJQUNMLGlFQUFVLENBQUE7QUFDZCxDQUFDLEVBTFcsZUFBZSxLQUFmLGVBQWUsUUFLMUI7QUFFRDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBSUgsSUFBYSxZQUFZLEdBQXpCLE1BQWEsWUFBWTtBQUN6QixJQURBO0FBQWdCLFFBRVosZUFBVSxHQUFvQixlQUFlLENBQUMsTUFBTSxDQUFDO0FBQ3pELFFBR0ksVUFBSyxHQUFlLEVBQUUsQ0FBQztBQUMzQixLQTJDQztBQUNELElBN0JJLFNBQVM7QUFDYixRQUFRLE9BQU8sSUFBSSxDQUFDLFVBQVUsS0FBSyxlQUFlLENBQUMsT0FBTyxDQUFDO0FBQzNELElBQUksQ0FBQztBQUNMLElBQ0ksWUFBWTtBQUNoQixRQUFRLE9BQU8sSUFBSSxDQUFDLFVBQVUsS0FBSyxlQUFlLENBQUMsVUFBVSxDQUFDO0FBQzlELElBQUksQ0FBQztBQUNMLElBQ0ksTUFBTTtBQUNWLFFBQVEsT0FBTyxJQUFJLENBQUMsVUFBVSxLQUFLLGVBQWUsQ0FBQyxJQUFJLENBQUM7QUFDeEQsSUFBSSxDQUFDO0FBQ0wsSUFDSSxrQkFBa0I7QUFDdEIsUUFBUSxJQUFJLENBQUMsVUFBVSxHQUFHLGVBQWUsQ0FBQyxNQUFNLENBQUM7QUFDakQsSUFBSSxDQUFDO0FBQ0wsSUFDSSxtQkFBbUI7QUFDdkIsUUFBUSxJQUFJLENBQUMsVUFBVSxHQUFHLGVBQWUsQ0FBQyxPQUFPLENBQUM7QUFDbEQsSUFBSSxDQUFDO0FBQ0wsSUFDSSxzQkFBc0I7QUFDMUIsUUFBUSxJQUFJLENBQUMsVUFBVSxHQUFHLGVBQWUsQ0FBQyxVQUFVLENBQUM7QUFDckQsSUFBSSxDQUFDO0FBQ0wsSUFDSSxnQkFBZ0I7QUFDcEIsUUFBUSxJQUFJLENBQUMsVUFBVSxHQUFHLGVBQWUsQ0FBQyxJQUFJLENBQUM7QUFDL0MsSUFBSSxDQUFDO0FBQ0wsQ0FDQzsyRkFBQTtBQUNEO0FBbkRhLFlBQVksb0JBSHhCLFVBQVUsQ0FBQyxVQUNSLFVBQVUsRUFBRTtBQUFNLE1BQ3JCLENBQUMsSUFDVyxZQUFZLENBa0R4Qjs7OztnREFDRDtBQUFDLFNBbkRZLFlBQVk7QUFFekIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNZW51SXRlbSB9IGZyb20gJ3ByaW1lbmcnO1xuXG5leHBvcnQgZW51bSBNZW51T3JpZW50YXRpb24ge1xuICAgIFNUQVRJQyxcbiAgICBPVkVSTEFZLFxuICAgIFNMSU0sXG4gICAgSE9SSVpPTlRBTFxufVxuXG4vKipcbiAqIENsYXNzIE1lbnVTZXJ2aWNlXG4gKiBAY2xhc3NcbiAqL1xuQEluamVjdGFibGUoe1xuICAgIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBNZW51c1NlcnZpY2Uge1xuXG4gICAgbGF5b3V0TW9kZTogTWVudU9yaWVudGF0aW9uID0gTWVudU9yaWVudGF0aW9uLlNUQVRJQztcblxuICAgIG1lbnVIb3ZlckFjdGl2ZTogYm9vbGVhbjtcblxuICAgIGl0ZW5zOiBNZW51SXRlbVtdID0gW107XG5cbiAgICByZXNldE1lbnU6IGJvb2xlYW47XG5cbiAgICBpc01vYmlsZTogYm9vbGVhbjtcblxuICAgIGlzVGFibGV0OiBib29sZWFuO1xuXG4gICAgaXNEZXNrdG9wOiBib29sZWFuO1xuXG4gICAgb3ZlcmxheU1lbnVBY3RpdmU6IGJvb2xlYW47XG5cbiAgICBzdGF0aWNNZW51TW9iaWxlQWN0aXZlOiBib29sZWFuO1xuXG4gICAgc3RhdGljTWVudURlc2t0b3BJbmFjdGl2ZTogYm9vbGVhbjtcblxuICAgIGlzT3ZlcmxheSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGF5b3V0TW9kZSA9PT0gTWVudU9yaWVudGF0aW9uLk9WRVJMQVk7XG4gICAgfVxuXG4gICAgaXNIb3Jpem9udGFsKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sYXlvdXRNb2RlID09PSBNZW51T3JpZW50YXRpb24uSE9SSVpPTlRBTDtcbiAgICB9XG5cbiAgICBpc1NsaW0oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxheW91dE1vZGUgPT09IE1lbnVPcmllbnRhdGlvbi5TTElNO1xuICAgIH1cblxuICAgIGNoYW5nZVRvU3RhdGljTWVudSgpIHtcbiAgICAgICAgdGhpcy5sYXlvdXRNb2RlID0gTWVudU9yaWVudGF0aW9uLlNUQVRJQztcbiAgICB9XG5cbiAgICBjaGFuZ2VUb092ZXJsYXlNZW51KCkge1xuICAgICAgICB0aGlzLmxheW91dE1vZGUgPSBNZW51T3JpZW50YXRpb24uT1ZFUkxBWTtcbiAgICB9XG5cbiAgICBjaGFuZ2VUb0hvcml6b250YWxNZW51KCkge1xuICAgICAgICB0aGlzLmxheW91dE1vZGUgPSBNZW51T3JpZW50YXRpb24uSE9SSVpPTlRBTDtcbiAgICB9XG5cbiAgICBjaGFuZ2VUb1NsaW1NZW51KCkge1xuICAgICAgICB0aGlzLmxheW91dE1vZGUgPSBNZW51T3JpZW50YXRpb24uU0xJTTtcbiAgICB9XG5cbn1cbiJdfQ==