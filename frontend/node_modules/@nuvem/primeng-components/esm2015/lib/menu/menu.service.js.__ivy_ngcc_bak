import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export var MenuOrientation;
(function (MenuOrientation) {
    MenuOrientation[MenuOrientation["STATIC"] = 0] = "STATIC";
    MenuOrientation[MenuOrientation["OVERLAY"] = 1] = "OVERLAY";
    MenuOrientation[MenuOrientation["SLIM"] = 2] = "SLIM";
    MenuOrientation[MenuOrientation["HORIZONTAL"] = 3] = "HORIZONTAL";
})(MenuOrientation || (MenuOrientation = {}));
/**
 * Class MenuService
 * @class
 */
let MenusService = class MenusService {
    constructor() {
        this.layoutMode = MenuOrientation.STATIC;
        this.itens = [];
    }
    isOverlay() {
        return this.layoutMode === MenuOrientation.OVERLAY;
    }
    isHorizontal() {
        return this.layoutMode === MenuOrientation.HORIZONTAL;
    }
    isSlim() {
        return this.layoutMode === MenuOrientation.SLIM;
    }
    changeToStaticMenu() {
        this.layoutMode = MenuOrientation.STATIC;
    }
    changeToOverlayMenu() {
        this.layoutMode = MenuOrientation.OVERLAY;
    }
    changeToHorizontalMenu() {
        this.layoutMode = MenuOrientation.HORIZONTAL;
    }
    changeToSlimMenu() {
        this.layoutMode = MenuOrientation.SLIM;
    }
};
MenusService.ɵprov = i0.ɵɵdefineInjectable({ factory: function MenusService_Factory() { return new MenusService(); }, token: MenusService, providedIn: "root" });
MenusService = __decorate([
    Injectable({
        providedIn: 'root'
    })
], MenusService);
export { MenusService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG51dmVtL3ByaW1lbmctY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi9tZW51L21lbnUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFHM0MsTUFBTSxDQUFOLElBQVksZUFLWDtBQUxELFdBQVksZUFBZTtJQUN2Qix5REFBTSxDQUFBO0lBQ04sMkRBQU8sQ0FBQTtJQUNQLHFEQUFJLENBQUE7SUFDSixpRUFBVSxDQUFBO0FBQ2QsQ0FBQyxFQUxXLGVBQWUsS0FBZixlQUFlLFFBSzFCO0FBRUQ7OztHQUdHO0FBSUgsSUFBYSxZQUFZLEdBQXpCLE1BQWEsWUFBWTtJQUF6QjtRQUVJLGVBQVUsR0FBb0IsZUFBZSxDQUFDLE1BQU0sQ0FBQztRQUlyRCxVQUFLLEdBQWUsRUFBRSxDQUFDO0tBNEMxQjtJQTVCRyxTQUFTO1FBQ0wsT0FBTyxJQUFJLENBQUMsVUFBVSxLQUFLLGVBQWUsQ0FBQyxPQUFPLENBQUM7SUFDdkQsQ0FBQztJQUVELFlBQVk7UUFDUixPQUFPLElBQUksQ0FBQyxVQUFVLEtBQUssZUFBZSxDQUFDLFVBQVUsQ0FBQztJQUMxRCxDQUFDO0lBRUQsTUFBTTtRQUNGLE9BQU8sSUFBSSxDQUFDLFVBQVUsS0FBSyxlQUFlLENBQUMsSUFBSSxDQUFDO0lBQ3BELENBQUM7SUFFRCxrQkFBa0I7UUFDZCxJQUFJLENBQUMsVUFBVSxHQUFHLGVBQWUsQ0FBQyxNQUFNLENBQUM7SUFDN0MsQ0FBQztJQUVELG1CQUFtQjtRQUNmLElBQUksQ0FBQyxVQUFVLEdBQUcsZUFBZSxDQUFDLE9BQU8sQ0FBQztJQUM5QyxDQUFDO0lBRUQsc0JBQXNCO1FBQ2xCLElBQUksQ0FBQyxVQUFVLEdBQUcsZUFBZSxDQUFDLFVBQVUsQ0FBQztJQUNqRCxDQUFDO0lBRUQsZ0JBQWdCO1FBQ1osSUFBSSxDQUFDLFVBQVUsR0FBRyxlQUFlLENBQUMsSUFBSSxDQUFDO0lBQzNDLENBQUM7Q0FFSixDQUFBOztBQWxEWSxZQUFZO0lBSHhCLFVBQVUsQ0FBQztRQUNSLFVBQVUsRUFBRSxNQUFNO0tBQ3JCLENBQUM7R0FDVyxZQUFZLENBa0R4QjtTQWxEWSxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWVudUl0ZW0gfSBmcm9tICdwcmltZW5nJztcblxuZXhwb3J0IGVudW0gTWVudU9yaWVudGF0aW9uIHtcbiAgICBTVEFUSUMsXG4gICAgT1ZFUkxBWSxcbiAgICBTTElNLFxuICAgIEhPUklaT05UQUxcbn1cblxuLyoqXG4gKiBDbGFzcyBNZW51U2VydmljZVxuICogQGNsYXNzXG4gKi9cbkBJbmplY3RhYmxlKHtcbiAgICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgTWVudXNTZXJ2aWNlIHtcblxuICAgIGxheW91dE1vZGU6IE1lbnVPcmllbnRhdGlvbiA9IE1lbnVPcmllbnRhdGlvbi5TVEFUSUM7XG5cbiAgICBtZW51SG92ZXJBY3RpdmU6IGJvb2xlYW47XG5cbiAgICBpdGVuczogTWVudUl0ZW1bXSA9IFtdO1xuXG4gICAgcmVzZXRNZW51OiBib29sZWFuO1xuXG4gICAgaXNNb2JpbGU6IGJvb2xlYW47XG5cbiAgICBpc1RhYmxldDogYm9vbGVhbjtcblxuICAgIGlzRGVza3RvcDogYm9vbGVhbjtcblxuICAgIG92ZXJsYXlNZW51QWN0aXZlOiBib29sZWFuO1xuXG4gICAgc3RhdGljTWVudU1vYmlsZUFjdGl2ZTogYm9vbGVhbjtcblxuICAgIHN0YXRpY01lbnVEZXNrdG9wSW5hY3RpdmU6IGJvb2xlYW47XG5cbiAgICBpc092ZXJsYXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxheW91dE1vZGUgPT09IE1lbnVPcmllbnRhdGlvbi5PVkVSTEFZO1xuICAgIH1cblxuICAgIGlzSG9yaXpvbnRhbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGF5b3V0TW9kZSA9PT0gTWVudU9yaWVudGF0aW9uLkhPUklaT05UQUw7XG4gICAgfVxuXG4gICAgaXNTbGltKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sYXlvdXRNb2RlID09PSBNZW51T3JpZW50YXRpb24uU0xJTTtcbiAgICB9XG5cbiAgICBjaGFuZ2VUb1N0YXRpY01lbnUoKSB7XG4gICAgICAgIHRoaXMubGF5b3V0TW9kZSA9IE1lbnVPcmllbnRhdGlvbi5TVEFUSUM7XG4gICAgfVxuXG4gICAgY2hhbmdlVG9PdmVybGF5TWVudSgpIHtcbiAgICAgICAgdGhpcy5sYXlvdXRNb2RlID0gTWVudU9yaWVudGF0aW9uLk9WRVJMQVk7XG4gICAgfVxuXG4gICAgY2hhbmdlVG9Ib3Jpem9udGFsTWVudSgpIHtcbiAgICAgICAgdGhpcy5sYXlvdXRNb2RlID0gTWVudU9yaWVudGF0aW9uLkhPUklaT05UQUw7XG4gICAgfVxuXG4gICAgY2hhbmdlVG9TbGltTWVudSgpIHtcbiAgICAgICAgdGhpcy5sYXlvdXRNb2RlID0gTWVudU9yaWVudGF0aW9uLlNMSU07XG4gICAgfVxuXG59XG4iXX0=