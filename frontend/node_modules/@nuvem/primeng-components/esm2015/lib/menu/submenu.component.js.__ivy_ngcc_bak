import { __decorate } from "tslib";
import { Component, Input } from '@angular/core';
import { trigger, state, style, transition, animate } from '@angular/animations';
import { MenusService } from './menu.service';
let SubMenuComponent = class SubMenuComponent {
    constructor(menuService) {
        this.menuService = menuService;
    }
    /**
     * Alterar o menu root entre aberto e fechado
     */
    rootMenuToggle() {
        if (this.root) {
            this.menuService.menuHoverActive = !this.menuService.menuHoverActive;
        }
    }
    /**
     * Activa o menu por index e desativa o item ativo
     * @param index
     */
    activeMenuByIndex(index) {
        this.activeIndex = (this.activeIndex === index) ? null : index;
        return this.activeIndex;
    }
    /**
     * Verifica se foi informado um comando para o item de menu e executa caso necessário
     * @param item menu
     */
    execCommand(event, item) {
        if (item.command) {
            item.command({ 'originalEvent': event, 'item': item });
            return true;
        }
        return false;
    }
    /**
     * Esconte o menu caso este não possua itens
     * @param item menu
     */
    hideMenu(item) {
        if (!item.items) {
            if (this.menuService.isHorizontal() || this.menuService.isSlim()) {
                this.menuService.resetMenu = true;
            }
            else {
                this.menuService.resetMenu = false;
            }
            this.menuService.overlayMenuActive = false;
            this.menuService.staticMenuMobileActive = false;
            this.menuService.menuHoverActive = !this.menuService.menuHoverActive;
            return true;
        }
        return false;
    }
    itemClick(event, item, index) {
        this.rootMenuToggle();
        if (item.disabled) {
            event.preventDefault();
            return false;
        }
        this.activeMenuByIndex(index);
        this.execCommand(event, item);
        if (item.items || (!item.url && !item.routerLink)) {
            event.preventDefault();
        }
        this.hideMenu(item);
        return true;
    }
    onMouseEnter(index) {
        if (this.root && this.menuService.menuHoverActive && (this.menuService.isHorizontal() || this.menuService.isSlim())) {
            this.activeIndex = index;
        }
    }
    isActive(index) {
        return this.activeIndex === index;
    }
    get reset() {
        return this._reset;
    }
    set reset(val) {
        this._reset = val;
        if (this._reset && (this.menuService.isHorizontal() || this.menuService.isSlim())) {
            this.activeIndex = null;
        }
    }
    get parentActive() {
        return this._parentActive;
    }
    set parentActive(val) {
        this._parentActive = val;
        if (!this._parentActive) {
            this.activeIndex = null;
        }
    }
};
SubMenuComponent.ctorParameters = () => [
    { type: MenusService }
];
__decorate([
    Input()
], SubMenuComponent.prototype, "item", void 0);
__decorate([
    Input()
], SubMenuComponent.prototype, "root", void 0);
__decorate([
    Input()
], SubMenuComponent.prototype, "visible", void 0);
__decorate([
    Input()
], SubMenuComponent.prototype, "reset", null);
__decorate([
    Input()
], SubMenuComponent.prototype, "parentActive", null);
SubMenuComponent = __decorate([
    Component({
        selector: '[submenu]',
        template: "<ng-template ngFor let-child let-i=\"index\" [ngForOf]=\"(root ? item : item.items)\">\n    <li [ngClass]=\"{'active-menuitem': isActive(i)}\"\n        [class]=\"child.badgeStyleClass\"\n        *ngIf=\"child.visible === false ? false : true\">\n        <a [href]=\"child.url||'#'\" (click)=\"itemClick($event,child,i)\" (mouseenter)=\"onMouseEnter(i)\"\n           class=\"ripplelink\" *ngIf=\"!child.routerLink\"\n            [attr.tabindex]=\"!visible ? '-1' : null\" [attr.target]=\"child.target\">\n            <i *ngIf=\"child.icon\" class=\"material-icons\">{{child.icon}}</i>\n            <span>{{child.label}}</span>\n            <span class=\"menuitem-badge\" *ngIf=\"child.badge\">{{child.badge}}</span>\n            <i class=\"material-icons submenu-icon\" *ngIf=\"child.items\">keyboard_arrow_down</i>\n        </a>\n\n        <a (click)=\"itemClick($event,child,i)\"\n            (mouseenter)=\"onMouseEnter(i)\"\n            class=\"ripplelink\"\n            *ngIf=\"child.routerLink\"\n            [routerLink]=\"child.routerLink\"\n            routerLinkActive=\"active-menuitem-routerlink\"\n            [routerLinkActiveOptions]=\"{exact: true}\" [attr.tabindex]=\"!visible ? '-1' : null\" [attr.target]=\"child.target\">\n            <i *ngIf=\"child.icon\" class=\"material-icons\">{{child.icon}}</i>\n            <span>{{child.label}}</span>\n            <span class=\"menuitem-badge\" *ngIf=\"child.badge\">{{child.badge}}</span>\n            <i class=\"material-icons submenu-icon\" *ngIf=\"child.items\">keyboard_arrow_down</i>\n        </a>\n        <div class=\"layout-menu-tooltip\">\n            <div class=\"layout-menu-tooltip-arrow\"></div>\n            <div class=\"layout-menu-tooltip-text\">{{child.label}}</div>\n        </div>\n        <ul submenu\n            [item]=\"child\"\n            *ngIf=\"child.items\"\n            [visible]=\"isActive(i)\"\n            [reset]=\"reset\"\n            [parentActive]=\"isActive(i)\"\n            [@children]=\"(menuService.isSlim() || menuService.isHorizontal()) && root ? (isActive(i) ?\n            'visible' : 'hidden') : (isActive(i) ? 'visibleAnimated' : 'hiddenAnimated')\">\n        </ul>\n    </li>\n</ng-template>\n",
        animations: [
            trigger('children', [
                state('hiddenAnimated', style({
                    height: '0px'
                })),
                state('visibleAnimated', style({
                    height: '*'
                })),
                state('visible', style({
                    height: '*',
                    'z-index': 100
                })),
                state('hidden', style({
                    height: '0px',
                    'z-index': '*'
                })),
                transition('visibleAnimated => hiddenAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),
                transition('hiddenAnimated => visibleAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))
            ])
        ]
    })
], SubMenuComponent);
export { SubMenuComponent };
//# sourceMappingURL=data:application/json;base64,