import { __decorate } from "tslib";
import { BlockUiStatus, BlockUiService } from '@nuvem/angular-base';
import { Component } from '@angular/core';
/**
 * Class BlockUiComponent
 * @class
 */
var BlockUiComponent = /** @class */ (function () {
    /**
     * constructor method
     * @constructor
     * @param {BlockUiService} service
     */
    function BlockUiComponent(service) {
        this.service = service;
        /**
         * status property
         * @type {boolean}
         * @public
         */
        this.status = false;
    }
    /**
     * ngOnInit method
     * @returns void
     */
    BlockUiComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.service.loaderStatus.subscribe(function (blockui) {
            _this.status = blockui.status;
        });
    };
    /**
     * ngOnDestroy methods
     * @returns void
     */
    BlockUiComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    /**
     * isBlocked method
     * @returns boolean
     */
    BlockUiComponent.prototype.isBlocked = function () {
        return this.status;
    };
    /**
     * show method
     * @returns false
     */
    BlockUiComponent.prototype.show = function () {
        this.status = true;
    };
    /**
     * hide methods
     * @returns void
     */
    BlockUiComponent.prototype.hide = function () {
        this.status = false;
    };
    BlockUiComponent.ctorParameters = function () { return [
        { type: BlockUiService }
    ]; };
    BlockUiComponent = __decorate([
        Component({
            selector: 'basis-block-ui',
            template: "<p-blockUI [blocked]=\"isBlocked()\">\n    <div class=\"center-screen\">\n        <p-progressSpinner></p-progressSpinner>\n    </div>\n</p-blockUI>\n",
            styles: [".center-screen{display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;min-height:100vh}"]
        })
    ], BlockUiComponent);
    return BlockUiComponent;
}());
export { BlockUiComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxvY2stdWkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG51dmVtL3ByaW1lbmctY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi9ibG9jay11aS9ibG9jay11aS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDcEUsT0FBTyxFQUFFLFNBQVMsRUFBcUIsTUFBTSxlQUFlLENBQUM7QUFHN0Q7OztHQUdHO0FBTUg7SUFlSTs7OztPQUlHO0lBQ0gsMEJBQW9CLE9BQXVCO1FBQXZCLFlBQU8sR0FBUCxPQUFPLENBQWdCO1FBbkIzQzs7OztXQUlHO1FBQ0gsV0FBTSxHQUFHLEtBQUssQ0FBQztJQWNnQyxDQUFDO0lBRWhEOzs7T0FHRztJQUNILG1DQUFRLEdBQVI7UUFBQSxpQkFJQztRQUhHLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLFVBQUMsT0FBc0I7WUFDM0UsS0FBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDO1FBQ2pDLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVEOzs7T0FHRztJQUNILHNDQUFXLEdBQVg7UUFDSSxJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3BDLENBQUM7SUFFRDs7O09BR0c7SUFDSCxvQ0FBUyxHQUFUO1FBQ0ksT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7SUFFRDs7O09BR0c7SUFDSCwrQkFBSSxHQUFKO1FBQ0ksSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7SUFDdkIsQ0FBQztJQUVEOzs7T0FHRztJQUNILCtCQUFJLEdBQUo7UUFDSSxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztJQUN4QixDQUFDOztnQkExQzRCLGNBQWM7O0lBcEJsQyxnQkFBZ0I7UUFMNUIsU0FBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLGdCQUFnQjtZQUMxQixpS0FBd0M7O1NBRTNDLENBQUM7T0FDVyxnQkFBZ0IsQ0ErRDVCO0lBQUQsdUJBQUM7Q0FBQSxBQS9ERCxJQStEQztTQS9EWSxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCbG9ja1VpU3RhdHVzLCBCbG9ja1VpU2VydmljZSB9IGZyb20gJ0BudXZlbS9hbmd1bGFyLWJhc2UnO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5cbi8qKlxuICogQ2xhc3MgQmxvY2tVaUNvbXBvbmVudFxuICogQGNsYXNzXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYmFzaXMtYmxvY2stdWknLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9ibG9jay11aS5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbICcuL2Jsb2NrLXVpLmNvbXBvbmVudC5jc3MnIF0sXG59KVxuZXhwb3J0IGNsYXNzIEJsb2NrVWlDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQgLCBPbkRlc3Ryb3kge1xuICAgIC8qKlxuICAgICAqIHN0YXR1cyBwcm9wZXJ0eVxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqIEBwdWJsaWNcbiAgICAgKi9cbiAgICBzdGF0dXMgPSBmYWxzZTtcblxuICAgIC8qKlxuICAgICAqIHN1YnNjcmlwdGlvbiBwcm9wZXJ0eVxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHR5cGUge1N1YnNjcmlwdGlvbn1cbiAgICAgKi9cbiAgICBwcml2YXRlIHN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuXG4gICAgLyoqXG4gICAgICogY29uc3RydWN0b3IgbWV0aG9kXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtCbG9ja1VpU2VydmljZX0gc2VydmljZVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgc2VydmljZTogQmxvY2tVaVNlcnZpY2UpIHsgfVxuXG4gICAgLyoqXG4gICAgICogbmdPbkluaXQgbWV0aG9kXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbiA9IHRoaXMuc2VydmljZS5sb2FkZXJTdGF0dXMuc3Vic2NyaWJlKChibG9ja3VpOiBCbG9ja1VpU3RhdHVzKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnN0YXR1cyA9IGJsb2NrdWkuc3RhdHVzO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBuZ09uRGVzdHJveSBtZXRob2RzXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGlzQmxvY2tlZCBtZXRob2RcbiAgICAgKiBAcmV0dXJucyBib29sZWFuXG4gICAgICovXG4gICAgaXNCbG9ja2VkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0dXM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogc2hvdyBtZXRob2RcbiAgICAgKiBAcmV0dXJucyBmYWxzZVxuICAgICAqL1xuICAgIHNob3coKSB7XG4gICAgICAgIHRoaXMuc3RhdHVzID0gdHJ1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBoaWRlIG1ldGhvZHNcbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgaGlkZSgpIHtcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBmYWxzZTtcbiAgICB9XG59XG4iXX0=