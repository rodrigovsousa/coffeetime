import { __decorate } from "tslib";
import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { BlockUiInterceptor, BlockUiService } from '@nuvem/angular-base';
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { BlockUIModule, ProgressSpinnerModule } from 'primeng';
import { BlockUiComponent } from './block-ui.component';
/**
 * Class BlockUiModule
 * @class
 */
import * as ɵngcc0 from '@angular/core';
var BlockUiModule = /** @class */ (function () {
    function BlockUiModule() {
    }
BlockUiModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BlockUiModule });
BlockUiModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BlockUiModule_Factory(t) { return new (t || BlockUiModule)(); }, providers: [
        {
            provide: HTTP_INTERCEPTORS,
            useClass: BlockUiInterceptor,
            multi: true
        },
        BlockUiService
    ], imports: [[
            CommonModule,
            BlockUIModule,
            ProgressSpinnerModule,
        ],
        BlockUIModule,
        ProgressSpinnerModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BlockUiModule, { declarations: function () { return [BlockUiComponent]; }, imports: function () { return [CommonModule,
        BlockUIModule,
        ProgressSpinnerModule]; }, exports: function () { return [BlockUIModule,
        BlockUiComponent,
        ProgressSpinnerModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BlockUiModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    BlockUIModule,
                    ProgressSpinnerModule,
                ],
                declarations: [
                    BlockUiComponent
                ],
                providers: [
                    {
                        provide: HTTP_INTERCEPTORS,
                        useClass: BlockUiInterceptor,
                        multi: true
                    },
                    BlockUiService
                ],
                exports: [
                    BlockUIModule,
                    BlockUiComponent,
                    ProgressSpinnerModule
                ]
            }]
    }], function () { return []; }, null); })();
    return BlockUiModule;
}());
export { BlockUiModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxvY2stdWkubW9kdWxlLmpzIiwic291cmNlcyI6WyJuZzovQG51dmVtL3ByaW1lbmctY29tcG9uZW50cy9saWIvYmxvY2stdWkvYmxvY2stdWkubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDekUsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxxQkFBcUIsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUMvRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUV4RDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQXdCSDtBQUVrQixJQUZsQjtBQUEyQixJQUMzQixDQUFDO0lBRFksYUFBYSx3QkF2QnpCLFFBQVEsQ0FBQyxjQUNOO0FBQU8sRUFBRSxrQkFDTCxZQUFZLGtCQUNaLGFBQWEsa0JBQ2IscUJBQXFCLGVBQ3hCLGNBQ0Q7QUFBWSxFQUFFO1VBQ1YsZ0JBQWdCO0FBQ25CLGNBQ0QsU0FBUyxFQUFFO0NBQ1Asc0JBQ0k7TUFBTyxFQUFFO2NBQWlCO2FBQzFCO0VBQVEsRUFBRSxrQkFBa0I7a0JBQzVCLEtBQUssRUFBRTtFQUFJLGtCQUNkO0dBQ0Q7TUFBYyxjQUNqQjtXQUNELE9BQU8sRUFBRTtHQUNMLGFBQWEsa0JBQ2IsZ0JBQWdCLGtCQUNoQixxQkFBcUIsY0FDeEIsVUFDSixDQUFDLFFBQ1csYUFBYSxDQUN6Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dEQUNEO0FBQUMsSUFERCxvQkFBQztBQUNBLENBREEsQUFERCxJQUNDO0FBQ0QsU0FGYSxhQUFhO0FBQ3pCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSFRUUF9JTlRFUkNFUFRPUlMgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBCbG9ja1VpSW50ZXJjZXB0b3IsIEJsb2NrVWlTZXJ2aWNlIH0gZnJvbSAnQG51dmVtL2FuZ3VsYXItYmFzZSc7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEJsb2NrVUlNb2R1bGUsIFByb2dyZXNzU3Bpbm5lck1vZHVsZSB9IGZyb20gJ3ByaW1lbmcnO1xuaW1wb3J0IHsgQmxvY2tVaUNvbXBvbmVudCB9IGZyb20gJy4vYmxvY2stdWkuY29tcG9uZW50JztcblxuLyoqXG4gKiBDbGFzcyBCbG9ja1VpTW9kdWxlXG4gKiBAY2xhc3NcbiAqL1xuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIENvbW1vbk1vZHVsZSxcbiAgICAgICAgQmxvY2tVSU1vZHVsZSxcbiAgICAgICAgUHJvZ3Jlc3NTcGlubmVyTW9kdWxlLFxuICAgIF0sXG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIEJsb2NrVWlDb21wb25lbnRcbiAgICBdLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBIVFRQX0lOVEVSQ0VQVE9SUyxcbiAgICAgICAgICAgIHVzZUNsYXNzOiBCbG9ja1VpSW50ZXJjZXB0b3IsXG4gICAgICAgICAgICBtdWx0aTogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBCbG9ja1VpU2VydmljZVxuICAgIF0sXG4gICAgZXhwb3J0czogW1xuICAgICAgICBCbG9ja1VJTW9kdWxlLFxuICAgICAgICBCbG9ja1VpQ29tcG9uZW50LFxuICAgICAgICBQcm9ncmVzc1NwaW5uZXJNb2R1bGVcbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIEJsb2NrVWlNb2R1bGUge1xufVxuIl19