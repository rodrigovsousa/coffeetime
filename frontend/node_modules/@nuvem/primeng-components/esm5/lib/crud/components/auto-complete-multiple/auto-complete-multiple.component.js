import { __decorate, __extends } from "tslib";
import { Component, Input } from "@angular/core";
import { provideValueAccessor } from "@nuvem/angular-base";
import { FieldComponent } from "../field.component";
import { forkJoin } from 'rxjs';
var AutoCompleteMultipleComponent = /** @class */ (function (_super) {
    __extends(AutoCompleteMultipleComponent, _super);
    function AutoCompleteMultipleComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.virtualScroll = false;
        _this.itemSize = 30;
        return _this;
    }
    AutoCompleteMultipleComponent_1 = AutoCompleteMultipleComponent;
    AutoCompleteMultipleComponent.prototype.findAll = function (event) {
        var _this = this;
        var query = {};
        query[this.field] = event.query;
        this.service.findAll(query).subscribe(function (data) {
            _this.results = data;
        });
    };
    AutoCompleteMultipleComponent.prototype.outerToInner = function (value) {
        var _this = this;
        if (value && value.length > 0 && !value[0][this.field]) {
            var obs_1 = [];
            value.forEach(function (element) {
                if (element && element.id) {
                    obs_1.push(_this.service.find(element.id));
                }
            });
            forkJoin(obs_1).subscribe(function (data) {
                _this.formControl.setValue(data);
            });
        }
        return value;
    };
    var AutoCompleteMultipleComponent_1;
    __decorate([
        Input()
    ], AutoCompleteMultipleComponent.prototype, "field", void 0);
    __decorate([
        Input()
    ], AutoCompleteMultipleComponent.prototype, "service", void 0);
    __decorate([
        Input()
    ], AutoCompleteMultipleComponent.prototype, "virtualScroll", void 0);
    __decorate([
        Input()
    ], AutoCompleteMultipleComponent.prototype, "itemSize", void 0);
    AutoCompleteMultipleComponent = AutoCompleteMultipleComponent_1 = __decorate([
        Component({
            selector: "[nAutoCompleteMultiple]",
            template: "<span #notification form-notification class=\"md-inputfield\" [name]=\"name\" [form]=\"form\">\n    <p-autoCompleteCustom #input\n        [formControl]=\"formControl\"\n        [suggestions]=\"results\"\n        (completeMethod)=\"findAll($event)\"\n        [field]=\"field\"\n        [virtualScroll]=\"virtualScroll\"\n        [itemSize]=\"itemSize\"\n        (onBlur)=\"onBlurEvent($event)\"\n        (onSelect)=\"onSelectEvent($event)\"\n        (onFocus)=\"onFocusEvent($event)\"\n        [multiple]=\"true\">\n    </p-autoCompleteCustom>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
            providers: [provideValueAccessor(AutoCompleteMultipleComponent_1)]
        })
    ], AutoCompleteMultipleComponent);
    return AutoCompleteMultipleComponent;
}(FieldComponent));
export { AutoCompleteMultipleComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by1jb21wbGV0ZS1tdWx0aXBsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbnV2ZW0vcHJpbWVuZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NydWQvY29tcG9uZW50cy9hdXRvLWNvbXBsZXRlLW11bHRpcGxlL2F1dG8tY29tcGxldGUtbXVsdGlwbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFcEQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQU9oQztJQUFtRCxpREFBcUI7SUFBeEU7UUFBQSxxRUFtQ0M7UUE3QlksbUJBQWEsR0FBWSxLQUFLLENBQUM7UUFFL0IsY0FBUSxHQUFXLEVBQUUsQ0FBQzs7SUEyQm5DLENBQUM7c0NBbkNZLDZCQUE2QjtJQVl0QywrQ0FBTyxHQUFQLFVBQVEsS0FBVTtRQUFsQixpQkFNQztRQUxHLElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNmLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztRQUNoQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxTQUFTLENBQUMsVUFBQSxJQUFJO1lBQ3RDLEtBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ3hCLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVTLG9EQUFZLEdBQXRCLFVBQXVCLEtBQVk7UUFBbkMsaUJBYUM7UUFaRyxJQUFJLEtBQUssSUFBSSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDcEQsSUFBSSxLQUFHLEdBQVUsRUFBRSxDQUFDO1lBQ3BCLEtBQUssQ0FBQyxPQUFPLENBQUMsVUFBQSxPQUFPO2dCQUNqQixJQUFJLE9BQU8sSUFBSSxPQUFPLENBQUMsRUFBRSxFQUFFO29CQUN2QixLQUFHLENBQUMsSUFBSSxDQUFDLEtBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2lCQUMzQztZQUNMLENBQUMsQ0FBQyxDQUFDO1lBQ0gsUUFBUSxDQUFDLEtBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxVQUFDLElBQUk7Z0JBQ3pCLEtBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3BDLENBQUMsQ0FBQyxDQUFDO1NBQ047UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDOztJQS9CUTtRQUFSLEtBQUssRUFBRTtnRUFBZTtJQUVkO1FBQVIsS0FBSyxFQUFFO2tFQUFnQztJQUUvQjtRQUFSLEtBQUssRUFBRTt3RUFBZ0M7SUFFL0I7UUFBUixLQUFLLEVBQUU7bUVBQXVCO0lBUnRCLDZCQUE2QjtRQUx6QyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUseUJBQXlCO1lBQ25DLHV2QkFBc0Q7WUFDdEQsU0FBUyxFQUFFLENBQUMsb0JBQW9CLENBQUMsK0JBQTZCLENBQUMsQ0FBQztTQUNuRSxDQUFDO09BQ1csNkJBQTZCLENBbUN6QztJQUFELG9DQUFDO0NBQUEsQUFuQ0QsQ0FBbUQsY0FBYyxHQW1DaEU7U0FuQ1ksNkJBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBwcm92aWRlVmFsdWVBY2Nlc3NvciB9IGZyb20gXCJAbnV2ZW0vYW5ndWxhci1iYXNlXCI7XG5pbXBvcnQgeyBGaWVsZENvbXBvbmVudCB9IGZyb20gXCIuLi9maWVsZC5jb21wb25lbnRcIjtcbmltcG9ydCB7IENydWRTZXJ2aWNlIH0gZnJvbSBcIi4uLy4uL2NydWQtc2VydmljZS5zZXJ2aWNlXCI7XG5pbXBvcnQgeyBmb3JrSm9pbiB9IGZyb20gJ3J4anMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogXCJbbkF1dG9Db21wbGV0ZU11bHRpcGxlXVwiLFxuICAgIHRlbXBsYXRlVXJsOiBcIi4vYXV0by1jb21wbGV0ZS1tdWx0aXBsZS5jb21wb25lbnQuaHRtbFwiLFxuICAgIHByb3ZpZGVyczogW3Byb3ZpZGVWYWx1ZUFjY2Vzc29yKEF1dG9Db21wbGV0ZU11bHRpcGxlQ29tcG9uZW50KV0sXG59KVxuZXhwb3J0IGNsYXNzIEF1dG9Db21wbGV0ZU11bHRpcGxlQ29tcG9uZW50IGV4dGVuZHMgRmllbGRDb21wb25lbnQ8YW55W10+IHtcblxuICAgIEBJbnB1dCgpIGZpZWxkOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKSBzZXJ2aWNlOiBDcnVkU2VydmljZTxhbnksIGFueT47XG5cbiAgICBASW5wdXQoKSB2aXJ0dWFsU2Nyb2xsOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKSBpdGVtU2l6ZTogbnVtYmVyID0gMzA7XG5cbiAgICByZXN1bHRzOiBhbnlbXTtcblxuICAgIGZpbmRBbGwoZXZlbnQ6IGFueSkge1xuICAgICAgICBsZXQgcXVlcnkgPSB7fTtcbiAgICAgICAgcXVlcnlbdGhpcy5maWVsZF0gPSBldmVudC5xdWVyeTtcbiAgICAgICAgdGhpcy5zZXJ2aWNlLmZpbmRBbGwocXVlcnkpLnN1YnNjcmliZShkYXRhID0+IHtcbiAgICAgICAgICAgIHRoaXMucmVzdWx0cyA9IGRhdGE7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvdXRlclRvSW5uZXIodmFsdWU6IGFueVtdKTogYW55W10ge1xuICAgICAgICBpZiAodmFsdWUgJiYgdmFsdWUubGVuZ3RoID4gMCAmJiAhdmFsdWVbMF1bdGhpcy5maWVsZF0pIHtcbiAgICAgICAgICAgIGxldCBvYnM6IGFueVtdID0gW107XG4gICAgICAgICAgICB2YWx1ZS5mb3JFYWNoKGVsZW1lbnQgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlbGVtZW50ICYmIGVsZW1lbnQuaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgb2JzLnB1c2godGhpcy5zZXJ2aWNlLmZpbmQoZWxlbWVudC5pZCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZm9ya0pvaW4ob2JzKS5zdWJzY3JpYmUoKGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmZvcm1Db250cm9sLnNldFZhbHVlKGRhdGEpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cblxufVxuIl19