import { __decorate, __extends } from "tslib";
import { Component, Input } from "@angular/core";
import { provideValueAccessor } from "@nuvem/angular-base";
import { FieldComponent } from "../field.component";
var AutoCompleteComponent = /** @class */ (function (_super) {
    __extends(AutoCompleteComponent, _super);
    function AutoCompleteComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.virtualScroll = false;
        _this.itemSize = 30;
        return _this;
    }
    AutoCompleteComponent_1 = AutoCompleteComponent;
    AutoCompleteComponent.prototype.selectItem = function (option) {
        this.formControl.setValue(option);
    };
    AutoCompleteComponent.prototype.findAll = function (event) {
        var _this = this;
        var query = {};
        query[this.field] = event.query;
        this.service.findAll(query).subscribe(function (data) {
            _this.results = data;
        });
    };
    AutoCompleteComponent.prototype.outerToInner = function (value) {
        var _this = this;
        if (value && value.id && !value[this.field]) {
            this.service.find(value.id).subscribe(function (data) {
                _this.formControl.setValue(data);
            });
        }
        return value;
    };
    var AutoCompleteComponent_1;
    __decorate([
        Input()
    ], AutoCompleteComponent.prototype, "field", void 0);
    __decorate([
        Input()
    ], AutoCompleteComponent.prototype, "virtualScroll", void 0);
    __decorate([
        Input()
    ], AutoCompleteComponent.prototype, "itemSize", void 0);
    __decorate([
        Input()
    ], AutoCompleteComponent.prototype, "service", void 0);
    AutoCompleteComponent = AutoCompleteComponent_1 = __decorate([
        Component({
            selector: "[nAutoComplete]",
            template: "<span #notification form-notification class=\"md-inputfield\" [name]=\"name\" [form]=\"form\">\n    <p-autoCompleteCustom #input\n        [formControl]=\"formControl\"\n        [suggestions]=\"results\"\n        [virtualScroll]=\"virtualScroll\"\n        [itemSize]=\"itemSize\"\n        (onBlur)=\"onBlurEvent($event)\"\n        (onSelect)=\"onSelectEvent($event)\"\n        (onFocus)=\"onFocusEvent($event)\"\n        (completeMethod)=\"findAll($event)\"\n        [field]=\"field\">\n    </p-autoCompleteCustom>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
            providers: [provideValueAccessor(AutoCompleteComponent_1)]
        })
    ], AutoCompleteComponent);
    return AutoCompleteComponent;
}(FieldComponent));
export { AutoCompleteComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by1jb21wbGV0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbnV2ZW0vcHJpbWVuZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NydWQvY29tcG9uZW50cy9hdXRvLWNvbXBsZXRlL2F1dG8tY29tcGxldGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBZSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFRcEQ7SUFBMkMseUNBQW1CO0lBQTlEO1FBQUEscUVBaUNDO1FBN0JZLG1CQUFhLEdBQVksS0FBSyxDQUFDO1FBRS9CLGNBQVEsR0FBVyxFQUFFLENBQUM7O0lBMkJuQyxDQUFDOzhCQWpDWSxxQkFBcUI7SUFZOUIsMENBQVUsR0FBVixVQUFXLE1BQU07UUFDYixJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRUQsdUNBQU8sR0FBUCxVQUFRLEtBQVU7UUFBbEIsaUJBTUM7UUFMRyxJQUFJLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDZixLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDaEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsU0FBUyxDQUFDLFVBQUEsSUFBSTtZQUN0QyxLQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztRQUN4QixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFUyw0Q0FBWSxHQUF0QixVQUF1QixLQUFVO1FBQWpDLGlCQU9DO1FBTkcsSUFBSSxLQUFLLElBQUksS0FBSyxDQUFDLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDekMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxVQUFDLElBQUk7Z0JBQ3ZDLEtBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3BDLENBQUMsQ0FBQyxDQUFDO1NBQ047UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDOztJQTdCUTtRQUFSLEtBQUssRUFBRTt3REFBZTtJQUVkO1FBQVIsS0FBSyxFQUFFO2dFQUFnQztJQUUvQjtRQUFSLEtBQUssRUFBRTsyREFBdUI7SUFFdEI7UUFBUixLQUFLLEVBQUU7MERBQWdDO0lBUi9CLHFCQUFxQjtRQUxqQyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsaUJBQWlCO1lBQzNCLDB0QkFBNkM7WUFDN0MsU0FBUyxFQUFFLENBQUMsb0JBQW9CLENBQUMsdUJBQXFCLENBQUMsQ0FBQztTQUMzRCxDQUFDO09BQ1cscUJBQXFCLENBaUNqQztJQUFELDRCQUFDO0NBQUEsQUFqQ0QsQ0FBMkMsY0FBYyxHQWlDeEQ7U0FqQ1kscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgVGVtcGxhdGVSZWYgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgcHJvdmlkZVZhbHVlQWNjZXNzb3IgfSBmcm9tIFwiQG51dmVtL2FuZ3VsYXItYmFzZVwiO1xuaW1wb3J0IHsgRmllbGRDb21wb25lbnQgfSBmcm9tIFwiLi4vZmllbGQuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBDcnVkU2VydmljZSB9IGZyb20gXCIuLi8uLi9jcnVkLXNlcnZpY2Uuc2VydmljZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogXCJbbkF1dG9Db21wbGV0ZV1cIixcbiAgICB0ZW1wbGF0ZVVybDogXCIuL2F1dG8tY29tcGxldGUuY29tcG9uZW50Lmh0bWxcIixcbiAgICBwcm92aWRlcnM6IFtwcm92aWRlVmFsdWVBY2Nlc3NvcihBdXRvQ29tcGxldGVDb21wb25lbnQpXSxcbn0pXG5leHBvcnQgY2xhc3MgQXV0b0NvbXBsZXRlQ29tcG9uZW50IGV4dGVuZHMgRmllbGRDb21wb25lbnQ8YW55PiB7XG5cbiAgICBASW5wdXQoKSBmaWVsZDogc3RyaW5nO1xuXG4gICAgQElucHV0KCkgdmlydHVhbFNjcm9sbDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgQElucHV0KCkgaXRlbVNpemU6IG51bWJlciA9IDMwO1xuXG4gICAgQElucHV0KCkgc2VydmljZTogQ3J1ZFNlcnZpY2U8YW55LCBhbnk+O1xuXG4gICAgcmVzdWx0czogYW55W107XG5cbiAgICBzZWxlY3RJdGVtKG9wdGlvbikge1xuICAgICAgICB0aGlzLmZvcm1Db250cm9sLnNldFZhbHVlKG9wdGlvbik7XG4gICAgfVxuXG4gICAgZmluZEFsbChldmVudDogYW55KSB7XG4gICAgICAgIGxldCBxdWVyeSA9IHt9O1xuICAgICAgICBxdWVyeVt0aGlzLmZpZWxkXSA9IGV2ZW50LnF1ZXJ5O1xuICAgICAgICB0aGlzLnNlcnZpY2UuZmluZEFsbChxdWVyeSkuc3Vic2NyaWJlKGRhdGEgPT4ge1xuICAgICAgICAgICAgdGhpcy5yZXN1bHRzID0gZGF0YTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG91dGVyVG9Jbm5lcih2YWx1ZTogYW55KTogYW55IHtcbiAgICAgICAgaWYgKHZhbHVlICYmIHZhbHVlLmlkICYmICF2YWx1ZVt0aGlzLmZpZWxkXSkge1xuICAgICAgICAgICAgdGhpcy5zZXJ2aWNlLmZpbmQodmFsdWUuaWQpLnN1YnNjcmliZSgoZGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuZm9ybUNvbnRyb2wuc2V0VmFsdWUoZGF0YSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuXG59XG4iXX0=