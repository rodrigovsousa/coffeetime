import { __decorate, __extends } from "tslib";
import { Component, Injector } from "@angular/core";
import { provideValueAccessor, FormNotificationService, FormNotification, FieldFormNotification } from "@nuvem/angular-base";
import { FieldComponent } from "../field.component";
import { ControlContainer } from '@angular/forms';
var CheckComponent = /** @class */ (function (_super) {
    __extends(CheckComponent, _super);
    /**
     * Método construtor responsável por carregar o serviço de validação
     * @param formNotificationService
     */
    function CheckComponent(controlContainer, injector, formNotificationService) {
        var _this = _super.call(this, controlContainer, injector) || this;
        _this.formNotificationService = formNotificationService;
        return _this;
    }
    CheckComponent_1 = CheckComponent;
    /**
     * Método Inicial para subscrição no endpoint responsável por validar o formulário
     */
    CheckComponent.prototype.ngOnInit = function () {
        var _this = this;
        _super.prototype.ngOnInit.call(this);
        this.subscription = this.formNotificationService
            .notifications(this.form, this.name)
            .subscribe(function (notification) {
            if (notification instanceof FieldFormNotification) {
                _this.message = notification.message;
            }
            else {
                _this.message = null;
            }
        });
    };
    /**
     * Método responsável por realizar a saida das subscrições do endpont de validação
     */
    CheckComponent.prototype.ngOnDestroy = function () {
        _super.prototype.ngOnDestroy.call(this);
        this.subscription.unsubscribe();
    };
    var CheckComponent_1;
    CheckComponent.ctorParameters = function () { return [
        { type: ControlContainer },
        { type: Injector },
        { type: FormNotificationService }
    ]; };
    CheckComponent = CheckComponent_1 = __decorate([
        Component({
            selector: "[nCheck]",
            template: "<div class=\"ui-g-12 semborda\">\n    <div class=\"ui-g-4\" [innerHTML]=\"label\"></div>\n    <div class=\"ui-g-4\">\n        <p-radioButton\n            [ngClass]=\"{ 'ng-invalid ng-dirty': message }\"\n            id=\"sim\"\n            type=\"radio\"\n            [value]=\"true\"\n            [name]=\"name\"\n            [formControl]=\"formControl\"\n            pRadioButton></p-radioButton>\n        <label>Sim</label>\n    </div>\n    <div class=\"ui-g-4\">\n        <p-radioButton\n            [ngClass]=\"{ 'ng-invalid ng-dirty': message }\"\n            id=\"n\u00E3o\"\n            type=\"radio\"\n            [value]=\"false\"\n            name=\"correspondencia\"\n            [formControl]=\"formControl\"\n            pRadioButton></p-radioButton>\n        <label>N\u00E3o</label>\n    </div>\n    <ng-content></ng-content>\n</div>\n",
            providers: [provideValueAccessor(CheckComponent_1)]
        })
    ], CheckComponent);
    return CheckComponent;
}(FieldComponent));
export { CheckComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2suY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG51dmVtL3ByaW1lbmctY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi9jcnVkL2NvbXBvbmVudHMvY2hlY2svY2hlY2suY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUlwRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsdUJBQXVCLEVBQUUsZ0JBQWdCLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM3SCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDcEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFPbEQ7SUFBb0Msa0NBQXNCO0lBTXREOzs7T0FHRztJQUNILHdCQUNJLGdCQUFrQyxFQUNsQyxRQUFrQixFQUNSLHVCQUFnRDtRQUg5RCxZQUlJLGtCQUFNLGdCQUFnQixFQUFFLFFBQVEsQ0FBQyxTQUNwQztRQUZhLDZCQUF1QixHQUF2Qix1QkFBdUIsQ0FBeUI7O0lBRTlELENBQUM7dUJBZlEsY0FBYztJQWlCdkI7O09BRUc7SUFDSCxpQ0FBUSxHQUFSO1FBQUEsaUJBV0M7UUFWRyxpQkFBTSxRQUFRLFdBQUUsQ0FBQTtRQUNoQixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyx1QkFBdUI7YUFDM0MsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQzthQUNuQyxTQUFTLENBQUMsVUFBQyxZQUE4QjtZQUN0QyxJQUFJLFlBQVksWUFBWSxxQkFBcUIsRUFBRTtnQkFDL0MsS0FBSSxDQUFDLE9BQU8sR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDO2FBQ3ZDO2lCQUFNO2dCQUNILEtBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO2FBQ3ZCO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDWCxDQUFDO0lBRUQ7O09BRUc7SUFDSCxvQ0FBVyxHQUFYO1FBQ0ksaUJBQU0sV0FBVyxXQUFFLENBQUE7UUFDbkIsSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNwQyxDQUFDOzs7Z0JBNUJxQixnQkFBZ0I7Z0JBQ3hCLFFBQVE7Z0JBQ2lCLHVCQUF1Qjs7SUFickQsY0FBYztRQUwxQixTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsVUFBVTtZQUNwQiwrMUJBQXFDO1lBQ3JDLFNBQVMsRUFBRSxDQUFFLG9CQUFvQixDQUFDLGdCQUFjLENBQUMsQ0FBRTtTQUN0RCxDQUFDO09BQ1csY0FBYyxDQTBDMUI7SUFBRCxxQkFBQztDQUFBLEFBMUNELENBQW9DLGNBQWMsR0EwQ2pEO1NBMUNZLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEluamVjdG9yIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSBcInJ4anNcIjtcblxuaW1wb3J0IHsgcHJvdmlkZVZhbHVlQWNjZXNzb3IsIEZvcm1Ob3RpZmljYXRpb25TZXJ2aWNlLCBGb3JtTm90aWZpY2F0aW9uLCBGaWVsZEZvcm1Ob3RpZmljYXRpb24gfSBmcm9tIFwiQG51dmVtL2FuZ3VsYXItYmFzZVwiO1xuaW1wb3J0IHsgRmllbGRDb21wb25lbnQgfSBmcm9tIFwiLi4vZmllbGQuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBDb250cm9sQ29udGFpbmVyIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogXCJbbkNoZWNrXVwiLFxuICAgIHRlbXBsYXRlVXJsOiBcIi4vY2hlY2suY29tcG9uZW50Lmh0bWxcIixcbiAgICBwcm92aWRlcnM6IFsgcHJvdmlkZVZhbHVlQWNjZXNzb3IoQ2hlY2tDb21wb25lbnQpIF0sXG59KVxuZXhwb3J0IGNsYXNzIENoZWNrQ29tcG9uZW50IGV4dGVuZHMgRmllbGRDb21wb25lbnQ8c3RyaW5nPiB7XG5cbiAgICBwcml2YXRlIHN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuXG4gICAgbWVzc2FnZTogU3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogTcOpdG9kbyBjb25zdHJ1dG9yIHJlc3BvbnPDoXZlbCBwb3IgY2FycmVnYXIgbyBzZXJ2acOnbyBkZSB2YWxpZGHDp8Ojb1xuICAgICAqIEBwYXJhbSBmb3JtTm90aWZpY2F0aW9uU2VydmljZVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBjb250cm9sQ29udGFpbmVyOiBDb250cm9sQ29udGFpbmVyLFxuICAgICAgICBpbmplY3RvcjogSW5qZWN0b3IsXG4gICAgICAgIHByb3RlY3RlZCBmb3JtTm90aWZpY2F0aW9uU2VydmljZTogRm9ybU5vdGlmaWNhdGlvblNlcnZpY2UpIHtcbiAgICAgICAgc3VwZXIoY29udHJvbENvbnRhaW5lciwgaW5qZWN0b3IpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE3DqXRvZG8gSW5pY2lhbCBwYXJhIHN1YnNjcmnDp8OjbyBubyBlbmRwb2ludCByZXNwb25zw6F2ZWwgcG9yIHZhbGlkYXIgbyBmb3JtdWzDoXJpb1xuICAgICAqL1xuICAgIG5nT25Jbml0KCk6IHZvaWQge1xuICAgICAgICBzdXBlci5uZ09uSW5pdCgpXG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uID0gdGhpcy5mb3JtTm90aWZpY2F0aW9uU2VydmljZVxuICAgICAgICAgICAgLm5vdGlmaWNhdGlvbnModGhpcy5mb3JtLCB0aGlzLm5hbWUpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKChub3RpZmljYXRpb246IEZvcm1Ob3RpZmljYXRpb24pID0+IHtcbiAgICAgICAgICAgICAgICBpZiAobm90aWZpY2F0aW9uIGluc3RhbmNlb2YgRmllbGRGb3JtTm90aWZpY2F0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubWVzc2FnZSA9IG5vdGlmaWNhdGlvbi5tZXNzYWdlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubWVzc2FnZSA9IG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTcOpdG9kbyByZXNwb25zw6F2ZWwgcG9yIHJlYWxpemFyIGEgc2FpZGEgZGFzIHN1YnNjcmnDp8O1ZXMgZG8gZW5kcG9udCBkZSB2YWxpZGHDp8Ojb1xuICAgICAqL1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgICAgICBzdXBlci5uZ09uRGVzdHJveSgpXG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgfVxuXG5cbn1cbiJdfQ==