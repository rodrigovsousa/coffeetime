import { __decorate, __extends } from "tslib";
import { Component, Input } from "@angular/core";
import { provideValueAccessor } from "@nuvem/angular-base";
import { FieldComponent } from "../field.component";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../../form-notification/form-notification.component';
import * as ɵngcc2 from 'primeng/inputmask';
import * as ɵngcc3 from 'primeng';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '@angular/forms';
import * as ɵngcc6 from '../validation-message/validation-message.component';

var _c0 = ["nInputMask", ""];
function InputMaskComponent_nValidationMessage_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "nValidationMessage", 6);
} if (rf & 2) {
    var ctx_r954 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("control", ctx_r954.formControl);
} }
var _c1 = function (a0) { return { "ng-invalid ng-dirty": a0 }; };
var _c2 = ["*"];
var InputMaskComponent = /** @class */ (function (_super) {
    __extends(InputMaskComponent, _super);
    function InputMaskComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InputMaskComponent_1 = InputMaskComponent;
    var InputMaskComponent_1;
    __decorate([
        Input()
    ], InputMaskComponent.prototype, "mask", void 0);
    __decorate([
        Input()
    ], InputMaskComponent.prototype, "placeholder", void 0);
InputMaskComponent.ɵfac = function InputMaskComponent_Factory(t) { return ɵInputMaskComponent_BaseFactory(t || InputMaskComponent); };
InputMaskComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InputMaskComponent, selectors: [["", "nInputMask", ""]], inputs: { mask: "mask", placeholder: "placeholder" }, features: [ɵngcc0.ɵɵProvidersFeature([provideValueAccessor(InputMaskComponent_1)]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c2, decls: 7, vars: 12, consts: [["form-notification", "", 1, "md-inputfield", 3, "name", "form"], ["notification", ""], ["pInputText", "", 3, "ngClass", "name", "formControl", "mask", "placeholder", "onBlur", "onFocus"], ["input", ""], [3, "for", "innerHTML"], [3, "control", 4, "ngIf"], [3, "control"]], template: function InputMaskComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "p-inputMask", 2, 3);
        ɵngcc0.ɵɵlistener("onBlur", function InputMaskComponent_Template_p_inputMask_onBlur_2_listener($event) { return ctx.onBlurEvent($event); })("onFocus", function InputMaskComponent_Template_p_inputMask_onFocus_2_listener($event) { return ctx.onFocusEvent($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "label", 4);
        ɵngcc0.ɵɵtemplate(5, InputMaskComponent_nValidationMessage_5_Template, 1, 1, "nValidationMessage", 5);
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r952 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("form", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(10, _c1, _r952.message))("name", ctx.name)("formControl", ctx.formControl)("mask", ctx.mask)("placeholder", ctx.placeholder);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("for", ctx.name)("innerHTML", ctx.label, ɵngcc0.ɵɵsanitizeHtml);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !_r952.message);
    } }, directives: [ɵngcc1.FormNotificationComponent, ɵngcc2.InputMask, ɵngcc3.InputText, ɵngcc4.NgClass, ɵngcc5.NgControlStatus, ɵngcc5.FormControlDirective, ɵngcc4.NgIf, ɵngcc6.ValidationMessageComponent], encapsulation: 2 });
var ɵInputMaskComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(InputMaskComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InputMaskComponent, [{
        type: Component,
        args: [{
                selector: "[nInputMask]",
                template: "<span #notification form-notification class=\"md-inputfield\" [name]=\"name\" [form]=\"form\">\n    <p-inputMask #input\n        pInputText\n        [ngClass]=\"{ 'ng-invalid ng-dirty': notification.message }\"\n        [name]=\"name\"\n        (onBlur)=\"onBlurEvent($event)\"\n        (onFocus)=\"onFocusEvent($event)\"\n        [formControl]=\"formControl\"\n        [mask]=\"mask\"\n        [placeholder]=\"placeholder\"></p-inputMask>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
                providers: [provideValueAccessor(InputMaskComponent_1)]
            }]
    }], null, { mask: [{
            type: Input
        }], placeholder: [{
            type: Input
        }] }); })();
    return InputMaskComponent;
}(FieldComponent));
export { InputMaskComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtbWFzay5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIm5nOi9AbnV2ZW0vcHJpbWVuZy1jb21wb25lbnRzL2xpYi9jcnVkL2NvbXBvbmVudHMvaW5wdXQtbWFzay9pbnB1dC1tYXNrLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPcEQ7QUFBNEQsSUFBcEIsc0NBQXNCO0FBQUMsSUFBL0Q7QUFBZ0M7QUFLekIsSUFHUCxDQUFDO0FBQ0QsMkJBVGEsa0JBQWtCO0FBQUU7QUFBOEIsSUFHM0Q7QUFBYSxRQURaLEtBQUssRUFBRTtBQUNaLG9EQUFpQjtBQUVqQixJQUNJO0FBQWEsUUFEWixLQUFLLEVBQUU7QUFDWiwyREFBd0I7SUFOWCxrQkFBa0IsK0NBTDlCLFNBQVMsQ0FBQyxjQUNQLFFBQVEsRUFBRSxjQUFjLGNBQ3hCOzRvQkFBMEMsY0FDMUMsU0FBUyxFQUFFLENBQUUsb0JBQW9CLENBQUM7a0JBQWtCLENBQUMsQ0FBRSxVQUMxRCxDQUFDO0tBQ1csa0JBQWtCLENBUTlCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQ0Q7QUFBQyxJQURELHlCQUFDO0FBQ0EsQ0FEQSxBQVJELENBQXdDLGNBQWMsR0FRckQ7QUFDRCxTQVRhLGtCQUFrQjtBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBwcm92aWRlVmFsdWVBY2Nlc3NvciB9IGZyb20gXCJAbnV2ZW0vYW5ndWxhci1iYXNlXCI7XG5pbXBvcnQgeyBGaWVsZENvbXBvbmVudCB9IGZyb20gXCIuLi9maWVsZC5jb21wb25lbnRcIjtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6IFwiW25JbnB1dE1hc2tdXCIsXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9pbnB1dC1tYXNrLmNvbXBvbmVudC5odG1sXCIsXG4gICAgcHJvdmlkZXJzOiBbIHByb3ZpZGVWYWx1ZUFjY2Vzc29yKElucHV0TWFza0NvbXBvbmVudCkgXSxcbn0pXG5leHBvcnQgY2xhc3MgSW5wdXRNYXNrQ29tcG9uZW50IGV4dGVuZHMgRmllbGRDb21wb25lbnQ8c3RyaW5nPiB7XG5cbiAgICBASW5wdXQoKVxuICAgIG1hc2s6IHN0cmluZztcblxuICAgIEBJbnB1dCgpXG4gICAgcGxhY2Vob2xkZXI6IHN0cmluZztcblxufVxuIl19