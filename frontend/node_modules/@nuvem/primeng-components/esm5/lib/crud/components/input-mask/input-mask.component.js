import { __decorate, __extends } from "tslib";
import { Component, Input } from "@angular/core";
import { provideValueAccessor } from "@nuvem/angular-base";
import { FieldComponent } from "../field.component";
var InputMaskComponent = /** @class */ (function (_super) {
    __extends(InputMaskComponent, _super);
    function InputMaskComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InputMaskComponent_1 = InputMaskComponent;
    var InputMaskComponent_1;
    __decorate([
        Input()
    ], InputMaskComponent.prototype, "mask", void 0);
    __decorate([
        Input()
    ], InputMaskComponent.prototype, "placeholder", void 0);
    InputMaskComponent = InputMaskComponent_1 = __decorate([
        Component({
            selector: "[nInputMask]",
            template: "<span #notification form-notification class=\"md-inputfield\" [name]=\"name\" [form]=\"form\">\n    <p-inputMask #input\n        pInputText\n        [ngClass]=\"{ 'ng-invalid ng-dirty': notification.message }\"\n        [name]=\"name\"\n        (onBlur)=\"onBlurEvent($event)\"\n        (onFocus)=\"onFocusEvent($event)\"\n        [formControl]=\"formControl\"\n        [mask]=\"mask\"\n        [placeholder]=\"placeholder\"></p-inputMask>\n    <label [for]=\"name\" [innerHTML]=\"label\"></label>\n    <nValidationMessage [control]=\"formControl\" *ngIf=\"!notification.message\"></nValidationMessage>\n    <ng-content></ng-content>\n</span>\n",
            providers: [provideValueAccessor(InputMaskComponent_1)]
        })
    ], InputMaskComponent);
    return InputMaskComponent;
}(FieldComponent));
export { InputMaskComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtbWFzay5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbnV2ZW0vcHJpbWVuZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NydWQvY29tcG9uZW50cy9pbnB1dC1tYXNrL2lucHV0LW1hc2suY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFPcEQ7SUFBd0Msc0NBQXNCO0lBQTlEOztJQVFBLENBQUM7MkJBUlksa0JBQWtCOztJQUczQjtRQURDLEtBQUssRUFBRTtvREFDSztJQUdiO1FBREMsS0FBSyxFQUFFOzJEQUNZO0lBTlgsa0JBQWtCO1FBTDlCLFNBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxjQUFjO1lBQ3hCLGdwQkFBMEM7WUFDMUMsU0FBUyxFQUFFLENBQUUsb0JBQW9CLENBQUMsb0JBQWtCLENBQUMsQ0FBRTtTQUMxRCxDQUFDO09BQ1csa0JBQWtCLENBUTlCO0lBQUQseUJBQUM7Q0FBQSxBQVJELENBQXdDLGNBQWMsR0FRckQ7U0FSWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IHByb3ZpZGVWYWx1ZUFjY2Vzc29yIH0gZnJvbSBcIkBudXZlbS9hbmd1bGFyLWJhc2VcIjtcbmltcG9ydCB7IEZpZWxkQ29tcG9uZW50IH0gZnJvbSBcIi4uL2ZpZWxkLmNvbXBvbmVudFwiO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogXCJbbklucHV0TWFza11cIixcbiAgICB0ZW1wbGF0ZVVybDogXCIuL2lucHV0LW1hc2suY29tcG9uZW50Lmh0bWxcIixcbiAgICBwcm92aWRlcnM6IFsgcHJvdmlkZVZhbHVlQWNjZXNzb3IoSW5wdXRNYXNrQ29tcG9uZW50KSBdLFxufSlcbmV4cG9ydCBjbGFzcyBJbnB1dE1hc2tDb21wb25lbnQgZXh0ZW5kcyBGaWVsZENvbXBvbmVudDxzdHJpbmc+IHtcblxuICAgIEBJbnB1dCgpXG4gICAgbWFzazogc3RyaW5nO1xuXG4gICAgQElucHV0KClcbiAgICBwbGFjZWhvbGRlcjogc3RyaW5nO1xuXG59XG4iXX0=