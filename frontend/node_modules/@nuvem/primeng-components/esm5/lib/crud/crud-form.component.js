import { __decorate } from "tslib";
import { Component, Input } from "@angular/core";
import { ActivatedRoute } from "@angular/router";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
import * as ɵngcc2 from './form.component';
import * as ɵngcc3 from 'primeng';

var _c0 = function (a0) { return [a0]; };
var _c1 = ["*"];
var CrudFormComponent = /** @class */ (function () {
    function CrudFormComponent(route) {
        this.route = route;
        this.disableSave = false;
        this.listRoute = "../../list";
    }
    CrudFormComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.paramMap.subscribe(function (params) {
            _this.action = params.get('action');
            if (params.get('id')) {
                _this.route.data.subscribe(function (data) {
                    if (data.value) {
                        _this.form.patchValue(data.value);
                    }
                });
            }
            else {
                _this.listRoute = "../list";
            }
            if (_this.action === "view") {
                _this.form.disable();
            }
            else if (_this.form.disabled) {
                _this.form.enable();
            }
        });
    };
    CrudFormComponent.ctorParameters = function () { return [
        { type: ActivatedRoute }
    ]; };
    __decorate([
        Input()
    ], CrudFormComponent.prototype, "form", void 0);
    __decorate([
        Input()
    ], CrudFormComponent.prototype, "service", void 0);
    __decorate([
        Input()
    ], CrudFormComponent.prototype, "disableSave", void 0);
CrudFormComponent.ɵfac = function CrudFormComponent_Factory(t) { return new (t || CrudFormComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ActivatedRoute)); };
CrudFormComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CrudFormComponent, selectors: [["nCrudForm"]], inputs: { disableSave: "disableSave", form: "form", service: "service" }, ngContentSelectors: _c1, decls: 4, vars: 9, consts: [[3, "form", "action", "route", "disableSave"], ["nButton", "", 1, "ui-g-12", "ui-lg-2", "ui-md-4", "ui-sm-12"], ["pButton", "", "type", "button", "label", "Voltar", 3, "routerLink"]], template: function CrudFormComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "nForm", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵelement(3, "button", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("form", ctx.form)("action", ctx.action)("route", ɵngcc0.ɵɵpureFunction1(5, _c0, ctx.listRoute))("disableSave", ctx.disableSave);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("routerLink", ɵngcc0.ɵɵpureFunction1(7, _c0, ctx.listRoute));
    } }, directives: [ɵngcc2.FormComponent, ɵngcc3.ButtonDirective, ɵngcc1.RouterLink], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CrudFormComponent, [{
        type: Component,
        args: [{
                selector: 'nCrudForm',
                template: "<nForm [form]=\"form\" [action]=\"action\" [route]=\"[listRoute]\" [disableSave]=\"disableSave\">\n    <ng-content></ng-content>\n    <div nButton class=\"ui-g-12 ui-lg-2 ui-md-4 ui-sm-12\">\n        <button pButton type=\"button\" [routerLink]=\"[listRoute]\" label=\"Voltar\"></button>\n    </div>\n</nForm>\n"
            }]
    }], function () { return [{ type: ɵngcc1.ActivatedRoute }]; }, { disableSave: [{
            type: Input
        }], form: [{
            type: Input
        }], service: [{
            type: Input
        }] }); })();
    return CrudFormComponent;
}());
export { CrudFormComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3J1ZC1mb3JtLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsibmc6L0BudXZlbS9wcmltZW5nLWNvbXBvbmVudHMvbGliL2NydWQvY3J1ZC1mb3JtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHekQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7Ozs7OztBQU1qRDtBQUVDLElBVUcsMkJBQW9CLEtBQXFCO0FBQUksUUFBekIsVUFBSyxHQUFMLEtBQUssQ0FBZ0I7QUFBQyxRQU5qQyxnQkFBVyxHQUFHLEtBQUssQ0FBQztBQUNqQyxRQUdJLGNBQVMsR0FBVyxZQUFZLENBQUM7QUFDckMsSUFDaUQsQ0FBQztBQUNsRCxJQUNJLG9DQUFRLEdBQVI7QUFBYyxRQUFkLGlCQW1CQztBQUNMLFFBbkJRLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxVQUFDLE1BQU07QUFBSSxZQUNyQyxLQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDL0MsWUFDWSxJQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUU7QUFDbEMsZ0JBQWdCLEtBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFDLElBQUk7QUFBSSxvQkFDL0IsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO0FBQ3BDLHdCQUF3QixLQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDekQscUJBQXFCO0FBQ3JCLGdCQUFnQixDQUFDLENBQUMsQ0FBQztBQUNuQixhQUFhO0FBQUMsaUJBQUs7QUFDbkIsZ0JBQWdCLEtBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO0FBQzNDLGFBQWE7QUFDYixZQUFZLElBQUksS0FBSSxDQUFDLE1BQU0sS0FBSyxNQUFNLEVBQUU7QUFDeEMsZ0JBQWdCLEtBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7QUFDcEMsYUFBYTtBQUFDLGlCQUFLLElBQUksS0FBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7QUFDM0MsZ0JBQWdCLEtBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDbkMsYUFBYTtBQUNiLFFBQVEsQ0FBQyxDQUFDLENBQUM7QUFDWCxJQUFJLENBQUM7QUFFTDtBQUM0RCxnQkF4QjdCLGNBQWM7QUFBRztBQUUxQyxJQVpPO0FBQWEsUUFBckIsS0FBSyxFQUFFO0FBQUMsbURBQWdCO0FBRTdCLElBQWE7QUFBYSxRQUFyQixLQUFLLEVBQUU7QUFBQyxzREFBK0I7QUFFNUMsSUFBYTtBQUFhLFFBQXJCLEtBQUssRUFBRTtBQUFDLDBEQUFvQjtJQU5wQixpQkFBaUIsd0JBSjdCLFNBQVMsQ0FBQyxjQUNQLFFBQVEsRUFBRSxXQUFXLGNBQ3JCO2lSQUF5QyxVQUM1QyxDQUFDLFFBQ1csaUJBQWlCLENBbUM3Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFDRDtBQUFDLElBREQsd0JBQUM7QUFDQSxDQURBLEFBbkNELElBbUNDO0FBQ0QsU0FwQ2EsaUJBQWlCO0FBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XG5pbXBvcnQgeyBDcnVkU2VydmljZSB9IGZyb20gXCIuL2NydWQtc2VydmljZS5zZXJ2aWNlXCI7XG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gXCJAYW5ndWxhci9yb3V0ZXJcIjtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICduQ3J1ZEZvcm0nLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9jcnVkLWZvcm0uY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBDcnVkRm9ybUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgICBASW5wdXQoKSBmb3JtOiBGb3JtR3JvdXA7XG5cbiAgICBASW5wdXQoKSBzZXJ2aWNlOiBDcnVkU2VydmljZTxhbnksIGFueT47XG5cbiAgICBASW5wdXQoKSBkaXNhYmxlU2F2ZSA9IGZhbHNlO1xuXG4gICAgYWN0aW9uOiBzdHJpbmc7XG5cbiAgICBsaXN0Um91dGU6IHN0cmluZyA9IFwiLi4vLi4vbGlzdFwiO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSByb3V0ZTogQWN0aXZhdGVkUm91dGUpIHsgfVxuXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMucm91dGUucGFyYW1NYXAuc3Vic2NyaWJlKChwYXJhbXMpID0+IHtcbiAgICAgICAgICAgIHRoaXMuYWN0aW9uID0gcGFyYW1zLmdldCgnYWN0aW9uJyk7XG5cbiAgICAgICAgICAgIGlmIChwYXJhbXMuZ2V0KCdpZCcpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yb3V0ZS5kYXRhLnN1YnNjcmliZSgoZGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS52YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5mb3JtLnBhdGNoVmFsdWUoZGF0YS52YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5saXN0Um91dGUgPSBcIi4uL2xpc3RcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLmFjdGlvbiA9PT0gXCJ2aWV3XCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmZvcm0uZGlzYWJsZSgpO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmZvcm0uZGlzYWJsZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmZvcm0uZW5hYmxlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxufVxuIl19