import { HttpParams } from "@angular/common/http";
var CrudServiceNuvem = /** @class */ (function () {
    function CrudServiceNuvem(uri, http) {
        this.uri = uri;
        this.http = http;
    }
    CrudServiceNuvem.prototype.save = function (entity) {
        return this.http.post(this.uri, entity);
    };
    CrudServiceNuvem.prototype.edit = function (entity) {
        return this.http.put(this.uri, entity);
    };
    CrudServiceNuvem.prototype.find = function (id) {
        return this.http.get(this.uri + "/" + id);
    };
    CrudServiceNuvem.prototype.delete = function (id) {
        return this.http.delete(this.uri + "/" + id);
    };
    CrudServiceNuvem.prototype.findAll = function (entity) {
        var params = new HttpParams();
        for (var field in entity) {
            params = params.append(field, entity[field]);
        }
        return this.http.get("" + this.uri, { params: params });
    };
    return CrudServiceNuvem;
}());
export { CrudServiceNuvem };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3J1ZC1zZXJ2aWNlLW51dmVtLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbnV2ZW0vcHJpbWVuZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NydWQvY3J1ZC1zZXJ2aWNlLW51dmVtLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFjLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRTlEO0lBRUksMEJBQW1CLEdBQVcsRUFBWSxJQUFnQjtRQUF2QyxRQUFHLEdBQUgsR0FBRyxDQUFRO1FBQVksU0FBSSxHQUFKLElBQUksQ0FBWTtJQUMxRCxDQUFDO0lBRUQsK0JBQUksR0FBSixVQUFLLE1BQVM7UUFDVixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFJLElBQUksQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVELCtCQUFJLEdBQUosVUFBSyxNQUFTO1FBQ1YsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzlDLENBQUM7SUFFRCwrQkFBSSxHQUFKLFVBQUssRUFBSztRQUNOLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQU8sSUFBSSxDQUFDLEdBQUcsU0FBSSxFQUFJLENBQUMsQ0FBQztJQUNqRCxDQUFDO0lBRUQsaUNBQU0sR0FBTixVQUFPLEVBQUs7UUFDUixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFPLElBQUksQ0FBQyxHQUFHLFNBQUksRUFBSSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVELGtDQUFPLEdBQVAsVUFBUSxNQUFTO1FBQ2IsSUFBSSxNQUFNLEdBQUcsSUFBSSxVQUFVLEVBQUUsQ0FBQztRQUU5QixLQUFLLElBQUksS0FBSyxJQUFJLE1BQU0sRUFBRTtZQUN0QixNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQVEsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7U0FDdEQ7UUFFRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFJLEtBQUcsSUFBSSxDQUFDLEdBQUssRUFBRSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQy9ELENBQUM7SUFFTCx1QkFBQztBQUFELENBQUMsQUEvQkQsSUErQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcnVkU2VydmljZSB9IGZyb20gXCIuL2NydWQtc2VydmljZS5zZXJ2aWNlXCI7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSBcInJ4anNcIjtcbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBQYXJhbXMgfSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uL2h0dHBcIjtcblxuZXhwb3J0IGNsYXNzIENydWRTZXJ2aWNlTnV2ZW08SSwgRT4gaW1wbGVtZW50cyBDcnVkU2VydmljZTxJLCBFPiB7XG5cbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgdXJpOiBzdHJpbmcsIHByb3RlY3RlZCBodHRwOiBIdHRwQ2xpZW50KSB7XG4gICAgfVxuXG4gICAgc2F2ZShlbnRpdHk6IEUpOiBPYnNlcnZhYmxlPEU+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0PEU+KHRoaXMudXJpLCBlbnRpdHkpO1xuICAgIH1cblxuICAgIGVkaXQoZW50aXR5OiBFKTogT2JzZXJ2YWJsZTxFPiB7XG4gICAgICAgIHJldHVybiB0aGlzLmh0dHAucHV0PEU+KHRoaXMudXJpLCBlbnRpdHkpO1xuICAgIH1cblxuICAgIGZpbmQoaWQ6IEkpOiBPYnNlcnZhYmxlPEU+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQ8RT4oYCR7dGhpcy51cml9LyR7aWR9YCk7XG4gICAgfVxuXG4gICAgZGVsZXRlKGlkOiBJKTogT2JzZXJ2YWJsZTxFPiB7XG4gICAgICAgIHJldHVybiB0aGlzLmh0dHAuZGVsZXRlPEU+KGAke3RoaXMudXJpfS8ke2lkfWApO1xuICAgIH1cblxuICAgIGZpbmRBbGwoZW50aXR5OiBFKTogT2JzZXJ2YWJsZTxFPiB7XG4gICAgICAgIGxldCBwYXJhbXMgPSBuZXcgSHR0cFBhcmFtcygpO1xuXG4gICAgICAgIGZvciAobGV0IGZpZWxkIGluIGVudGl0eSkge1xuICAgICAgICAgICAgcGFyYW1zID0gcGFyYW1zLmFwcGVuZChmaWVsZCwgPGFueT4gZW50aXR5W2ZpZWxkXSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcy5odHRwLmdldDxFPihgJHt0aGlzLnVyaX1gLCB7IHBhcmFtczogcGFyYW1zIH0pO1xuICAgIH1cblxufVxuIl19