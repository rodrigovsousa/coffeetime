import { __decorate } from "tslib";
import { Component, Input, Output, EventEmitter } from '@angular/core';
/**
 * Class DatatableButtonComponent
 * @class
 */
var DatatableButtonComponent = /** @class */ (function () {
    function DatatableButtonComponent() {
        /**
         * allowMultipleSelection property
         * @type {boolean}
         */
        this.allowMultipleSelection = true;
        /**
         * disabled property
         * @type boolean
         */
        this.disabled = false;
        /**
         * click property
         * @type {EventEmitter<any>}
         */
        this.click = new EventEmitter();
    }
    /**
     * onClick method
     * @param {any} event
     * @return void
     */
    DatatableButtonComponent.prototype.onClick = function (event) {
        this.click.emit(event);
        event.stopPropagation();
    };
    __decorate([
        Input()
    ], DatatableButtonComponent.prototype, "icon", void 0);
    __decorate([
        Input()
    ], DatatableButtonComponent.prototype, "class", void 0);
    __decorate([
        Input()
    ], DatatableButtonComponent.prototype, "bTooltip", void 0);
    __decorate([
        Input()
    ], DatatableButtonComponent.prototype, "name", void 0);
    __decorate([
        Input()
    ], DatatableButtonComponent.prototype, "allowMultipleSelection", void 0);
    __decorate([
        Input()
    ], DatatableButtonComponent.prototype, "disabled", void 0);
    __decorate([
        Output()
    ], DatatableButtonComponent.prototype, "click", void 0);
    DatatableButtonComponent = __decorate([
        Component({
            selector: 'basis-datatable-button',
            template: "<p pTooltip=\"{{ bTooltip }}\">\n    <button\n        type=\"button\" tooltipPosition=\"bottom\" class=\"{{ class }}\"\n        icon=\"ui-icon-{{ icon }}\" (click)=\"onClick($event)\" [disabled]=\"disabled\" pButton>\n    </button>\n</p>\n"
        })
    ], DatatableButtonComponent);
    return DatatableButtonComponent;
}());
export { DatatableButtonComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXRhYmxlLWJ1dHRvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbnV2ZW0vcHJpbWVuZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2RhdGF0YWJsZS9kYXRhdGFibGUtYnV0dG9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILFNBQVMsRUFDVCxLQUFLLEVBQ0wsTUFBTSxFQUNOLFlBQVksRUFDZixNQUFNLGVBQWUsQ0FBQztBQUN2Qjs7O0dBR0c7QUFLSDtJQUFBO1FBOEJJOzs7V0FHRztRQUVILDJCQUFzQixHQUFZLElBQUksQ0FBQztRQUV2Qzs7O1dBR0c7UUFFSCxhQUFRLEdBQVksS0FBSyxDQUFDO1FBRTFCOzs7V0FHRztRQUVILFVBQUssR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQVd2RCxDQUFDO0lBVEc7Ozs7T0FJRztJQUNILDBDQUFPLEdBQVAsVUFBUSxLQUFVO1FBQ2QsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdkIsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzVCLENBQUM7SUFwREQ7UUFEQyxLQUFLLEVBQUU7MERBQ0s7SUFPYjtRQURDLEtBQUssRUFBRTsyREFDTTtJQU9kO1FBREMsS0FBSyxFQUFFOzhEQUNTO0lBT2pCO1FBREMsS0FBSyxFQUFFOzBEQUNLO0lBT2I7UUFEQyxLQUFLLEVBQUU7NEVBQytCO0lBT3ZDO1FBREMsS0FBSyxFQUFFOzhEQUNrQjtJQU8xQjtRQURDLE1BQU0sRUFBRTsyREFDMEM7SUFqRDFDLHdCQUF3QjtRQUpwQyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsd0JBQXdCO1lBQ2xDLDJQQUFnRDtTQUNuRCxDQUFDO09BQ1csd0JBQXdCLENBNERwQztJQUFELCtCQUFDO0NBQUEsQUE1REQsSUE0REM7U0E1RFksd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDb21wb25lbnQsXG4gICAgSW5wdXQsXG4gICAgT3V0cHV0LFxuICAgIEV2ZW50RW1pdHRlclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbi8qKlxuICogQ2xhc3MgRGF0YXRhYmxlQnV0dG9uQ29tcG9uZW50XG4gKiBAY2xhc3NcbiAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdiYXNpcy1kYXRhdGFibGUtYnV0dG9uJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vZGF0YXRhYmxlLWJ1dHRvbi5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgRGF0YXRhYmxlQnV0dG9uQ29tcG9uZW50IHtcblxuICAgIC8qKlxuICAgICAqIGljb24gcHJvcGVydHlcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgaWNvbjogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogY2xhc3MgcHJvcGVydHlcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgY2xhc3M6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIGJUb29sdGlwIHByb3BlcnR5XG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIGJUb29sdGlwOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBuYW1lIHByb3BlcnR5XG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIG5hbWU6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIGFsbG93TXVsdGlwbGVTZWxlY3Rpb24gcHJvcGVydHlcbiAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIGFsbG93TXVsdGlwbGVTZWxlY3Rpb246IGJvb2xlYW4gPSB0cnVlO1xuXG4gICAgLyoqXG4gICAgICogZGlzYWJsZWQgcHJvcGVydHlcbiAgICAgKiBAdHlwZSBib29sZWFuXG4gICAgICovXG4gICAgQElucHV0KClcbiAgICBkaXNhYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgLyoqXG4gICAgICogY2xpY2sgcHJvcGVydHlcbiAgICAgKiBAdHlwZSB7RXZlbnRFbWl0dGVyPGFueT59XG4gICAgICovXG4gICAgQE91dHB1dCgpXG4gICAgY2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgICAvKipcbiAgICAgKiBvbkNsaWNrIG1ldGhvZFxuICAgICAqIEBwYXJhbSB7YW55fSBldmVudFxuICAgICAqIEByZXR1cm4gdm9pZFxuICAgICAqL1xuICAgIG9uQ2xpY2soZXZlbnQ6IGFueSkge1xuICAgICAgICB0aGlzLmNsaWNrLmVtaXQoZXZlbnQpO1xuICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9XG59XG4iXX0=