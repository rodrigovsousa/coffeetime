import { __decorate } from "tslib";
import { Component, EventEmitter, Output, Input } from '@angular/core';
import { Subject } from 'rxjs';
import { debounceTime } from 'rxjs/operators';
var FilterColumn = /** @class */ (function () {
    function FilterColumn() {
        this.listaOriginal = [];
        this.lista = [];
        this.labelDefaultImplementation = false;
        this.updateFiltro = false;
        this.customFilterOptions = {};
        this.template = 'filter_text';
        this.outputEvent = new EventEmitter();
        this.debouncer = new Subject();
        this.resultado = [];
        this.listaFields = [];
    }
    FilterColumn.prototype.ngOnInit = function () {
        var _this = this;
        this.debouncer
            .pipe(debounceTime((this.tableType === 'memory') ? 300 : 1000))
            .subscribe(function (value) { return _this.outputEvent.emit(value); });
        this.template = "filter_" + this.filterType;
    };
    FilterColumn.prototype.ngOnChanges = function (changes) {
        if (this.checkChanges(changes, 'listaOriginal')) {
            this.preencherFields();
        }
    };
    FilterColumn.prototype.checkChanges = function (changes, property) {
        return changes[property] && changes[property].previousValue != changes[property].currentValue;
    };
    /**
     * Método para propagar o evento de filtragem
     * @param event filtro
     */
    FilterColumn.prototype.filtrar = function (event) {
        this.debouncer.next(this.filtro);
    };
    /**
     * Preenche os itens que serão exibidos no multiselect, removendo duplicidades
     */
    FilterColumn.prototype.preencherFields = function () {
        var _this = this;
        this.listaFields = [];
        this.listaOriginal.filter(function (pi) { return pi[_this.field] !== null; }).forEach(function (row) {
            var item = { label: row[_this.field], value: row[_this.field] };
            if (!_this.verificarSeExisteField(item)) {
                _this.listaFields.push(item);
            }
        });
    };
    /**
     *
     * @param field Verifica duplicidade de fields nas opções de seleção
     */
    FilterColumn.prototype.verificarSeExisteField = function (field) {
        return this.listaFields.some(function (item) {
            return item.value == field.value;
        });
    };
    /**
     * Caso o usuaŕio não forneça uma lista para o options, será criada uma lista com
     * os valores presentes na tabela
     */
    FilterColumn.prototype.getCustomFilterOptions = function () {
        if (this.customFilterOptions.hasOwnProperty(this.field)) {
            return this.customFilterOptions[this.field];
        }
        return this.listaFields;
    };
    __decorate([
        Input()
    ], FilterColumn.prototype, "listaOriginal", void 0);
    __decorate([
        Input()
    ], FilterColumn.prototype, "lista", void 0);
    __decorate([
        Input()
    ], FilterColumn.prototype, "field", void 0);
    __decorate([
        Input()
    ], FilterColumn.prototype, "header", void 0);
    __decorate([
        Input()
    ], FilterColumn.prototype, "labelDefaultImplementation", void 0);
    __decorate([
        Input()
    ], FilterColumn.prototype, "labelDefaultName", void 0);
    __decorate([
        Input()
    ], FilterColumn.prototype, "updateFiltro", void 0);
    __decorate([
        Input()
    ], FilterColumn.prototype, "filterType", void 0);
    __decorate([
        Input()
    ], FilterColumn.prototype, "tableType", void 0);
    __decorate([
        Input()
    ], FilterColumn.prototype, "customFilterOptions", void 0);
    __decorate([
        Input()
    ], FilterColumn.prototype, "template", void 0);
    __decorate([
        Output()
    ], FilterColumn.prototype, "outputEvent", void 0);
    FilterColumn = __decorate([
        Component({
            selector: 'basis-filter-column',
            template: "<div [ngSwitch]=\"filterType\">\n    <div *ngSwitchCase=\"'text'\">\n        <div class=\"ui-g form-group\">\n            <div class=\"ui-md-12\">\n                <span class=\"md-inputfield\">\n                    <input type=\"text\" pInputText (input)=\"filtrar($event)\" [(ngModel)]=\"filtro\">\n                    <label>{{ (header) ? header : 'Filtro' }}</label>\n                </span>\n            </div>\n        </div>\n    </div>\n    <div *ngSwitchCase=\"'select'\">\n        <p-multiSelect\n            [options]=\"getCustomFilterOptions()\"\n            [defaultLabel]=\"(header)? header: '&nbsp;'\"\n            [optionLabel]=\"'label'\"\n            appendTo=\"body\"\n            [ngModelOptions]=\"{standalone: true}\"\n            (onChange)=\"filtrar($event)\"\n            [(ngModel)]=\"filtro\"\n            [style]=\"{'width':'100%'}\">\n        </p-multiSelect>\n    </div>\n</div>\n"
        })
    ], FilterColumn);
    return FilterColumn;
}());
export { FilterColumn };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLWNvbHVtbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbnV2ZW0vcHJpbWVuZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2RhdGF0YWJsZS9maWx0ZXItY29sdW1uL2ZpbHRlci1jb2x1bW4uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFtQyxNQUFNLGVBQWUsQ0FBQztBQUN4RyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQy9CLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQU05QztJQWtDSTtRQWhDUyxrQkFBYSxHQUFVLEVBQUUsQ0FBQztRQUUxQixVQUFLLEdBQVUsRUFBRSxDQUFDO1FBTWxCLCtCQUEwQixHQUFZLEtBQUssQ0FBQztRQUk1QyxpQkFBWSxHQUFZLEtBQUssQ0FBQztRQU05Qix3QkFBbUIsR0FBVyxFQUFFLENBQUM7UUFFakMsYUFBUSxHQUFHLGFBQWEsQ0FBQztRQUV4QixnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFbkMsY0FBUyxHQUFpQixJQUFJLE9BQU8sRUFBTyxDQUFDO1FBSXJELGNBQVMsR0FBVSxFQUFFLENBQUM7UUFFZCxnQkFBVyxHQUFVLEVBQUUsQ0FBQztJQUVoQixDQUFDO0lBRWpCLCtCQUFRLEdBQVI7UUFBQSxpQkFNQztRQUxHLElBQUksQ0FBQyxTQUFTO2FBQ1QsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLEtBQUssUUFBUSxDQUFDLENBQUEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDN0QsU0FBUyxDQUFDLFVBQUMsS0FBSyxJQUFLLE9BQUEsS0FBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQTVCLENBQTRC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bXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgT3V0cHV0LCBJbnB1dCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2UsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZGVib3VuY2VUaW1lIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2Jhc2lzLWZpbHRlci1jb2x1bW4nLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9maWx0ZXItY29sdW1uLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBGaWx0ZXJDb2x1bW4gaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uSW5pdCB7XG5cbiAgICBASW5wdXQoKSBsaXN0YU9yaWdpbmFsOiBhbnlbXSA9IFtdO1xuXG4gICAgQElucHV0KCkgbGlzdGE6IGFueVtdID0gW107XG5cbiAgICBASW5wdXQoKSBmaWVsZDogc3RyaW5nO1xuXG4gICAgQElucHV0KCkgaGVhZGVyOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKSBsYWJlbERlZmF1bHRJbXBsZW1lbnRhdGlvbjogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgQElucHV0KCkgbGFiZWxEZWZhdWx0TmFtZTogc3RyaW5nO1xuXG4gICAgQElucHV0KCkgdXBkYXRlRmlsdHJvOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKSBmaWx0ZXJUeXBlOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKSB0YWJsZVR5cGU6IHN0cmluZztcblxuICAgIEBJbnB1dCgpIGN1c3RvbUZpbHRlck9wdGlvbnM6IE9iamVjdCA9IHt9O1xuXG4gICAgQElucHV0KCkgdGVtcGxhdGUgPSAnZmlsdGVyX3RleHQnO1xuXG4gICAgQE91dHB1dCgpIG91dHB1dEV2ZW50ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gICAgcHJpdmF0ZSBkZWJvdW5jZXI6IFN1YmplY3Q8YW55PiA9IG5ldyBTdWJqZWN0PGFueT4oKTtcblxuICAgIGZpbHRybzogYW55O1xuXG4gICAgcmVzdWx0YWRvOiBhbnlbXSA9IFtdO1xuXG4gICAgcHJpdmF0ZSBsaXN0YUZpZWxkczogYW55W10gPSBbXTtcblxuICAgIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5kZWJvdW5jZXJcbiAgICAgICAgICAgIC5waXBlKGRlYm91bmNlVGltZSgodGhpcy50YWJsZVR5cGUgPT09ICdtZW1vcnknKT8gMzAwIDogMTAwMCkpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKCh2YWx1ZSkgPT4gdGhpcy5vdXRwdXRFdmVudC5lbWl0KHZhbHVlKSk7XG5cbiAgICAgICAgdGhpcy50ZW1wbGF0ZSA9IGBmaWx0ZXJfJHt0aGlzLmZpbHRlclR5cGV9YDtcbiAgICB9XG5cbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiB7IFtwcm9wTmFtZTogc3RyaW5nXTogU2ltcGxlQ2hhbmdlIH0pIHtcbiAgICAgICAgaWYgKHRoaXMuY2hlY2tDaGFuZ2VzKGNoYW5nZXMsICdsaXN0YU9yaWdpbmFsJykpIHtcbiAgICAgICAgICAgIHRoaXMucHJlZW5jaGVyRmllbGRzKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjaGVja0NoYW5nZXMoY2hhbmdlczogeyBbcHJvcE5hbWU6IHN0cmluZ106IFNpbXBsZUNoYW5nZSB9LCBwcm9wZXJ0eSkge1xuICAgICAgICByZXR1cm4gY2hhbmdlc1twcm9wZXJ0eV0gJiYgY2hhbmdlc1twcm9wZXJ0eV0ucHJldmlvdXNWYWx1ZSAhPSBjaGFuZ2VzW3Byb3BlcnR5XS5jdXJyZW50VmFsdWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTcOpdG9kbyBwYXJhIHByb3BhZ2FyIG8gZXZlbnRvIGRlIGZpbHRyYWdlbVxuICAgICAqIEBwYXJhbSBldmVudCBmaWx0cm9cbiAgICAgKi9cbiAgICBmaWx0cmFyKGV2ZW50KSB7XG4gICAgICAgIHRoaXMuZGVib3VuY2VyLm5leHQodGhpcy5maWx0cm8pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFByZWVuY2hlIG9zIGl0ZW5zIHF1ZSBzZXLDo28gZXhpYmlkb3Mgbm8gbXVsdGlzZWxlY3QsIHJlbW92ZW5kbyBkdXBsaWNpZGFkZXNcbiAgICAgKi9cbiAgICBwcmVlbmNoZXJGaWVsZHMoKSB7XG4gICAgICAgIHRoaXMubGlzdGFGaWVsZHMgPSBbXTtcbiAgICAgICAgdGhpcy5saXN0YU9yaWdpbmFsLmZpbHRlcihwaSA9PiBwaVt0aGlzLmZpZWxkXSAhPT0gbnVsbCkuZm9yRWFjaChyb3cgPT4ge1xuICAgICAgICAgICAgbGV0IGl0ZW0gPSB7bGFiZWw6IHJvd1t0aGlzLmZpZWxkXSwgdmFsdWU6IHJvd1t0aGlzLmZpZWxkXX07XG4gICAgICAgICAgICBpZiAoIXRoaXMudmVyaWZpY2FyU2VFeGlzdGVGaWVsZChpdGVtKSkge1xuICAgICAgICAgICAgICAgIHRoaXMubGlzdGFGaWVsZHMucHVzaChpdGVtKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZmllbGQgVmVyaWZpY2EgZHVwbGljaWRhZGUgZGUgZmllbGRzIG5hcyBvcMOnw7VlcyBkZSBzZWxlw6fDo29cbiAgICAgKi9cbiAgICB2ZXJpZmljYXJTZUV4aXN0ZUZpZWxkKGZpZWxkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxpc3RhRmllbGRzLnNvbWUoaXRlbSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gaXRlbS52YWx1ZSA9PSBmaWVsZC52YWx1ZTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2FzbyBvIHVzdWHFlWlvIG7Do28gZm9ybmXDp2EgdW1hIGxpc3RhIHBhcmEgbyBvcHRpb25zLCBzZXLDoSBjcmlhZGEgdW1hIGxpc3RhIGNvbVxuICAgICAqIG9zIHZhbG9yZXMgcHJlc2VudGVzIG5hIHRhYmVsYVxuICAgICAqL1xuICAgIGdldEN1c3RvbUZpbHRlck9wdGlvbnMoKSB7XG4gICAgICAgIGlmICh0aGlzLmN1c3RvbUZpbHRlck9wdGlvbnMuaGFzT3duUHJvcGVydHkodGhpcy5maWVsZCkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmN1c3RvbUZpbHRlck9wdGlvbnNbdGhpcy5maWVsZF07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcy5saXN0YUZpZWxkcztcbiAgICB9XG5cbn1cbiJdfQ==