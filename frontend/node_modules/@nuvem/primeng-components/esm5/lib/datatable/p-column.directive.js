import { __decorate } from "tslib";
import { Input, EventEmitter, TemplateRef, Output, ContentChildren, ContentChild, Directive } from '@angular/core';
import { PrimeTemplate } from 'primeng';
var Column = /** @class */ (function () {
    function Column() {
        this.filterType = 'text';
        this.exportable = true;
        this.resizable = true;
        this.sortFunction = new EventEmitter();
    }
    Column.prototype.ngAfterContentInit = function () {
        var _this = this;
        this.templates.forEach(function (item) {
            switch (item.getType()) {
                case 'header':
                    _this.headerTemplate = item.template;
                    break;
                case 'body':
                    _this.bodyTemplate = item.template;
                    break;
                case 'footer':
                    _this.footerTemplate = item.template;
                    break;
                case 'filter':
                    _this.filterTemplate = item.template;
                    break;
                case 'editor':
                    _this.editorTemplate = item.template;
                    break;
                case 'input':
                    _this.inputTemplate = item.template;
                    break;
                case 'output':
                    _this.outputTemplate = item.template;
                    break;
                default:
                    _this.bodyTemplate = item.template;
                    break;
            }
        });
    };
    __decorate([
        Input()
    ], Column.prototype, "field", void 0);
    __decorate([
        Input()
    ], Column.prototype, "colId", void 0);
    __decorate([
        Input()
    ], Column.prototype, "sortField", void 0);
    __decorate([
        Input()
    ], Column.prototype, "filterField", void 0);
    __decorate([
        Input()
    ], Column.prototype, "header", void 0);
    __decorate([
        Input()
    ], Column.prototype, "footer", void 0);
    __decorate([
        Input()
    ], Column.prototype, "sortable", void 0);
    __decorate([
        Input()
    ], Column.prototype, "editable", void 0);
    __decorate([
        Input()
    ], Column.prototype, "filter", void 0);
    __decorate([
        Input()
    ], Column.prototype, "filterMatchMode", void 0);
    __decorate([
        Input()
    ], Column.prototype, "filterType", void 0);
    __decorate([
        Input()
    ], Column.prototype, "excludeGlobalFilter", void 0);
    __decorate([
        Input()
    ], Column.prototype, "rowspan", void 0);
    __decorate([
        Input()
    ], Column.prototype, "colspan", void 0);
    __decorate([
        Input()
    ], Column.prototype, "scope", void 0);
    __decorate([
        Input()
    ], Column.prototype, "style", void 0);
    __decorate([
        Input()
    ], Column.prototype, "styleClass", void 0);
    __decorate([
        Input()
    ], Column.prototype, "exportable", void 0);
    __decorate([
        Input()
    ], Column.prototype, "headerStyle", void 0);
    __decorate([
        Input()
    ], Column.prototype, "headerStyleClass", void 0);
    __decorate([
        Input()
    ], Column.prototype, "bodyStyle", void 0);
    __decorate([
        Input()
    ], Column.prototype, "bodyStyleClass", void 0);
    __decorate([
        Input()
    ], Column.prototype, "footerStyle", void 0);
    __decorate([
        Input()
    ], Column.prototype, "footerStyleClass", void 0);
    __decorate([
        Input()
    ], Column.prototype, "hidden", void 0);
    __decorate([
        Input()
    ], Column.prototype, "expander", void 0);
    __decorate([
        Input()
    ], Column.prototype, "selectionMode", void 0);
    __decorate([
        Input()
    ], Column.prototype, "filterPlaceholder", void 0);
    __decorate([
        Input()
    ], Column.prototype, "filterMaxlength", void 0);
    __decorate([
        Input()
    ], Column.prototype, "frozen", void 0);
    __decorate([
        Input()
    ], Column.prototype, "resizable", void 0);
    __decorate([
        Output()
    ], Column.prototype, "sortFunction", void 0);
    __decorate([
        ContentChildren(PrimeTemplate)
    ], Column.prototype, "templates", void 0);
    __decorate([
        ContentChild(TemplateRef)
    ], Column.prototype, "template", void 0);
    Column = __decorate([
        Directive({
            selector: 'p-column'
        })
    ], Column);
    return Column;
}());
export { Column };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicC1jb2x1bW4uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG51dmVtL3ByaW1lbmctY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi9kYXRhdGFibGUvcC1jb2x1bW4uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBYSxXQUFXLEVBQW9CLE1BQU0sRUFBRSxlQUFlLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNoSixPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBS3hDO0lBQUE7UUFzQmEsZUFBVSxHQUFXLE1BQU0sQ0FBQztRQWM1QixlQUFVLEdBQVksSUFBSSxDQUFDO1FBMEIzQixjQUFTLEdBQVksSUFBSSxDQUFDO1FBRXpCLGlCQUFZLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7SUF5RG5FLENBQUM7SUFyQ0csbUNBQWtCLEdBQWxCO1FBQUEsaUJBb0NDO1FBbkNHLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLFVBQUMsSUFBSTtZQUN4QixRQUFRLElBQUksQ0FBQyxPQUFPLEVBQUUsRUFBRTtnQkFDcEIsS0FBSyxRQUFRO29CQUNULEtBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztvQkFDcEMsTUFBTTtnQkFFVixLQUFLLE1BQU07b0JBQ1AsS0FBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO29CQUNsQyxNQUFNO2dCQUVWLEtBQUssUUFBUTtvQkFDVCxLQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7b0JBQ3BDLE1BQU07Z0JBRVYsS0FBSyxRQUFRO29CQUNULEtBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztvQkFDcEMsTUFBTTtnQkFFVixLQUFLLFFBQVE7b0JBQ1QsS0FBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO29CQUNwQyxNQUFNO2dCQUVWLEtBQUssT0FBTztvQkFDUixLQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7b0JBQ25DLE1BQU07Z0JBRVYsS0FBSyxRQUFRO29CQUNULEtBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztvQkFDcEMsTUFBTTtnQkFFVjtvQkFDSSxLQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7b0JBQ2xDLE1BQU07YUFDYjtRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQXRIUTtRQUFSLEtBQUssRUFBRTt5Q0FBZTtJQUVkO1FBQVIsS0FBSyxFQUFFO3lDQUFlO0lBRWQ7UUFBUixLQUFLLEVBQUU7NkNBQW1CO0lBRWxCO1FBQVIsS0FBSyxFQUFFOytDQUFxQjtJQUVwQjtRQUFSLEtBQUssRUFBRTswQ0FBZ0I7SUFFZjtRQUFSLEtBQUssRUFBRTswQ0FBZ0I7SUFFZjtRQUFSLEtBQUssRUFBRTs0Q0FBZTtJQUVkO1FBQVIsS0FBSyxFQUFFOzRDQUFtQjtJQUVsQjtRQUFSLEtBQUssRUFBRTswQ0FBaUI7SUFFaEI7UUFBUixLQUFLLEVBQUU7bURBQXlCO0lBRXhCO1FBQVIsS0FBSyxFQUFFOzhDQUE2QjtJQUU1QjtRQUFSLEtBQUssRUFBRTt1REFBOEI7SUFFN0I7UUFBUixLQUFLLEVBQUU7MkNBQWlCO0lBRWhCO1FBQVIsS0FBSyxFQUFFOzJDQUFpQjtJQUVoQjtRQUFSLEtBQUssRUFBRTt5Q0FBZTtJQUVkO1FBQVIsS0FBSyxFQUFFO3lDQUFZO0lBRVg7UUFBUixLQUFLLEVBQUU7OENBQW9CO0lBRW5CO1FBQVIsS0FBSyxFQUFFOzhDQUE0QjtJQUUzQjtRQUFSLEtBQUssRUFBRTsrQ0FBa0I7SUFFakI7UUFBUixLQUFLLEVBQUU7b0RBQTBCO0lBRXpCO1FBQVIsS0FBSyxFQUFFOzZDQUFnQjtJQUVmO1FBQVIsS0FBSyxFQUFFO2tEQUF3QjtJQUV2QjtRQUFSLEtBQUssRUFBRTsrQ0FBa0I7SUFFakI7UUFBUixLQUFLLEVBQUU7b0RBQTBCO0lBRXpCO1FBQVIsS0FBSyxFQUFFOzBDQUFpQjtJQUVoQjtRQUFSLEtBQUssRUFBRTs0Q0FBbUI7SUFFbEI7UUFBUixLQUFLLEVBQUU7aURBQXVCO0lBRXRCO1FBQVIsS0FBSyxFQUFFO3FEQUEyQjtJQUUxQjtRQUFSLEtBQUssRUFBRTttREFBeUI7SUFFeEI7UUFBUixLQUFLLEVBQUU7MENBQWlCO0lBRWhCO1FBQVIsS0FBSyxFQUFFOzZDQUEyQjtJQUV6QjtRQUFULE1BQU0sRUFBRTtnREFBc0Q7SUFFL0I7UUFBL0IsZUFBZSxDQUFDLGFBQWEsQ0FBQzs2Q0FBMkI7SUFFL0I7UUFBMUIsWUFBWSxDQUFDLFdBQVcsQ0FBQzs0Q0FBNEI7SUFwRTdDLE1BQU07UUFIbEIsU0FBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLFVBQVU7U0FDdkIsQ0FBQztPQUNXLE1BQU0sQ0F5SGxCO0lBQUQsYUFBQztDQUFBLEFBekhELElBeUhDO1NBekhZLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCwgRXZlbnRFbWl0dGVyLCBRdWVyeUxpc3QsIFRlbXBsYXRlUmVmLCBBZnRlckNvbnRlbnRJbml0LCBPdXRwdXQsIENvbnRlbnRDaGlsZHJlbiwgQ29udGVudENoaWxkLCBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFByaW1lVGVtcGxhdGUgfSBmcm9tICdwcmltZW5nJztcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdwLWNvbHVtbidcbn0pXG5leHBvcnQgY2xhc3MgQ29sdW1uIGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCB7XG5cbiAgICBASW5wdXQoKSBmaWVsZDogc3RyaW5nO1xuXG4gICAgQElucHV0KCkgY29sSWQ6IHN0cmluZztcblxuICAgIEBJbnB1dCgpIHNvcnRGaWVsZDogc3RyaW5nO1xuXG4gICAgQElucHV0KCkgZmlsdGVyRmllbGQ6IHN0cmluZztcblxuICAgIEBJbnB1dCgpIGhlYWRlcjogc3RyaW5nO1xuXG4gICAgQElucHV0KCkgZm9vdGVyOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKSBzb3J0YWJsZTogYW55O1xuXG4gICAgQElucHV0KCkgZWRpdGFibGU6IGJvb2xlYW47XG5cbiAgICBASW5wdXQoKSBmaWx0ZXI6IGJvb2xlYW47XG5cbiAgICBASW5wdXQoKSBmaWx0ZXJNYXRjaE1vZGU6IHN0cmluZztcblxuICAgIEBJbnB1dCgpIGZpbHRlclR5cGU6IHN0cmluZyA9ICd0ZXh0JztcblxuICAgIEBJbnB1dCgpIGV4Y2x1ZGVHbG9iYWxGaWx0ZXI6IGJvb2xlYW47XG5cbiAgICBASW5wdXQoKSByb3dzcGFuOiBudW1iZXI7XG5cbiAgICBASW5wdXQoKSBjb2xzcGFuOiBudW1iZXI7XG5cbiAgICBASW5wdXQoKSBzY29wZTogc3RyaW5nO1xuXG4gICAgQElucHV0KCkgc3R5bGU6IGFueTtcblxuICAgIEBJbnB1dCgpIHN0eWxlQ2xhc3M6IHN0cmluZztcblxuICAgIEBJbnB1dCgpIGV4cG9ydGFibGU6IGJvb2xlYW4gPSB0cnVlO1xuXG4gICAgQElucHV0KCkgaGVhZGVyU3R5bGU6IGFueTtcblxuICAgIEBJbnB1dCgpIGhlYWRlclN0eWxlQ2xhc3M6IHN0cmluZztcblxuICAgIEBJbnB1dCgpIGJvZHlTdHlsZTogYW55O1xuXG4gICAgQElucHV0KCkgYm9keVN0eWxlQ2xhc3M6IHN0cmluZztcblxuICAgIEBJbnB1dCgpIGZvb3RlclN0eWxlOiBhbnk7XG5cbiAgICBASW5wdXQoKSBmb290ZXJTdHlsZUNsYXNzOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKSBoaWRkZW46IGJvb2xlYW47XG5cbiAgICBASW5wdXQoKSBleHBhbmRlcjogYm9vbGVhbjtcblxuICAgIEBJbnB1dCgpIHNlbGVjdGlvbk1vZGU6IHN0cmluZztcblxuICAgIEBJbnB1dCgpIGZpbHRlclBsYWNlaG9sZGVyOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKSBmaWx0ZXJNYXhsZW5ndGg6IG51bWJlcjtcblxuICAgIEBJbnB1dCgpIGZyb3plbjogYm9vbGVhbjtcblxuICAgIEBJbnB1dCgpIHJlc2l6YWJsZTogYm9vbGVhbiA9IHRydWU7XG5cbiAgICBAT3V0cHV0KCkgc29ydEZ1bmN0aW9uOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICAgIEBDb250ZW50Q2hpbGRyZW4oUHJpbWVUZW1wbGF0ZSkgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcblxuICAgIEBDb250ZW50Q2hpbGQoVGVtcGxhdGVSZWYpIHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gICAgcHVibGljIGhlYWRlclRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gICAgcHVibGljIGJvZHlUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcblxuICAgIHB1YmxpYyBmb290ZXJUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcblxuICAgIHB1YmxpYyBmaWx0ZXJUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcblxuICAgIHB1YmxpYyBlZGl0b3JUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcblxuICAgIHB1YmxpYyBpbnB1dFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gICAgcHVibGljIG91dHB1dFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQge1xuICAgICAgICB0aGlzLnRlbXBsYXRlcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgICAgICBzd2l0Y2ggKGl0ZW0uZ2V0VHlwZSgpKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnaGVhZGVyJzpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5oZWFkZXJUZW1wbGF0ZSA9IGl0ZW0udGVtcGxhdGU7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSAnYm9keSc6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYm9keVRlbXBsYXRlID0gaXRlbS50ZW1wbGF0ZTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlICdmb290ZXInOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLmZvb3RlclRlbXBsYXRlID0gaXRlbS50ZW1wbGF0ZTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlICdmaWx0ZXInOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLmZpbHRlclRlbXBsYXRlID0gaXRlbS50ZW1wbGF0ZTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlICdlZGl0b3InOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLmVkaXRvclRlbXBsYXRlID0gaXRlbS50ZW1wbGF0ZTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlICdpbnB1dCc6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaW5wdXRUZW1wbGF0ZSA9IGl0ZW0udGVtcGxhdGU7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSAnb3V0cHV0JzpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vdXRwdXRUZW1wbGF0ZSA9IGl0ZW0udGVtcGxhdGU7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ib2R5VGVtcGxhdGUgPSBpdGVtLnRlbXBsYXRlO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl19