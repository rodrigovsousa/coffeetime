import { __decorate } from "tslib";
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { PageNotificationService } from './../../page-notification/page-notification.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'primeng';
import * as ɵngcc2 from '@angular/forms';

var _c0 = function () { return { width: "100%" }; };
var _c1 = function () { return { standalone: true }; };
var ShowColumn = /** @class */ (function () {
    function ShowColumn(pageNotificationService) {
        this.pageNotificationService = pageNotificationService;
        /**
         * lista de colunas disponívels na tabela
         * @type {Array}
         */
        this.options = [];
        /**
         * Valores do select de colunas
         * @type {Array}
         */
        this.values = [];
        /**
         * Último valor válido para o select.
         * @type {Array}
         */
        this.lastValue = [];
        /**
         * Evento para atualizar a visibilidade das colunas da tabela
         * @type {EventEmitter}
         */
        this.updateVisibleColumns = new EventEmitter();
    }
    ShowColumn.prototype.ngOnInit = function () {
        var _this = this;
        this.columns.forEach(function (column) {
            var col = { field: column.field, filterType: column.filterType, header: column.header };
            _this.options.push(col);
            _this.values.push(col);
            _this.lastValue.push(col);
        });
    };
    ShowColumn.prototype.mostrarColunas = function (event) {
        var _this = this;
        if (this.values.length) {
            this.lastValue = event.value;
            this.updateVisibleColumns.emit(this.values);
        }
        else {
            this.lastValue.map(function (item) { return _this.values.push(item); });
            this.pageNotificationService.addErrorMessage('Não é possível exibir menos de uma coluna');
        }
    };
    ShowColumn.ctorParameters = function () { return [
        { type: PageNotificationService }
    ]; };
    __decorate([
        Input()
    ], ShowColumn.prototype, "columns", void 0);
    __decorate([
        Output()
    ], ShowColumn.prototype, "updateVisibleColumns", void 0);
ShowColumn.ɵfac = function ShowColumn_Factory(t) { return new (t || ShowColumn)(ɵngcc0.ɵɵdirectiveInject(PageNotificationService)); };
ShowColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ShowColumn, selectors: [["basis-show-column"]], inputs: { columns: "columns" }, outputs: { updateVisibleColumns: "updateVisibleColumns" }, decls: 6, vars: 9, consts: [[1, "ui-g-12", "ui-g-nopad"], [1, "ui-g-3", "ui-md-offset-6"], [1, "text-right"], [1, "ui-g-3"], ["defaultLabel", "Selecione as colunas a serem exibidas", 1, "column", 3, "optionLabel", "displaySelectedLabel", "ngModelOptions", "options", "ngModel", "onChange", "ngModelChange"]], template: function ShowColumn_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtext(3, "Visibilidade das Colunas:");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 3);
        ɵngcc0.ɵɵelementStart(5, "p-multiSelect", 4);
        ɵngcc0.ɵɵlistener("onChange", function ShowColumn_Template_p_multiSelect_onChange_5_listener($event) { return ctx.mostrarColunas($event); })("ngModelChange", function ShowColumn_Template_p_multiSelect_ngModelChange_5_listener($event) { return ctx.values = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵstyleMap(ɵngcc0.ɵɵpureFunction0(7, _c0));
        ɵngcc0.ɵɵproperty("optionLabel", "header")("displaySelectedLabel", false)("ngModelOptions", ɵngcc0.ɵɵpureFunction0(8, _c1))("options", ctx.options)("ngModel", ctx.values);
    } }, directives: [ɵngcc1.MultiSelect, ɵngcc2.NgControlStatus, ɵngcc2.NgModel], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShowColumn, [{
        type: Component,
        args: [{
                selector: 'basis-show-column',
                template: "<div class=\"ui-g-12 ui-g-nopad\">\n    <div class=\"ui-g-3 ui-md-offset-6\">\n        <div class=\"text-right\">Visibilidade das Colunas:</div>\n    </div>\n    <div class=\"ui-g-3\">\n        <p-multiSelect\n            class=\"column\"\n            defaultLabel=\"Selecione as colunas a serem exibidas\"\n            [optionLabel]=\"'header'\"\n            [displaySelectedLabel]=\"false\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            (onChange)=\"mostrarColunas($event)\"\n            [options]=\"options\"\n            [(ngModel)]=\"values\"\n            [style]=\"{ width: '100%' }\"\n        >\n        </p-multiSelect>\n    </div>\n</div>\n"
            }]
    }], function () { return [{ type: PageNotificationService }]; }, { updateVisibleColumns: [{
            type: Output
        }], columns: [{
            type: Input
        }] }); })();
    return ShowColumn;
}());
export { ShowColumn };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hvdy1jb2x1bW4uY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZzovQG51dmVtL3ByaW1lbmctY29tcG9uZW50cy9saWIvZGF0YXRhYmxlL3Nob3ctY29sdW1uL3Nob3ctY29sdW1uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0scURBQXFELENBQUM7Ozs7Ozs7QUFNOUY7QUFFQyxJQThCRyxvQkFBb0IsdUJBQWdEO0FBQUksUUFBcEQsNEJBQXVCLEdBQXZCLHVCQUF1QixDQUF5QjtBQUFDLFFBeEJyRTtBQUNKO0FBQ0k7QUFFSixXQURPO0FBQ1AsUUFBSSxZQUFPLEdBQVUsRUFBRSxDQUFDO0FBQ3hCLFFBQ0k7QUFDSjtBQUNJO0FBRUosV0FETztBQUNQLFFBQUksV0FBTSxHQUFVLEVBQUUsQ0FBQztBQUN2QixRQUNJO0FBQ0o7QUFDSTtBQUVKLFdBRE87QUFDUCxRQUFZLGNBQVMsR0FBVSxFQUFFLENBQUM7QUFDbEMsUUFDSTtBQUNKO0FBQ0k7QUFFSixXQURPO0FBQ1AsUUFBYyx5QkFBb0IsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztBQUMzRSxJQUMyRSxDQUFDO0FBQzVFLElBQ0ksNkJBQVEsR0FBUjtBQUNKLFFBREksaUJBT0M7QUFDTCxRQVBRLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQUMsTUFBTTtBQUFJLFlBQzVCLElBQU0sR0FBRyxHQUFHLEVBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sQ0FBQyxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sQ0FBQyxNQUFNLEVBQUMsQ0FBQztBQUNwRyxZQUFZLEtBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ25DLFlBQVksS0FBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUE7QUFDakMsWUFBWSxLQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNyQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0FBQ1gsSUFBSSxDQUFDO0FBRUwsSUFBSSxtQ0FBYyxHQUFkLFVBQWUsS0FBSztBQUN4QixRQURJLGlCQVFDO0FBQ0wsUUFSUSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFO0FBQ2hDLFlBQVksSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDO0FBQ3pDLFlBQVksSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDeEQsU0FBRztBQUFDLGFBQUs7QUFDVCxZQUFZLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFVBQUMsSUFBSSxJQUFLLE9BQUEsS0FBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQXRCLENBQXNCLENBQUMsQ0FBQztBQUNqRSxZQUFHLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxlQUFlLENBQUMsMkNBQTJDLENBQUMsQ0FBQztBQUM3RixTQUFTO0FBQ1QsSUFBSSxDQUFDO0FBQ0o7QUFDcUQsZ0JBckJMLHVCQUF1QjtBQUFHO0FBRXBFLElBNUJNO0FBQWEsUUFBckIsS0FBSyxFQUFFO0FBQUMsK0NBQXdCO0FBRXJDLElBc0JjO0FBQWEsUUFBdEIsTUFBTSxFQUFFO0FBQUMsNERBQTZEO0lBOUI5RCxVQUFVLHdCQUp0QixTQUFTLENBQUMsY0FDUCxRQUFRLEVBQUUsbUJBQW1CLGNBQzdCOzs7O0VBQTJDLFVBQzlDLENBQUMsUUFDVyxVQUFVLENBb0R0Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFDRDtBQUFDLElBREQsaUJBQUM7QUFDQSxDQURBLEFBcERELElBb0RDO0FBQ0QsU0FyRGEsVUFBVTtBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0LCBRdWVyeUxpc3QsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQYWdlTm90aWZpY2F0aW9uU2VydmljZSB9IGZyb20gJy4vLi4vLi4vcGFnZS1ub3RpZmljYXRpb24vcGFnZS1ub3RpZmljYXRpb24uc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYmFzaXMtc2hvdy1jb2x1bW4nLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9zaG93LWNvbHVtbi5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgU2hvd0NvbHVtbiBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgICAvKipcbiAgICAgKiBhdHJpYnV0byBxdWUgcmVwcmVzZW50YSBhcyBjb2x1bmFzIGRhIHRhYmVsYVxuICAgICAqIEB0eXBlIHtRdWVyeUxpc3R9XG4gICAgICovXG4gICAgQElucHV0KCkgY29sdW1uczogUXVlcnlMaXN0PGFueT47XG5cbiAgICAvKipcbiAgICAgKiBsaXN0YSBkZSBjb2x1bmFzIGRpc3BvbsOtdmVscyBuYSB0YWJlbGFcbiAgICAgKiBAdHlwZSB7QXJyYXl9XG4gICAgICovXG4gICAgb3B0aW9uczogYW55W10gPSBbXTtcblxuICAgIC8qKlxuICAgICAqIFZhbG9yZXMgZG8gc2VsZWN0IGRlIGNvbHVuYXNcbiAgICAgKiBAdHlwZSB7QXJyYXl9XG4gICAgICovXG4gICAgdmFsdWVzOiBhbnlbXSA9IFtdO1xuXG4gICAgLyoqXG4gICAgICogw5psdGltbyB2YWxvciB2w6FsaWRvIHBhcmEgbyBzZWxlY3QuXG4gICAgICogQHR5cGUge0FycmF5fVxuICAgICAqL1xuICAgIHByaXZhdGUgbGFzdFZhbHVlOiBhbnlbXSA9IFtdO1xuXG4gICAgLyoqXG4gICAgICogRXZlbnRvIHBhcmEgYXR1YWxpemFyIGEgdmlzaWJpbGlkYWRlIGRhcyBjb2x1bmFzIGRhIHRhYmVsYVxuICAgICAqIEB0eXBlIHtFdmVudEVtaXR0ZXJ9XG4gICAgICovXG4gICAgQE91dHB1dCgpIHVwZGF0ZVZpc2libGVDb2x1bW5zOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcGFnZU5vdGlmaWNhdGlvblNlcnZpY2U6IFBhZ2VOb3RpZmljYXRpb25TZXJ2aWNlKSB7fVxuXG4gICAgbmdPbkluaXQgKCkge1xuICAgICAgICB0aGlzLmNvbHVtbnMuZm9yRWFjaCgoY29sdW1uKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjb2wgPSB7ZmllbGQ6IGNvbHVtbi5maWVsZCwgZmlsdGVyVHlwZTogY29sdW1uLmZpbHRlclR5cGUsIGhlYWRlcjogY29sdW1uLmhlYWRlcn07XG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMucHVzaChjb2wpO1xuICAgICAgICAgICAgdGhpcy52YWx1ZXMucHVzaChjb2wpXG4gICAgICAgICAgICB0aGlzLmxhc3RWYWx1ZS5wdXNoKGNvbCk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIG1vc3RyYXJDb2x1bmFzKGV2ZW50KSB7XG4gICAgICAgIGlmICh0aGlzLnZhbHVlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRoaXMubGFzdFZhbHVlID0gZXZlbnQudmFsdWU7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVZpc2libGVDb2x1bW5zLmVtaXQodGhpcy52YWx1ZXMpO1xuXHRcdH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmxhc3RWYWx1ZS5tYXAoKGl0ZW0pID0+IHRoaXMudmFsdWVzLnB1c2goaXRlbSkpO1xuXHRcdFx0dGhpcy5wYWdlTm90aWZpY2F0aW9uU2VydmljZS5hZGRFcnJvck1lc3NhZ2UoJ07Do28gw6kgcG9zc8OtdmVsIGV4aWJpciBtZW5vcyBkZSB1bWEgY29sdW5hJyk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=