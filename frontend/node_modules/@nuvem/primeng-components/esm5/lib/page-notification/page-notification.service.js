import { __decorate, __extends } from "tslib";
import { Injectable } from '@angular/core';
import { MessageService } from 'primeng';
import { NotificationProvider } from '@nuvem/angular-base';
import * as i0 from "@angular/core";
import * as i1 from "primeng/api";
/**
 * Class PageNotificationService
 * @class
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'primeng';
var PageNotificationService = /** @class */ (function (_super) {
    __extends(PageNotificationService, _super);
    /**
     * constructor method
     * @constructor
     * @param {MessageService} messageService
     */
    function PageNotificationService(messageService) {
        var _this = _super.call(this) || this;
        _this.messageService = messageService;
        /**
         * successSeverity property
         * @type {string}
         */
        _this.successSeverity = 'success';
        /**
         * infoSeverity property
         * @type {string}
         */
        _this.infoSeverity = 'info';
        /**
         * warnSeverity property
         * @type {string}
         */
        _this.warnSeverity = 'warn';
        /**
         * errorSeverity property
         * @type {string}
         */
        _this.errorSeverity = 'error';
        /**
         * createMsg property
         * @type {string}
         */
        _this.createMsg = 'Registro incluído com sucesso!';
        /**
         * updateMsg property
         * @type {string}
         */
        _this.updateMsg = 'Registro alterado com sucesso!';
        /**
         * deleteMsg property
         * @type {string}
         */
        _this.deleteMsg = 'Registro excluído com sucesso!';
        return _this;
    }
    /**
     * addCreateMsg method
     * @param {string} title
     */
    PageNotificationService.prototype.addCreateMsg = function (title) {
        this.addSuccessMessage(this.createMsg, title);
    };
    /**
     * addSuccessMessage method
     * @param {string} message
     * @param {string} title
     */
    PageNotificationService.prototype.addSuccessMessage = function (message, title) {
        this.addMsg(this.successSeverity, message, title);
    };
    /**
     * addMsg method
     * @param {string} severity
     * @param {string} msg
     * @param {string} title
     */
    PageNotificationService.prototype.addMsg = function (severity, msg, title) {
        this.messageService.add({
            severity: severity,
            summary: title,
            detail: msg
        });
    };
    /**
     * addUpdateMsg method
     * @param {string} title
     */
    PageNotificationService.prototype.addUpdateMsg = function (title) {
        this.addSuccessMessage(this.updateMsg, title);
    };
    /**
     * addDeleteMsg method
     * @param {string} title
     */
    PageNotificationService.prototype.addDeleteMsg = function (title) {
        this.addSuccessMessage(this.deleteMsg, title);
    };
    /**
     * addInfoMessage method
     * @param {string} message
     * @param {string} title
     */
    PageNotificationService.prototype.addInfoMessage = function (message, title) {
        this.addMsg(this.infoSeverity, message, title);
    };
    /**
     * addWarnMessage method
     * @param {string} message
     * @param {string} title
     */
    PageNotificationService.prototype.addWarnMessage = function (message, title) {
        this.addMsg(this.warnSeverity, message, title);
    };
    /**
     * addErrorMessage method
     * @param {string} message
     * @param {string} title
     */
    PageNotificationService.prototype.addErrorMessage = function (message, title) {
        this.addMsg(this.errorSeverity, message, title);
    };
    /**
     * addErrorProblem method
     * @param {ApplicationProblemType} problem
     */
    PageNotificationService.prototype.addErrorProblem = function (problem) {
        this.addMsg(this.errorSeverity, problem.detail, problem.title);
    };
    PageNotificationService.ctorParameters = function () { return [
        { type: MessageService }
    ]; };
    PageNotificationService.ɵprov = i0.ɵɵdefineInjectable({ factory: function PageNotificationService_Factory() { return new PageNotificationService(i0.ɵɵinject(i1.MessageService)); }, token: PageNotificationService, providedIn: "root" });
PageNotificationService.ɵfac = function PageNotificationService_Factory(t) { return new (t || PageNotificationService)(ɵngcc0.ɵɵinject(ɵngcc1.MessageService)); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PageNotificationService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc1.MessageService }]; }, null); })();
    return PageNotificationService;
}(NotificationProvider));
export { PageNotificationService };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS1ub3RpZmljYXRpb24uc2VydmljZS5qcyIsInNvdXJjZXMiOlsibmc6L0BudXZlbS9wcmltZW5nLWNvbXBvbmVudHMvbGliL3BhZ2Utbm90aWZpY2F0aW9uL3BhZ2Utbm90aWZpY2F0aW9uLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUN6QyxPQUFPLEVBQUUsb0JBQW9CLEVBQTBCLE1BQU0scUJBQXFCLENBQUM7QUFDbkY7QUFFZ0M7QUFEaEM7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBSUg7QUFBaUUsSUFBcEIsMkNBQW9CO0FBQUMsSUE0QzlEO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLElBQUksaUNBQW9CLGNBQThCO0FBQ3RELFFBREksWUFDSSxpQkFBTyxTQUNWO0FBQ0wsUUFId0Isb0JBQWMsR0FBZCxjQUFjLENBQWdCO0FBQUMsUUEvQ25EO0FBQ0o7QUFDSTtBQUVKLFdBRE87QUFDUCxRQUFxQixxQkFBZSxHQUFHLFNBQVMsQ0FBQztBQUNqRCxRQUNJO0FBQ0o7QUFDSTtBQUVKLFdBRE87QUFDUCxRQUFxQixrQkFBWSxHQUFHLE1BQU0sQ0FBQztBQUMzQyxRQUNJO0FBQ0o7QUFDSTtBQUVKLFdBRE87QUFDUCxRQUFxQixrQkFBWSxHQUFHLE1BQU0sQ0FBQztBQUMzQyxRQUNJO0FBQ0o7QUFDSTtBQUVKLFdBRE87QUFDUCxRQUFxQixtQkFBYSxHQUFHLE9BQU8sQ0FBQztBQUM3QyxRQUNJO0FBQ0o7QUFDSTtBQUVKLFdBRE87QUFDUCxRQUFxQixlQUFTLEdBQUcsZ0NBQWdDLENBQUM7QUFDbEUsUUFDSTtBQUNKO0FBQ0k7QUFFSixXQURPO0FBQ1AsUUFBcUIsZUFBUyxHQUFHLGdDQUFnQyxDQUFDO0FBQ2xFLFFBQ0k7QUFDSjtBQUNJO0FBRUosV0FETztBQUNQLFFB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cG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1lc3NhZ2VTZXJ2aWNlIH0gZnJvbSAncHJpbWVuZyc7XG5pbXBvcnQgeyBOb3RpZmljYXRpb25Qcm92aWRlciwgQXBwbGljYXRpb25Qcm9ibGVtVHlwZSB9IGZyb20gJ0BudXZlbS9hbmd1bGFyLWJhc2UnO1xuXG4vKipcbiAqIENsYXNzIFBhZ2VOb3RpZmljYXRpb25TZXJ2aWNlXG4gKiBAY2xhc3NcbiAqL1xuQEluamVjdGFibGUoe1xuICAgIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBQYWdlTm90aWZpY2F0aW9uU2VydmljZSBleHRlbmRzIE5vdGlmaWNhdGlvblByb3ZpZGVyIHtcblxuICAgIC8qKlxuICAgICAqIHN1Y2Nlc3NTZXZlcml0eSBwcm9wZXJ0eVxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgcHJpdmF0ZSByZWFkb25seSBzdWNjZXNzU2V2ZXJpdHkgPSAnc3VjY2Vzcyc7XG5cbiAgICAvKipcbiAgICAgKiBpbmZvU2V2ZXJpdHkgcHJvcGVydHlcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqL1xuICAgIHByaXZhdGUgcmVhZG9ubHkgaW5mb1NldmVyaXR5ID0gJ2luZm8nO1xuXG4gICAgLyoqXG4gICAgICogd2FyblNldmVyaXR5IHByb3BlcnR5XG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBwcml2YXRlIHJlYWRvbmx5IHdhcm5TZXZlcml0eSA9ICd3YXJuJztcblxuICAgIC8qKlxuICAgICAqIGVycm9yU2V2ZXJpdHkgcHJvcGVydHlcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqL1xuICAgIHByaXZhdGUgcmVhZG9ubHkgZXJyb3JTZXZlcml0eSA9ICdlcnJvcic7XG5cbiAgICAvKipcbiAgICAgKiBjcmVhdGVNc2cgcHJvcGVydHlcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqL1xuICAgIHByaXZhdGUgcmVhZG9ubHkgY3JlYXRlTXNnID0gJ1JlZ2lzdHJvIGluY2x1w61kbyBjb20gc3VjZXNzbyEnO1xuXG4gICAgLyoqXG4gICAgICogdXBkYXRlTXNnIHByb3BlcnR5XG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBwcml2YXRlIHJlYWRvbmx5IHVwZGF0ZU1zZyA9ICdSZWdpc3RybyBhbHRlcmFkbyBjb20gc3VjZXNzbyEnO1xuXG4gICAgLyoqXG4gICAgICogZGVsZXRlTXNnIHByb3BlcnR5XG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBwcml2YXRlIHJlYWRvbmx5IGRlbGV0ZU1zZyA9ICdSZWdpc3RybyBleGNsdcOtZG8gY29tIHN1Y2Vzc28hJztcblxuICAgIC8qKlxuICAgICAqIGNvbnN0cnVjdG9yIG1ldGhvZFxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBwYXJhbSB7TWVzc2FnZVNlcnZpY2V9IG1lc3NhZ2VTZXJ2aWNlXG4gICAgICovXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBtZXNzYWdlU2VydmljZTogTWVzc2FnZVNlcnZpY2UpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBhZGRDcmVhdGVNc2cgbWV0aG9kXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHRpdGxlXG4gICAgICovXG4gICAgYWRkQ3JlYXRlTXNnKHRpdGxlPzogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuYWRkU3VjY2Vzc01lc3NhZ2UodGhpcy5jcmVhdGVNc2csIHRpdGxlKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBhZGRTdWNjZXNzTWVzc2FnZSBtZXRob2RcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0aXRsZVxuICAgICAqL1xuICAgIGFkZFN1Y2Nlc3NNZXNzYWdlKG1lc3NhZ2U6IHN0cmluZywgdGl0bGU/OiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5hZGRNc2codGhpcy5zdWNjZXNzU2V2ZXJpdHksIG1lc3NhZ2UsIHRpdGxlKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBhZGRNc2cgbWV0aG9kXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHNldmVyaXR5XG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG1zZ1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0aXRsZVxuICAgICAqL1xuICAgIHByaXZhdGUgYWRkTXNnKHNldmVyaXR5OiBzdHJpbmcsIG1zZzogc3RyaW5nLCB0aXRsZT86IHN0cmluZykge1xuICAgICAgICB0aGlzLm1lc3NhZ2VTZXJ2aWNlLmFkZCh7XG4gICAgICAgICAgc2V2ZXJpdHk6IHNldmVyaXR5LFxuICAgICAgICAgIHN1bW1hcnk6IHRpdGxlLFxuICAgICAgICAgIGRldGFpbDogbXNnXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGFkZFVwZGF0ZU1zZyBtZXRob2RcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdGl0bGVcbiAgICAgKi9cbiAgICBhZGRVcGRhdGVNc2codGl0bGU/OiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5hZGRTdWNjZXNzTWVzc2FnZSh0aGlzLnVwZGF0ZU1zZywgdGl0bGUpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGFkZERlbGV0ZU1zZyBtZXRob2RcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdGl0bGVcbiAgICAgKi9cbiAgICBhZGREZWxldGVNc2codGl0bGU/OiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5hZGRTdWNjZXNzTWVzc2FnZSh0aGlzLmRlbGV0ZU1zZywgdGl0bGUpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGFkZEluZm9NZXNzYWdlIG1ldGhvZFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHRpdGxlXG4gICAgICovXG4gICAgYWRkSW5mb01lc3NhZ2UobWVzc2FnZTogc3RyaW5nLCB0aXRsZT86IHN0cmluZykge1xuICAgICAgICB0aGlzLmFkZE1zZyh0aGlzLmluZm9TZXZlcml0eSwgbWVzc2FnZSwgdGl0bGUpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGFkZFdhcm5NZXNzYWdlIG1ldGhvZFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHRpdGxlXG4gICAgICovXG4gICAgYWRkV2Fybk1lc3NhZ2UobWVzc2FnZTogc3RyaW5nLCB0aXRsZT86IHN0cmluZykge1xuICAgICAgICB0aGlzLmFkZE1zZyh0aGlzLndhcm5TZXZlcml0eSwgbWVzc2FnZSwgdGl0bGUpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGFkZEVycm9yTWVzc2FnZSBtZXRob2RcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0aXRsZVxuICAgICAqL1xuICAgIGFkZEVycm9yTWVzc2FnZShtZXNzYWdlOiBzdHJpbmcsIHRpdGxlPzogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuYWRkTXNnKHRoaXMuZXJyb3JTZXZlcml0eSwgbWVzc2FnZSwgdGl0bGUpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGFkZEVycm9yUHJvYmxlbSBtZXRob2RcbiAgICAgKiBAcGFyYW0ge0FwcGxpY2F0aW9uUHJvYmxlbVR5cGV9IHByb2JsZW1cbiAgICAgKi9cbiAgICBhZGRFcnJvclByb2JsZW0ocHJvYmxlbTogQXBwbGljYXRpb25Qcm9ibGVtVHlwZSk6IHZvaWQge1xuICAgICAgICB0aGlzLmFkZE1zZyh0aGlzLmVycm9yU2V2ZXJpdHksIHByb2JsZW0uZGV0YWlsLCBwcm9ibGVtLnRpdGxlKTtcbiAgICB9XG5cbn1cbiJdfQ==