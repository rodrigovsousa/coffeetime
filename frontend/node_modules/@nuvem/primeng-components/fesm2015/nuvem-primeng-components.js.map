{"version":3,"file":"nuvem-primeng-components.js","sources":["ng://@nuvem/primeng-components/lib/datatable/datatable.service.ts","ng://@nuvem/primeng-components/lib/datatable/server-dataprovider.ts","ng://@nuvem/primeng-components/lib/datatable/memory-dataprovider.ts","ng://@nuvem/primeng-components/lib/datatable/dataprovider-factory.ts","ng://@nuvem/primeng-components/lib/datatable/datatable-button.component.ts","ng://@nuvem/primeng-components/lib/datatable/datatable-click-event.ts","ng://@nuvem/primeng-components/lib/datatable/p-column.directive.ts","ng://@nuvem/primeng-components/lib/datatable/datatable.component.ts","ng://@nuvem/primeng-components/lib/extra-button/datatable-splitbutton.component.ts","ng://@nuvem/primeng-components/lib/extra-button/datatable-splitbutton.module.ts","ng://@nuvem/primeng-components/lib/datatable/filter-column/filter-column.component.ts","ng://@nuvem/primeng-components/lib/datatable/filter-column/filter-column.module.ts","ng://@nuvem/primeng-components/lib/page-notification/page-notification.service.ts","ng://@nuvem/primeng-components/lib/datatable/show-column/show-column.component.ts","ng://@nuvem/primeng-components/lib/datatable/show-column/show-column.module.ts","ng://@nuvem/primeng-components/lib/datatable/datatable.module.ts","ng://@nuvem/primeng-components/lib/block-ui/block-ui.component.ts","ng://@nuvem/primeng-components/lib/block-ui/block-ui.module.ts","ng://@nuvem/primeng-components/lib/page-notification/page-notification.component.ts","ng://@nuvem/primeng-components/lib/page-notification/page-notification.module.ts","ng://@nuvem/primeng-components/lib/form-notification/form-notification.component.ts","ng://@nuvem/primeng-components/lib/form-notification/form-notification.module.ts","ng://@nuvem/primeng-components/lib/error-stack/error-stack.component.ts","ng://@nuvem/primeng-components/lib/error-stack/error-stack.module.ts","ng://@nuvem/primeng-components/lib/crud/crud-form.component.ts","ng://@nuvem/primeng-components/lib/crud/crud-service.service.ts","ng://@nuvem/primeng-components/lib/crud/crud-list.component.ts","ng://@nuvem/primeng-components/lib/crud/crud-resolve.guard.ts","ng://@nuvem/primeng-components/lib/crud/crud-route-builder.ts","ng://@nuvem/primeng-components/lib/crud/crud-service-nuvem.service.ts","ng://@nuvem/primeng-components/lib/crud/success-message-handler.interceptor.ts","ng://@nuvem/primeng-components/lib/crud/components/field.component.ts","ng://@nuvem/primeng-components/lib/crud/components/input-text/input-text.component.ts","ng://@nuvem/primeng-components/lib/crud/components/calendar/calendar-locale.ts","ng://@nuvem/primeng-components/lib/crud/components/calendar/calendar.component.ts","ng://@nuvem/primeng-components/lib/crud/components/text-area/text-area.component.ts","ng://@nuvem/primeng-components/lib/crud/components/dropdown/dropdown.component.ts","ng://@nuvem/primeng-components/lib/crud/components/input-mask/input-mask.component.ts","ng://@nuvem/primeng-components/lib/crud/components/check/check.component.ts","ng://@nuvem/primeng-components/lib/crud/form.component.ts","ng://@nuvem/primeng-components/lib/crud/components/validation-message/validation-message.component.ts","ng://@nuvem/primeng-components/lib/crud/components/auto-complete/auto-complete.component.ts","ng://@nuvem/primeng-components/lib/crud/components/auto-complete/auto-complete-custom.component.ts","ng://@nuvem/primeng-components/lib/crud/components/auto-complete/auto-complete-item.component.ts","ng://@nuvem/primeng-components/lib/crud/components/auto-complete-multiple/auto-complete-multiple.component.ts","ng://@nuvem/primeng-components/lib/crud/components/check/check.pipe.ts","ng://@nuvem/primeng-components/lib/crud/crud.module.ts","ng://@nuvem/primeng-components/lib/breadcrumb/breadcrumb.service.ts","ng://@nuvem/primeng-components/lib/breadcrumb/breadcrumb.component.ts","ng://@nuvem/primeng-components/lib/breadcrumb/breadcrumb.module.ts","ng://@nuvem/primeng-components/lib/menu/menu.service.ts","ng://@nuvem/primeng-components/lib/menu/menu.component.ts","ng://@nuvem/primeng-components/lib/menu/submenu.component.ts","ng://@nuvem/primeng-components/lib/menu/menu.module.ts","ng://@nuvem/primeng-components/public-api.ts","ng://@nuvem/primeng-components/nuvem-primeng-components.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { LazyLoadEvent } from 'primeng';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n/**\n * Class DatatableService\n * @class\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DatatableService {\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {HttpClient} http\n     */\n    constructor(private http: HttpClient) {}\n\n    /**\n     * search method\n     * @param {LazyLoadEvent} event\n     * @param {String} url\n     * @param {number} rows\n     * @param {boolean} orderInSort\n     * @param {any} query\n     * @return Observable\n     */\n    search(event: LazyLoadEvent, url: string, rows: number, orderInSort: boolean, query?: any) {\n        let page = 0;\n        if (event !== undefined && event.first > 0) {\n            page = Math.floor(event.first / rows);\n        }\n\n        let order = event.sortOrder === 1 ? 'asc' : 'desc';\n        let params: HttpParams = new HttpParams()\n        .set('page', page.toString())\n        .set('size', rows.toString());\n\n        if (orderInSort) {\n            if (event.sortField !== undefined) {\n                params = params.set('sort', event.sortField + ',' + order);\n            }\n        } else {\n            if (event.sortField !== undefined) {\n                params = params\n                .set('sort', event.sortField)\n                .set('order', order);\n            }\n        }\n\n        if ('string' === typeof query) {\n            params = params.set('query', query);\n        }\n\n        if ('object' === typeof query) {\n            Object.keys(query).forEach(key => params = params.set(key, query[key]));\n        }\n        return this.http.get(`${url}?${params.toString()}`, { observe: 'response' });\n    }\n}\n","import { LazyLoadEvent } from 'primeng';\nimport { DatatableComponent } from './datatable.component';\nimport { DatatableService } from './datatable.service';\nimport { DataProvider } from './dataprovider';\n\n/**\n * Class ServerDataProvider\n * @class\n */\nexport class ServerDataProvider implements DataProvider {\n\n    /**\n     * currentLazyLoadEvent property\n     * @type {LazyLoadEvent}\n     */\n    currentLazyLoadEvent: LazyLoadEvent;\n\n    /**\n     * _query property\n     * @type {any}\n     */\n    private _query: any;\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {DatatableService} datatableService\n     * @param {DatatableComponent} component\n     */\n    constructor(private datatableService: DatatableService, private component: DatatableComponent) {\n        this.component.pDatatableComponent.onLazyLoad.subscribe((event: LazyLoadEvent) => this.onLazyLoad(event));\n        this.component.pDatatableComponent.lazy = true;\n    }\n\n    /**\n     * onLazyLoad method\n     * @param {LazyLoadEvent} onLazyLoad\n     * @returns void\n     */\n    onLazyLoad(event: LazyLoadEvent) {\n        this.currentLazyLoadEvent = event;\n        this.load();\n    }\n\n    /**\n     * load method\n     * @param {any} query\n     * @returns void\n     */\n    load(query?: any): void {\n        query = this.retrieveAndSaveQuery(query);\n        this.component.startedLoading.emit();\n        this.datatableService.search(\n            this.currentLazyLoadEvent,\n            this.component.url,\n            this.component.pDatatableComponent.rows,\n            this.component.orderInSort,\n            query)\n            .toPromise()\n            .then(\n            (response) => {\n                this.treatLoadResponse(response);\n                this.component.finishedLoading.emit();\n            },\n            (error) => {\n                this.component.finishedLoading.emit(error);\n            }\n        );\n    }\n\n    /**\n     * treatLoadResponse method\n     * @param {any} response\n     * @return void\n     */\n    private treatLoadResponse(response: any) {\n        const data = response.body;\n        if (this.component.paginationParameters) {\n            this.treatLoadResponseWithPaginationParameters(data);\n        } else {\n            this.treatLoadResponseWithoutPaginationParameters(response, data);\n        }\n    }\n\n    /**\n     * treatLoadResponseWithPaginationParameters method\n     * @param {any} data\n     * @returns void\n     */\n    private treatLoadResponseWithPaginationParameters(data) {\n        let contentIndex = this.component.paginationParameters.contentIndex;\n        let totalIndex = this.component.paginationParameters.totalElementsIndex;\n        this.component.value = (data[contentIndex])? data[contentIndex]: data;\n        this.component.pDatatableComponent.totalRecords = (data[totalIndex])? data[totalIndex]: this.component.value.length;\n    }\n\n    /**\n     * treatLoadResponseWithoutPaginationParameters method\n     * @param {any} response\n     * @param {any} data\n     * @returns void\n     */\n    private treatLoadResponseWithoutPaginationParameters(response: any, data) {\n        if (response.headers.has('x-total-count')) {\n            this.component.pDatatableComponent.totalRecords = parseInt(response.headers.get('x-total-count'), 10);\n            this.component.value = data;\n        } else {\n            this.component.pDatatableComponent.totalRecords = data.totalElements;\n            this.component.value = data.content;\n        }\n    }\n\n    /**\n     * retrieveAndSaveQuery method\n     * @param {any} query\n     * @returns any\n     */\n    private retrieveAndSaveQuery(query: any): any {\n        const oldQuery = this._query;\n        const currentQuery = this.doRetrieveAndSaveQuery(query);\n        this.resetToFirstPageIfQueryChanged(oldQuery, currentQuery);\n        return currentQuery;\n    }\n\n    /**\n     * doRetrieveAndSaveQuery method\n     * @param {any} query\n     * @returns any\n     */\n    private doRetrieveAndSaveQuery(query: any): any {\n        if ('object' === typeof query && query.value) {\n            this._query = query.value;\n        } else if (query) {\n            this._query = query;\n        }\n        return this._query;\n    }\n\n    /**\n     * resetToFirstPageIfQueryChanged method\n     * @param {any} oldQuery\n     * @param {any} currentQuery\n     * @returns void\n     */\n    private resetToFirstPageIfQueryChanged(oldQuery, currentQuery) {\n        if (oldQuery !== currentQuery) {\n            this.currentLazyLoadEvent.first = 0;\n            this.component.pDatatableComponent.first = 0;\n        }\n    }\n    /**\n     * reset method\n     * @returns void\n     */\n    reset() {\n        this._query = undefined;\n    }\n}\n","import { DataProvider } from './dataprovider';\nimport { DatatableComponent } from './datatable.component';\n\n/**\n * Class MemoryDataProvider\n * @class\n */\nexport class MemoryDataProvider implements DataProvider {\n\n    /**\n     * constructor method\n     * @param {DatatableComponent} component\n     * @constructor\n     */\n    constructor(private component: DatatableComponent) {}\n\n    /**\n     * load method\n     * @param {any} query\n     * @returns void\n     */\n    load(query ?: any): void {\n        this.component.pDatatableComponent.reset();\n        \n        for (let prop in query) {\n            let matchMode = 'contains';\n            if (query[prop] instanceof Array) {\n                matchMode = 'in';\n            }\n            this.component.pDatatableComponent.filter(\n                query[prop],\n                prop,\n                matchMode\n            );\n        }\n\n        this.component.pDatatableComponent.globalFilterFields = query;\n        this.component.pDatatableComponent._filter();\n    }\n\n    /**\n     * reset method\n     * @returns void\n     */\n    reset() {\n        this.component.pDatatableComponent.globalFilterFields = undefined;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { DatatableService } from './datatable.service';\nimport { DatatableComponent } from './datatable.component';\n\nimport { DataProvider } from './dataprovider';\nimport { ServerDataProvider } from './server-dataprovider';\nimport { MemoryDataProvider } from './memory-dataprovider';\n\n/**\n * Enum DataProviderType\n * @enum\n */\nexport enum DataProviderType {\n    Memory = 'memory',\n    Server = 'server'\n}\n/**\n * Class DataProviderFactory\n * @class\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DataProviderFactory {\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {DatatableService} datatableService\n     */\n    constructor(private datatableService: DatatableService) {}\n\n    /**\n     * create method\n     * @param {DataProviderType} type\n     * @param {DatatableComponent} component\n     * @public\n     * @returns DataProvider\n     */\n    public create(type: DataProviderType, component: DatatableComponent): DataProvider {\n        if (DataProviderType.Server === type) {\n            return new ServerDataProvider(this.datatableService, component);\n        }\n\n        if (DataProviderType.Memory === type) {\n            return new MemoryDataProvider(component);\n        }\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter\n} from '@angular/core';\n/**\n * Class DatatableButtonComponent\n * @class\n */\n@Component({\n    selector: 'basis-datatable-button',\n    templateUrl: './datatable-button.component.html'\n})\nexport class DatatableButtonComponent {\n\n    /**\n     * icon property\n     * @type {string}\n     */\n    @Input()\n    icon: string;\n\n    /**\n     * class property\n     * @type {string}\n     */\n    @Input()\n    class: string;\n\n    /**\n     * bTooltip property\n     * @type {string}\n     */\n    @Input()\n    bTooltip: string;\n\n    /**\n     * name property\n     * @type {string}\n     */\n    @Input()\n    name: string;\n\n    /**\n     * allowMultipleSelection property\n     * @type {boolean}\n     */\n    @Input()\n    allowMultipleSelection: boolean = true;\n\n    /**\n     * disabled property\n     * @type boolean\n     */\n    @Input()\n    disabled: boolean = false;\n\n    /**\n     * click property\n     * @type {EventEmitter<any>}\n     */\n    @Output()\n    click: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * onClick method\n     * @param {any} event\n     * @return void\n     */\n    onClick(event: any) {\n        this.click.emit(event);\n        event.stopPropagation();\n    }\n}\n","/**\n * Class DatatableClickEvent\n * @class\n */\nexport class DatatableClickEvent {\n    /**\n     * constructor method\n     * @constructor\n     * @param {string} button\n     * @param {any} selection\n     */\n    constructor(public button: string, public selection: any) {}\n}\n","import { Input, EventEmitter, QueryList, TemplateRef, AfterContentInit, Output, ContentChildren, ContentChild, Directive } from '@angular/core';\nimport { PrimeTemplate } from 'primeng';\n\n@Directive({\n    selector: 'p-column'\n})\nexport class Column implements AfterContentInit {\n\n    @Input() field: string;\n\n    @Input() colId: string;\n\n    @Input() sortField: string;\n\n    @Input() filterField: string;\n\n    @Input() header: string;\n\n    @Input() footer: string;\n\n    @Input() sortable: any;\n\n    @Input() editable: boolean;\n\n    @Input() filter: boolean;\n\n    @Input() filterMatchMode: string;\n\n    @Input() filterType: string = 'text';\n\n    @Input() excludeGlobalFilter: boolean;\n\n    @Input() rowspan: number;\n\n    @Input() colspan: number;\n\n    @Input() scope: string;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() exportable: boolean = true;\n\n    @Input() headerStyle: any;\n\n    @Input() headerStyleClass: string;\n\n    @Input() bodyStyle: any;\n\n    @Input() bodyStyleClass: string;\n\n    @Input() footerStyle: any;\n\n    @Input() footerStyleClass: string;\n\n    @Input() hidden: boolean;\n\n    @Input() expander: boolean;\n\n    @Input() selectionMode: string;\n\n    @Input() filterPlaceholder: string;\n\n    @Input() filterMaxlength: number;\n\n    @Input() frozen: boolean;\n\n    @Input() resizable: boolean = true;\n\n    @Output() sortFunction: EventEmitter<any> = new EventEmitter();\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    @ContentChild(TemplateRef) template: TemplateRef<any>;\n\n    public headerTemplate: TemplateRef<any>;\n\n    public bodyTemplate: TemplateRef<any>;\n\n    public footerTemplate: TemplateRef<any>;\n\n    public filterTemplate: TemplateRef<any>;\n\n    public editorTemplate: TemplateRef<any>;\n\n    public inputTemplate: TemplateRef<any>;\n\n    public outputTemplate: TemplateRef<any>;\n\n    ngAfterContentInit(): void {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n\n                case 'body':\n                    this.bodyTemplate = item.template;\n                    break;\n\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n\n                case 'filter':\n                    this.filterTemplate = item.template;\n                    break;\n\n                case 'editor':\n                    this.editorTemplate = item.template;\n                    break;\n\n                case 'input':\n                    this.inputTemplate = item.template;\n                    break;\n\n                case 'output':\n                    this.outputTemplate = item.template;\n                    break;\n\n                default:\n                    this.bodyTemplate = item.template;\n                    break;\n            }\n        });\n    }\n}\n","import {\n    Component,\n    ViewChild,\n    Input,\n    Output,\n    ContentChildren,\n    QueryList,\n    ChangeDetectorRef,\n    AfterViewInit,\n    AfterContentInit,\n    OnInit,\n    EventEmitter,\n    ViewEncapsulation,\n    ElementRef,\n} from '@angular/core';\nimport { Table as DataTable } from 'primeng/table';\nimport { DataProvider } from './dataprovider';\nimport { DataProviderFactory, DataProviderType } from './dataprovider-factory';\nimport { DatatableButtonComponent } from './datatable-button.component';\nimport { DatatableClickEvent } from './datatable-click-event';\nimport { DatatablePaginationParameters } from './datatable-pagination-parameters';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Authorization, User } from '@nuvem/angular-base';\nimport { Column } from './p-column.directive';\n\n/**\n * Class DatatableComponent\n * @class\n */\n@Component({\n    selector: 'basis-datatable',\n    templateUrl: './datatable.component.html',\n    styleUrls: ['./datatable.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class DatatableComponent implements AfterViewInit, AfterContentInit, OnInit {\n\n    /**\n     * selectedRow property\n     * @type {any}\n     */\n    selectedRow: any;\n\n    /**\n     * dataProvider property\n     * @type {DataProvider}\n     */\n    dataProvider: DataProvider;\n\n    /**\n     * filterParams property\n     * @type {any}\n     */\n    filterParams: any = {};\n\n    /**\n     * footerMsg property\n     * @type {string}\n     */\n    footerMsg: string = '';\n\n    /**\n     * orderInSort property\n     * @type {boolean}\n     */\n    orderInSort: boolean = false;\n\n    /**\n     * splitButton property\n     * @type {any}\n     */\n    @Input() splitButton: any;\n\n    /**\n     * value property\n     * @type {any}\n     */\n    @Input() value: any[] = [];\n\n    /**\n     * type property\n     * @type DataProviderType\n     */\n    @Input() type: DataProviderType = DataProviderType.Server;\n\n    /**\n     * rows property\n     * @type {number}\n     */\n    @Input() rows: number = 5;\n\n    /**\n     * rowsPerPageOptions property\n     * @type {number[]}\n     */\n    @Input() rowsPerPageOptions: number[];\n\n    /**\n     * url property\n     * @type {string}\n     */\n    @Input() url: string;\n\n    /**\n     * extraParams property\n     * @type {any}\n     */\n    @Input() extraParams: any;\n\n    /**\n     * paginationParameters property\n     * @type {DatatablePaginationParameters}\n     */\n    @Input() paginationParameters: DatatablePaginationParameters;\n\n    /**\n     * showPaginationFooter property\n     * @type {boolean}\n     */\n    @Input() showPaginationFooter = false;\n\n    /**\n     * disableEdit property\n     * @type {boolean}\n     */\n    @Input() disableEdit = false;\n\n    /**\n     * disableView property\n     * @type {boolean}\n     */\n    @Input() disableView = false;\n\n    /**\n     * disableDelete property\n     * @type {boolean}\n     */\n    @Input() disableDelete = false;\n\n    /**\n     * selectionMode property\n     * @type {string}\n     */\n    @Input() selectionMode = 'single';\n\n    /**\n     * enableButtonsScroll property\n     * @type {boolean}\n     */\n    @Input() enableButtonsScroll = false;\n\n    /**\n     * emptyMessage property\n     * @type {string}\n     */\n    @Input() emptyMessage = 'Nenhum registro encontrado.';\n\n    /**\n     * verticalButtons property\n     * @type {boolean}\n     */\n    @Input() verticalButtons = true;\n\n    /**\n     * enableScroll property\n     * @type {boolean}\n     */\n    @Input() enableScroll = false;\n\n    /**\n     * scrollHeight property\n     * @type {string}\n     */\n    @Input() scrollHeight: string;\n\n    /**\n     * scrollWidth property\n     * @type {string}\n     */\n    @Input() scrollWidth: string;\n\n    /**\n     * rulesToHide property\n     * @type {any}\n     */\n    @Input() rulesToHide: any;\n\n    /**\n     * rulesToShowEdit property\n     * @type {any}\n     */\n    @Input() rulesToShowEdit: any;\n\n    /**\n     * rulesToShowDelete property\n     * @type {any}\n     */\n    @Input() rulesToShowDelete: any;\n\n    /**\n     * rulesToHideView property\n     * @type {any}\n     */\n    @Input() rulesToHideView: any;\n\n    /**\n     * rulesToHideEdit property\n     * @type {any}\n     */\n    @Input() rulesToHideEdit: any;\n\n    /**\n     * rulesToHideDelete property\n     * @type {any}\n     */\n    @Input() rulesToHideDelete: any;\n\n    /**\n     * horizontalButtonsHeader property\n     * @type {string}\n     */\n    horizontalButtonsHeader: string;\n\n    /**\n     * disableLoadingBlockUI property\n     * @type {boolean}\n     */\n    @Input() disableLoadingBlockUI = false;\n\n    /**\n     * rowStyleClass property\n     * @type {any}\n     */\n    @Input() rowStyleClass: any;\n\n    /**\n     * filterOnColumn property\n     */\n    @Input() filterOnColumn = false;\n\n    /**\n     * filterSelectOptions property\n     */\n    filterSelectOptions: any[] = [];\n\n    /**\n     * updateFiltroHistorico property\n     */\n    updateFilterColumn: boolean = false;\n\n    /**\n     * customFilterOptions property\n     */\n    @Input() customFilterOptions: Object = {}\n\n    /**\n     * buttonClick property\n     * @type {EventEmitter<any>}\n     */\n    @Output() buttonClick: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * pDatatableComponent property\n     * @type {Table}\n     */\n    @ViewChild(DataTable, { static: true }) pDatatableComponent: DataTable;\n\n    /**\n     * extraButtons property\n     * @type {QueryList<DatatableButtonComponent>}\n     */\n    @ContentChildren(DatatableButtonComponent) extraButtons: QueryList<DatatableButtonComponent>;\n\n    /**\n     * columns property\n     * @type {any[]}\n     */\n    @ContentChildren(Column) columns: Column[];\n\n    /**\n     * startedLoading property\n     * @type {EventEmitter<void>}\n     */\n    @Output() startedLoading: EventEmitter<void> = new EventEmitter<void>();\n\n    /**\n     * finishedLoading property\n     * @type {EventEmitter<HttpErrorResponse>}\n     */\n    @Output() finishedLoading: EventEmitter<HttpErrorResponse> = new EventEmitter<HttpErrorResponse>();\n\n    /**\n     * onRowSelected property\n     * @type {EventEmitter<any>}\n     */\n    @Output() onRowSelected: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * showHorizontalButtonsHeader property\n     * @type {boolean}\n     */\n    showHorizontalButtonsHeader = false;\n\n    /**\n     * blockContent\n     * @type {boolean}\n     */\n    blockContent = false;\n\n    /**\n     * visibleColumns property\n     * @type {Object}\n     */\n    visibleColumns: Object = {};\n\n    /**\n     * showVisibleColumnsControl property\n     * @type {boolean}\n     */\n    @Input() showVisibleColumnsControl: boolean = false;\n\n    /**\n     * editMode property\n     * @type {string}\n     */\n    @Input() editMode: string;\n\n    /**\n     * dataKey property\n     * Identificador Ãºnico para cada registro da tabela\n     * @type {string}\n     */\n    @Input() dataKey: string = 'id';\n\n    /**\n     * onRowEditEvent property\n     * Evento disparado quando o usuÃ¡rio realiza aÃ§Ãµes de ediÃ§Ã£o em uma linha da tabela\n     * @type {EventEmitter<void>}\n     */\n    @Output() onRowEditEvent: EventEmitter<any> = new EventEmitter<any>();\n\n    clonedRowData: { [s: string]: any; } = {};\n\n    /**\n     * errorMessage property\n     * @type {string}\n     */\n    private errorMessage = 'Ocorreu um erro ao carregar os dados da tabela. Tente novamente.';\n\n    /**\n     * originalEmptyMessage property\n     * @type {string}\n     */\n    private originalEmptyMessage: string;\n\n    editingRow = false;\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {ChangeDetectorRef} changeDetectorRef\n     * @param {DataProviderFactory} dataProviderFactory\n     * @param {Authorization} authorizationService\n     */\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        private dataProviderFactory: DataProviderFactory,\n        private authorizationService: Authorization\n    ) { }\n\n    /**\n     * ngOnInit method\n     * @returns void\n     */\n    ngOnInit() {\n        this.dataProvider = this.dataProviderFactory.create(this.type, this);\n        this.pDatatableComponent.rows = this.rows;\n        this.subscribeToLoadingEvents();\n        this.initRowsPerPageOptionsIfPresent();\n        this.defineIfShouldShowHorizontalButtonsHeader();\n        this.updateOnValueChange();\n\n        this.finishedLoading.subscribe(() => {\n            this.updateOnValueChange();\n        });\n    }\n\n    /**\n     * subscribeFromValueChange method\n     * @returns void\n     */\n    private updateOnValueChange() {\n        this.filterSelectOptions = [];\n        if (this.value) {\n            this.value.map((item: any) => {\n                this.filterSelectOptions.push(item);\n            });\n        }\n    }\n\n    /**\n     * subscribeToLoadingEvents method\n     * @returns void\n     */\n    private subscribeToLoadingEvents() {\n        if (!this.disableLoadingBlockUI) {\n            this.originalEmptyMessage = this.emptyMessage;\n            this.startedLoading.subscribe(() => this.onStartedLoading());\n            this.finishedLoading.subscribe(error => this.onFinishedLoading(error));\n        }\n    }\n\n    /**\n     * onStartedLoading method\n     * @returns void\n     */\n    private onStartedLoading() {\n        this.blockContent = true;\n        this.emptyMessage = this.originalEmptyMessage;\n    }\n    /**\n     * onFinishedLoading method\n     * @param {HttpErrorResponse} error\n     * @returns void\n     */\n    private onFinishedLoading(error: HttpErrorResponse) {\n        this.blockContent = false;\n        if (error) {\n            this.emptyMessage = this.errorMessage;\n        }\n    }\n\n    /**\n     * initRowsPerPageOptionsIfPresent method\n     * @returns void\n     */\n    private initRowsPerPageOptionsIfPresent() {\n        if (this.rowsPerPageOptions) {\n            this.pDatatableComponent.rowsPerPageOptions = this.rowsPerPageOptions;\n        }\n    }\n\n    /**\n     * defineIfShouldShowHorizontalButtonsHeader method\n     * @returns void\n     */\n    private defineIfShouldShowHorizontalButtonsHeader() {\n        if (this.horizontalButtonsHeader) {\n            this.showHorizontalButtonsHeader = true;\n        }\n    }\n\n    /**\n     * ngAfterViewInit method\n     * @returns void\n     */\n    ngAfterViewInit() {\n        this.setExtraParams();\n        this.pDatatableComponent.columns = this.columns;\n        this.pDatatableComponent.ngAfterContentInit();\n        this.setAllColumnsVisible();\n        this.changeDetectorRef.detectChanges();\n    }\n\n    /**\n     * setExtraParams method\n     * @returns void\n     */\n    private setExtraParams() {\n        for (let i in this.extraParams) {\n            this.pDatatableComponent[i] = this.extraParams[i];\n        }\n    }\n    /**\n     * ngAfterContentInit method\n     * @returns void\n     */\n    ngAfterContentInit() {\n        this.extraButtons.forEach((button) => {\n            button.click.subscribe(event => {\n                this.onClick(button.name, event);\n            });\n        });\n    }\n\n    /**\n     * onClick method\n     * @param {string} button\n     * @param {any} event\n     * @return void\n     */\n    onClick(button: string, event: any) {\n        this.buttonClick.emit(new DatatableClickEvent(button, this.selectedRow));\n        event.stopPropagation();\n        this.resetSelectedRow(button);\n    }\n\n    /**\n     * onSelectChange method\n     * @param {any} event\n     * @returns void\n     */\n    onSelectChange(event: any) {\n        this.onRowSelected.emit(this.selectedRow);\n        if (Array.isArray(this.selectedRow) && this.selectedRow.length > 1) {\n            this.updateMultipleButtonsStatus(true);\n        } else {\n            this.updateMultipleButtonsStatus(false);\n        }\n    }\n\n    /**\n     * updateMultipleButtonsStatus method\n     * @param {boolean} hasMultipleSelection\n     * @return void\n     */\n    private updateMultipleButtonsStatus(hasMultipleSelection: boolean) {\n        this.extraButtons.forEach((button) => {\n            if (hasMultipleSelection && !button.allowMultipleSelection) {\n                button.disabled = true;\n            } else {\n                button.disabled = false;\n            }\n        });\n    }\n\n    /**\n     * refresh method\n     * @param query\n     * @returns void\n     */\n    refresh(query?: any) {\n        this.dataProvider.load(query);\n    }\n\n    /**\n     * resetSelectedRow method\n     * @param button\n     * @returns void\n     */\n    resetSelectedRow(button: string) {\n        if (button === 'delete') {\n            this.selectedRow = null;\n        }\n    }\n\n    /**\n     * reset method\n     * @returns void\n     */\n    reset() {\n        this.pDatatableComponent.first = 0;\n        this.dataProvider.reset();\n        this.refresh();\n    }\n\n    /**\n     * paginationFooterText method\n     * @param {string} msg\n     * @returns string\n     */\n    paginationFooterText(msg: string): string {\n        const registros = this.totalRecords() === 1 ? 'registro' : 'registros';\n        if (msg === '') {\n            return `Exibindo: ${this.currentFirstIndex()} a ${this.currentLastIndex()} de ${this.totalRecords()} ${registros}`;\n        }\n        msg = msg.replace('{totalRecords}', this.totalRecords().toString());\n        msg = msg.replace('{currentFirstIndex}', this.currentFirstIndex().toString());\n        msg = msg.replace('{currentLastIndex}', this.currentLastIndex().toString());\n        return msg;\n    }\n\n    /**\n     * currentFirstIndex method\n     * @returns number\n     */\n    currentFirstIndex(): number {\n        return this.pDatatableComponent.first + 1;\n    }\n\n    /**\n     * currentLastIndex method\n     * @returns number\n     */\n    currentLastIndex(): number {\n        const currentLastIndex: number = this.pDatatableComponent.first + this.pDatatableComponent.rows;\n        if (currentLastIndex > this.totalRecords()) {\n            return this.totalRecords();\n        }\n        return currentLastIndex;\n    }\n\n    /**\n     * totalRecords method\n     * @returns number\n     */\n    totalRecords(): number {\n        return this.pDatatableComponent.totalRecords;\n    }\n\n    /**\n     * checkRolesToButton method\n     * @param {string} button\n     * @return boolean\n     */\n    checkRolesToButton(button: string): boolean {\n        if (this[button]) {\n            if (button === 'rulesToHide' || button === 'rulesToShowEdit' || button === 'rulesToShowDelete') {\n                this.checkUseButtons(button);\n                return this.authorizationService.hasRole(this[button]);\n            }\n            return !this.authorizationService.hasRole(this[button]);\n        }\n        return true;\n    }\n\n    /**\n     * checkUseButtons method\n     * @param {string} button\n     * @returns void\n     */\n    checkUseButtons(button: string): void {\n        if (this[button] && this[button.replace('Show', 'Hide')]) {\n            throw new Error('NÃ£o Ã© possÃ­vel definir dois valores de roles para os botÃµes padrÃµes.');\n        }\n    }\n\n    /**\n     * filter method\n     * @returns void\n     */\n    filter() {\n        for (let prop in this.filterParams) {\n            if (this.filterParams[prop] === '' || (this.filterParams[prop].length === 0)) {\n                delete this.filterParams[prop];\n            }\n        }\n        if (Object.getOwnPropertyNames(this.filterParams).length === 0) {\n            this.reset();\n        } else {\n            this.refresh(this.filterParams);\n        }\n    }\n\n    /**\n     * MÃ©todo para filtrar por colunas\n     * @param column chave da coluna na tabela\n     * @param filters valor do filtro\n     */\n    filterColumn(column: string, filters: any) {\n        const values = [];\n        if (filters instanceof Array) {\n            values[column] = [];\n            for (let item in filters) {\n                let val = (filters[item] instanceof Object)? filters[item].value : filters[item];\n                values[column].push(val)\n            }\n        } else {\n            values[column] = filters;\n        }\n        this.filterParams = { ...this.filterParams, ...values }\n\n        return this.filter();\n    }\n\n    /**\n     * Inicia todas as colunas da tabela como visÃ­veis\n     */\n    setAllColumnsVisible() {\n        this.columns.forEach((col) => {\n            this.visibleColumns[col.field] = 'table-cell';\n        });\n    }\n\n    /**\n     * Verifica se uma coluna deve estar visÃ­vel\n     * @param column string\n     * @param visibleColumns Array\n     */\n    visibleColumnCheck(column: string, visibleColumns: []) {\n        return visibleColumns.some((item: any) => {\n            return (item.field) ? item.field == column : true;\n        });\n    }\n\n    /**\n     * Atualzia os valores da variÃ¡vel 'visibleColuns' para mostrar ou nÃ£o as colunas\n     * @param columns array\n     */\n    updateVisibleColumns(columns: []) {\n        for (let col in this.visibleColumns) {\n            if (this.visibleColumnCheck(col, columns)) {\n                this.visibleColumns[col] = 'table-cell';\n            } else {\n                this.visibleColumns[col] = 'none';\n            }\n        }\n    }\n\n    onRowEditInitEvent(event, rowData: any) {\n\n        const tr = event.srcElement.closest('tr');\n\n        setTimeout(() => {\n            this.editingRow = true;\n\n            const top = tr.offsetTop;\n            const height = tr.offsetHeight;\n            const editButtons = tr.querySelector('.editar-campos');\n\n            editButtons.style.top = (top + height - 75) + 'px';\n            editButtons.style.height ='75px';\n            editButtons.style.backgroundColor = '#d0d0d0';\n            editButtons.style.opacity = 1;\n\n            this.clonedRowData[rowData.id] = {...rowData};\n            this.onRowEditEvent.emit({event: \"init\", data: rowData});\n        }, null , tr);\n\n    }\n\n    onRowEditSaveEvent(event, rowData: any) {\n        this.onRowEditEvent.emit({event: \"save\", data: rowData});\n        this.resetEditingMode(event);\n    }\n\n    onRowEditCancelEvent(event, rowData: any, index: number) {\n        this.value[index] = this.clonedRowData[rowData.id];\n\n        delete this.clonedRowData[rowData[this.dataKey]];\n        this.onRowEditEvent.emit({event: \"cancel\", data: rowData});\n\n        this.resetEditingMode(event);\n    }\n\n    resetEditingMode(event) {\n        const editButtons = event.srcElement.closest('tr').querySelector('.editar-campos');\n\n        editButtons.style.opacity = 0;\n        editButtons.style.backgroundColor = '#0000006b';\n        editButtons.style.display = 'none';\n\n        this.editingRow = false;\n    }\n\n    editarLinhaOver(event) {\n        if (!this.editingRow && this.editMode == 'row') {\n            const top = event.srcElement.closest('tr').offsetTop;\n            const height = event.srcElement.closest('tr').offsetHeight;\n            const editButtons = event.srcElement.closest('tr').querySelector('.editar-campos');\n\n            editButtons.style.display = 'flex';\n            editButtons.style.top = top + 'px';\n            editButtons.style.height = height + 'px';\n            editButtons.style.backgroundColor = '#0000006b';\n            editButtons.style.opacity = 1;\n        }\n    }\n\n    editarLinhaOut(event) {\n        if (!this.editingRow) {\n            const editButtons = event.srcElement.closest('tr').querySelector('.editar-campos');\n            editButtons.style.display = 'none';\n            editButtons.style.opacity = 0;\n        }\n    }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n/**\n * Class DatatableSplitbuttonComponent\n * @class\n */\n@Component( {\n    selector: 'datatable-splitbutton',\n    templateUrl: 'datatable-splitbutton.component.html'\n} )\nexport class DatatableSplitbuttonComponent implements OnInit {\n\n    /**\n     * items property\n     * @type {any[]}\n     */\n    @Input()\n    items: any[];\n\n    /**\n     * label property\n     * @type {string}\n     */\n    @Input()\n    label: string;\n\n    /**\n     * class property\n     * @type {string}\n     */\n    @Input()\n    class: string;\n\n    /**\n     * icon property\n     * @type {string}\n     */\n    @Input()\n    icon: string;\n\n    /**\n     * method propety\n     * @type {any}\n     */\n    @Input()\n    method: any;\n\n    /**\n     * ngOnInit method\n     * @returns void\n     */\n    ngOnInit() {\n    }\n}\n","import { DatatableSplitbuttonComponent } from './datatable-splitbutton.component';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { SplitButtonModule } from 'primeng';\n/**\n * Class DatatableSplitbuttonModule\n * @class\n */\n@NgModule({\n  imports: [\n    SplitButtonModule\n  ],\n  declarations: [\n    DatatableSplitbuttonComponent\n  ],\n  providers: [],\n  exports: [\n    DatatableSplitbuttonComponent,\n    SplitButtonModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class DatatableSplitbuttonModule {\n}\n","import { Component, EventEmitter, Output, Input, OnChanges, SimpleChange, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n    selector: 'basis-filter-column',\n    templateUrl: './filter-column.component.html'\n})\nexport class FilterColumn implements OnChanges, OnInit {\n\n    @Input() listaOriginal: any[] = [];\n\n    @Input() lista: any[] = [];\n\n    @Input() field: string;\n\n    @Input() header: string;\n\n    @Input() labelDefaultImplementation: boolean = false;\n\n    @Input() labelDefaultName: string;\n\n    @Input() updateFiltro: boolean = false;\n\n    @Input() filterType: string;\n\n    @Input() tableType: string;\n\n    @Input() customFilterOptions: Object = {};\n\n    @Input() template = 'filter_text';\n\n    @Output() outputEvent = new EventEmitter();\n\n    private debouncer: Subject<any> = new Subject<any>();\n\n    filtro: any;\n\n    resultado: any[] = [];\n\n    private listaFields: any[] = [];\n\n    constructor() { }\n\n    ngOnInit() {\n        this.debouncer\n            .pipe(debounceTime((this.tableType === 'memory')? 300 : 1000))\n            .subscribe((value) => this.outputEvent.emit(value));\n\n        this.template = `filter_${this.filterType}`;\n    }\n\n    ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n        if (this.checkChanges(changes, 'listaOriginal')) {\n            this.preencherFields();\n        }\n    }\n\n    checkChanges(changes: { [propName: string]: SimpleChange }, property) {\n        return changes[property] && changes[property].previousValue != changes[property].currentValue;\n    }\n\n    /**\n     * MÃ©todo para propagar o evento de filtragem\n     * @param event filtro\n     */\n    filtrar(event) {\n        this.debouncer.next(this.filtro);\n    }\n\n    /**\n     * Preenche os itens que serÃ£o exibidos no multiselect, removendo duplicidades\n     */\n    preencherFields() {\n        this.listaFields = [];\n        this.listaOriginal.filter(pi => pi[this.field] !== null).forEach(row => {\n            let item = {label: row[this.field], value: row[this.field]};\n            if (!this.verificarSeExisteField(item)) {\n                this.listaFields.push(item);\n            }\n        });\n    }\n\n    /**\n     *\n     * @param field Verifica duplicidade de fields nas opÃ§Ãµes de seleÃ§Ã£o\n     */\n    verificarSeExisteField(field) {\n        return this.listaFields.some(item => {\n            return item.value == field.value;\n        });\n    }\n\n    /**\n     * Caso o usuaÅio nÃ£o forneÃ§a uma lista para o options, serÃ¡ criada uma lista com\n     * os valores presentes na tabela\n     */\n    getCustomFilterOptions() {\n        if (this.customFilterOptions.hasOwnProperty(this.field)) {\n            return this.customFilterOptions[this.field];\n        }\n\n        return this.listaFields;\n    }\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n    CheckboxModule,\n    MultiSelectModule,\n    InputTextModule,\n} from 'primeng';\n\nimport { FilterColumn } from './filter-column.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MultiSelectModule,\n        ButtonModule,\n        CheckboxModule,\n        DropdownModule,\n        FormsModule,\n        ReactiveFormsModule,\n        InputTextModule\n    ],\n    declarations: [\n        FilterColumn\n    ],\n    exports: [\n        FilterColumn\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class FilterColumnModule { }\n","import { Injectable } from '@angular/core';\nimport { MessageService } from 'primeng';\nimport { NotificationProvider, ApplicationProblemType } from '@nuvem/angular-base';\n\n/**\n * Class PageNotificationService\n * @class\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class PageNotificationService extends NotificationProvider {\n\n    /**\n     * successSeverity property\n     * @type {string}\n     */\n    private readonly successSeverity = 'success';\n\n    /**\n     * infoSeverity property\n     * @type {string}\n     */\n    private readonly infoSeverity = 'info';\n\n    /**\n     * warnSeverity property\n     * @type {string}\n     */\n    private readonly warnSeverity = 'warn';\n\n    /**\n     * errorSeverity property\n     * @type {string}\n     */\n    private readonly errorSeverity = 'error';\n\n    /**\n     * createMsg property\n     * @type {string}\n     */\n    private readonly createMsg = 'Registro incluÃ­do com sucesso!';\n\n    /**\n     * updateMsg property\n     * @type {string}\n     */\n    private readonly updateMsg = 'Registro alterado com sucesso!';\n\n    /**\n     * deleteMsg property\n     * @type {string}\n     */\n    private readonly deleteMsg = 'Registro excluÃ­do com sucesso!';\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {MessageService} messageService\n     */\n    constructor(private messageService: MessageService) {\n        super();\n    }\n\n    /**\n     * addCreateMsg method\n     * @param {string} title\n     */\n    addCreateMsg(title?: string) {\n        this.addSuccessMessage(this.createMsg, title);\n    }\n\n    /**\n     * addSuccessMessage method\n     * @param {string} message\n     * @param {string} title\n     */\n    addSuccessMessage(message: string, title?: string) {\n        this.addMsg(this.successSeverity, message, title);\n    }\n\n    /**\n     * addMsg method\n     * @param {string} severity\n     * @param {string} msg\n     * @param {string} title\n     */\n    private addMsg(severity: string, msg: string, title?: string) {\n        this.messageService.add({\n          severity: severity,\n          summary: title,\n          detail: msg\n        });\n    }\n\n    /**\n     * addUpdateMsg method\n     * @param {string} title\n     */\n    addUpdateMsg(title?: string) {\n        this.addSuccessMessage(this.updateMsg, title);\n    }\n\n    /**\n     * addDeleteMsg method\n     * @param {string} title\n     */\n    addDeleteMsg(title?: string) {\n        this.addSuccessMessage(this.deleteMsg, title);\n    }\n\n    /**\n     * addInfoMessage method\n     * @param {string} message\n     * @param {string} title\n     */\n    addInfoMessage(message: string, title?: string) {\n        this.addMsg(this.infoSeverity, message, title);\n    }\n\n    /**\n     * addWarnMessage method\n     * @param {string} message\n     * @param {string} title\n     */\n    addWarnMessage(message: string, title?: string) {\n        this.addMsg(this.warnSeverity, message, title);\n    }\n\n    /**\n     * addErrorMessage method\n     * @param {string} message\n     * @param {string} title\n     */\n    addErrorMessage(message: string, title?: string) {\n        this.addMsg(this.errorSeverity, message, title);\n    }\n\n    /**\n     * addErrorProblem method\n     * @param {ApplicationProblemType} problem\n     */\n    addErrorProblem(problem: ApplicationProblemType): void {\n        this.addMsg(this.errorSeverity, problem.detail, problem.title);\n    }\n\n}\n","import { Component, Input, OnInit, QueryList, Output, EventEmitter } from '@angular/core';\nimport { PageNotificationService } from './../../page-notification/page-notification.service';\n\n@Component({\n    selector: 'basis-show-column',\n    templateUrl: './show-column.component.html'\n})\nexport class ShowColumn implements OnInit {\n\n    /**\n     * atributo que representa as colunas da tabela\n     * @type {QueryList}\n     */\n    @Input() columns: QueryList<any>;\n\n    /**\n     * lista de colunas disponÃ­vels na tabela\n     * @type {Array}\n     */\n    options: any[] = [];\n\n    /**\n     * Valores do select de colunas\n     * @type {Array}\n     */\n    values: any[] = [];\n\n    /**\n     * Ãltimo valor vÃ¡lido para o select.\n     * @type {Array}\n     */\n    private lastValue: any[] = [];\n\n    /**\n     * Evento para atualizar a visibilidade das colunas da tabela\n     * @type {EventEmitter}\n     */\n    @Output() updateVisibleColumns: EventEmitter<any> = new EventEmitter();\n\n    constructor(private pageNotificationService: PageNotificationService) {}\n\n    ngOnInit () {\n        this.columns.forEach((column) => {\n            const col = {field: column.field, filterType: column.filterType, header: column.header};\n            this.options.push(col);\n            this.values.push(col)\n            this.lastValue.push(col);\n        });\n    }\n\n    mostrarColunas(event) {\n        if (this.values.length) {\n            this.lastValue = event.value;\n            this.updateVisibleColumns.emit(this.values);\n\t\t} else {\n            this.lastValue.map((item) => this.values.push(item));\n\t\t\tthis.pageNotificationService.addErrorMessage('NÃ£o Ã© possÃ­vel exibir menos de uma coluna');\n        }\n    }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n    CheckboxModule,\n    MultiSelectModule,\n    InputTextModule,\n} from 'primeng';\n\nimport { ShowColumn } from './show-column.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MultiSelectModule,\n        ButtonModule,\n        CheckboxModule,\n        DropdownModule,\n        FormsModule,\n        ReactiveFormsModule,\n        InputTextModule\n    ],\n    declarations: [\n        ShowColumn\n    ],\n    exports: [\n        ShowColumn\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class ShowColumnModule { }\n","\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    ButtonModule,\n    TooltipModule,\n    BlockUIModule,\n    ProgressSpinnerModule,\n    SplitButtonModule,\n    PaginatorModule,\n    InputTextModule\n} from 'primeng';\n\nimport { TableModule } from 'primeng/table';\n\nimport { DataProviderFactory } from './dataprovider-factory';\nimport { DatatableComponent } from './datatable.component';\nimport { DatatableButtonComponent } from './datatable-button.component';\nimport { DatatableService } from './datatable.service';\nimport { DatatableSplitbuttonModule } from '../extra-button/datatable-splitbutton.module';\nimport { FilterColumnModule } from './filter-column/filter-column.module';\nimport { ShowColumnModule } from './show-column/show-column.module';\nimport { Column } from './p-column.directive';\n\n/**\n * Class DatatableModule\n * @class\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        ButtonModule,\n        SplitButtonModule,\n        TooltipModule,\n        TableModule,\n        BlockUIModule,\n        ProgressSpinnerModule,\n        DatatableSplitbuttonModule,\n        HttpClientModule,\n        PaginatorModule,\n        FilterColumnModule,\n        ShowColumnModule,\n        InputTextModule\n    ],\n    declarations: [\n        DatatableComponent,\n        DatatableButtonComponent,\n        Column\n    ],\n    providers: [\n        { provide: DatatableService, useClass: DatatableService, deps: [HttpClient] },\n        DataProviderFactory\n    ],\n    exports: [\n        DatatableComponent,\n        DatatableButtonComponent,\n        FilterColumnModule,\n        ShowColumnModule,\n        Column\n    ]\n})\nexport class DatatableModule {\n}\n","import { BlockUiStatus, BlockUiService } from '@nuvem/angular-base';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n/**\n * Class BlockUiComponent\n * @class\n */\n@Component({\n    selector: 'basis-block-ui',\n    templateUrl: './block-ui.component.html',\n    styleUrls: [ './block-ui.component.css' ],\n})\nexport class BlockUiComponent implements OnInit , OnDestroy {\n    /**\n     * status property\n     * @type {boolean}\n     * @public\n     */\n    status = false;\n\n    /**\n     * subscription property\n     * @private\n     * @type {Subscription}\n     */\n    private subscription: Subscription;\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {BlockUiService} service\n     */\n    constructor(private service: BlockUiService) { }\n\n    /**\n     * ngOnInit method\n     * @returns void\n     */\n    ngOnInit() {\n        this.subscription = this.service.loaderStatus.subscribe((blockui: BlockUiStatus) => {\n            this.status = blockui.status;\n        });\n    }\n\n    /**\n     * ngOnDestroy methods\n     * @returns void\n     */\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    /**\n     * isBlocked method\n     * @returns boolean\n     */\n    isBlocked() {\n        return this.status;\n    }\n\n    /**\n     * show method\n     * @returns false\n     */\n    show() {\n        this.status = true;\n    }\n\n    /**\n     * hide methods\n     * @returns void\n     */\n    hide() {\n        this.status = false;\n    }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BlockUiInterceptor, BlockUiService } from '@nuvem/angular-base';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BlockUIModule, ProgressSpinnerModule } from 'primeng';\nimport { BlockUiComponent } from './block-ui.component';\n\n/**\n * Class BlockUiModule\n * @class\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        BlockUIModule,\n        ProgressSpinnerModule,\n    ],\n    declarations: [\n        BlockUiComponent\n    ],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: BlockUiInterceptor,\n            multi: true\n        },\n        BlockUiService\n    ],\n    exports: [\n        BlockUIModule,\n        BlockUiComponent,\n        ProgressSpinnerModule\n    ]\n})\nexport class BlockUiModule {\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * Class PageNotificationComponent\n * @class\n */\n@Component({\n  selector: 'basis-page-notification',\n  templateUrl: './page-notification.component.html'\n})\nexport class PageNotificationComponent {\n\n    /**\n     * duration property\n     * @type {number}\n     */\n    @Input() duration: number = 3000;\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageService } from 'primeng/api';\n\nimport { PageNotificationService } from './page-notification.service';\nimport { PageNotificationComponent } from './page-notification.component';\nimport { NotificationProvider } from '@nuvem/angular-base';\n\n/**\n * Class PageNotificationModule\n * @class\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        ToastModule\n    ],\n    declarations: [\n        PageNotificationComponent\n    ],\n    exports: [\n        PageNotificationComponent\n    ],\n    providers: [\n        MessageService,\n        PageNotificationService,\n        {\n            provide: NotificationProvider,\n            useExisting: PageNotificationService\n        }\n    ]\n})\nexport class PageNotificationModule {\n}\n","import { Component } from \"@angular/core\";\nimport { FormNotificationComponentSuperclass } from '@nuvem/angular-base';\n\n@Component({\n    selector: '[form-notification]',\n    templateUrl: 'form-notification.component.html'\n})\nexport class FormNotificationComponent extends FormNotificationComponentSuperclass {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormNotificationBaseModule, FormNotificationComponentSuperclass } from '@nuvem/angular-base';\nimport { FormNotificationComponent } from './form-notification.component';\n\n/**\n * MÃ³dulo para adicionar funcionalidade de notificaÃ§Ã£o de erros de formulÃ¡rios.\n * @module\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        FormNotificationBaseModule\n    ],\n    declarations: [\n        FormNotificationComponent\n    ],\n    exports: [\n        FormNotificationComponent\n    ]\n})\nexport class FormNotificationModule { }\n","import { Component, OnInit, OnDestroy, Input, TemplateRef } from '@angular/core';\n\nimport { ErrorStackService, NamedErrorType } from '@nuvem/angular-base';\n\nimport { Subscription } from 'rxjs';\n\n/**\n * Class ErrorStackComponent\n * @class\n */\n@Component({\n    selector: 'basis-error-stack',\n    templateUrl: './error-stack.component.html'\n})\nexport class ErrorStackComponent implements OnInit, OnDestroy {\n\n    /**\n     * title property\n     * @type {string}\n     */\n    @Input() title: string = 'Error Stack';\n\n    /**\n     * template property\n     * @type {TemplateRef}\n     */\n    @Input() template: TemplateRef<any>;\n\n    /**\n     * errors property\n     * @type {NamedErrorType}\n     */\n    errors: NamedErrorType[] = [];\n\n    /**\n     * errorSubscription property\n     * @type {Subscription}\n     */\n    private errorSubscription: Subscription;\n\n    /**\n     * constructor method\n     * @constructor\n     * @param {ErrorStackService} errorStack\n     */\n    constructor(private errorStack: ErrorStackService) { }\n\n    /**\n     * ngOnInit method\n     * @returns void\n     */\n    ngOnInit() {\n        this.errorSubscription = this.errorStack.errors.subscribe((error: NamedErrorType) => {\n            this.errors = [error, ...this.errors];\n        });\n    }\n\n    /**\n     * ngOnDestroy method\n     * @returns void\n     */\n    ngOnDestroy() {\n        this.errorSubscription.unsubscribe();\n    }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableModule } from 'primeng/table';\nimport { ButtonModule, TooltipModule } from 'primeng';\n\nimport { ErrorStackComponent } from './error-stack.component';\nimport {\n    ErrorProvider,\n    ErrorStackService,\n    ErrorStackProviderService,\n    ClipboardModule\n} from '@nuvem/angular-base';\n\n/**\n * Class ErrorStackModule\n * @class\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        TableModule,\n        ButtonModule,\n        TooltipModule,\n        ClipboardModule\n    ],\n    declarations: [\n        ErrorStackComponent\n    ],\n    providers: [\n        ErrorStackService,\n        {\n            provide: ErrorProvider,\n            useClass: ErrorStackProviderService,\n            multi: true\n        }\n    ],\n    exports: [\n        ErrorStackComponent\n    ]\n})\nexport class ErrorStackModule {\n}\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { CrudService } from \"./crud-service.service\";\nimport { ActivatedRoute } from \"@angular/router\";\n\n@Component({\n    selector: 'nCrudForm',\n    templateUrl: './crud-form.component.html',\n})\nexport class CrudFormComponent implements OnInit {\n\n    @Input() form: FormGroup;\n\n    @Input() service: CrudService<any, any>;\n\n    @Input() disableSave = false;\n\n    action: string;\n\n    listRoute: string = \"../../list\";\n\n    constructor(private route: ActivatedRoute) { }\n\n    ngOnInit(): void {\n        this.route.paramMap.subscribe((params) => {\n            this.action = params.get('action');\n\n            if (params.get('id')) {\n                this.route.data.subscribe((data) => {\n                    if (data.value) {\n                        this.form.patchValue(data.value);\n                    }\n                });\n            } else {\n                this.listRoute = \"../list\";\n            }\n            if (this.action === \"view\") {\n                this.form.disable();\n            } else if (this.form.disabled) {\n                this.form.enable();\n            }\n        });\n    }\n\n}\n","import { InjectionToken } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nexport const CRUD_SERVICE = new InjectionToken<CrudService<any, any>>(\"CRUD_SERVICE\");\n\nexport interface CrudService<I, E> {\n\n    uri: string;\n\n    save(entidade: E): Observable<E>;\n\n    edit(entidade: E): Observable<E>;\n\n    find(id: I): Observable<E>;\n\n    delete(id: I): Observable<E>;\n\n    findAll(entidade: E): Observable<E>;\n\n}\n","import {\n    Component, OnInit, Inject, Input, Output, EventEmitter, AfterContentInit,\n    ViewChild, ContentChildren, QueryList, ChangeDetectorRef\n} from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { CrudService, CRUD_SERVICE } from \"./crud-service.service\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Column } from '../datatable/p-column.directive';\nimport { DatatableComponent } from '../datatable/datatable.component'\nimport { DatatableClickEvent } from '../datatable/datatable-click-event'\n\nimport { ConfirmationService } from 'primeng/api';\nimport { Url } from 'url';\n\n@Component({\n    selector: 'nCrudList',\n    templateUrl: './crud-list.component.html'\n})\nexport class CrudListComponent implements OnInit, AfterContentInit {\n\n    @Input() form: FormGroup;\n\n    @Input() action: string = \"findAll\";\n\n    @Input() findLabel: string = \"Pesquisar\";\n\n    @Input() service: CrudService<any, any>;\n\n    @Input() url: string;\n\n    @Input() disableSave = false;\n\n    @Input() disableEdit = false;\n\n    @Input() disableView = false;\n\n    @Input() disableDelete = false;\n\n    @Input() datatableExtraParams: any;\n\n    @Output() find: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild('datatable', { static: true }) datatable: DatatableComponent;\n\n    @ContentChildren(Column) columns: QueryList<Column>;\n\n    result: any[];\n\n    constructor(\n        @Inject(CRUD_SERVICE)\n        public crudService: CrudService<any, any>,\n        private confirmationService: ConfirmationService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) {  }\n\n    ngOnInit(): void {\n        if (this.service) {\n            this.crudService = this.service;\n        }\n        if (!this.url) {\n            this.url = this.crudService.uri\n        }\n    }\n\n    datatableClick(event: DatatableClickEvent) {\n        if (event.selection) {\n            switch (event.button) {\n                case \"edit\":\n                case \"view\":\n                    this.router.navigate([`../${event.button}`, event.selection.id], { relativeTo: this.route });\n                    break;\n                case \"delete\":\n                    this.confirmationService.confirm({\n                        message: 'VocÃª tem certeza que deseja excluir o registro?',\n                        accept: () => this.crudService.delete(event.selection.id)\n                            .subscribe(() => this.datatable.filter())\n                    });\n                    break;\n            }\n        }\n    }\n\n    findAll(event: any) {\n        if (this.find.observers.length) {\n            this.find.emit(this.form.value);\n        } else {\n            this.datatable.filterParams = {};\n            Object.keys(this.form.value).forEach(element => {\n                let value = this.form.value[element];\n                if (value) {\n                    this.datatable.filterParams[element] =\n                        value instanceof Date ? JSON.stringify(value).replace(/\"/g, \"\") : value;\n                }\n            });\n            this.datatable.filter();\n        }\n    }\n\n    ngAfterContentInit() {\n        const datatableNgAfterContentInit = this.datatable.pDatatableComponent.ngAfterContentInit;\n        this.datatable.pDatatableComponent.ngAfterContentInit = () => {\n            this.datatable.pDatatableComponent.columns = this.columns.toArray();\n            datatableNgAfterContentInit.call(this.datatable.pDatatableComponent);\n        };\n    }\n\n    ngAfterViewInit() {\n        for (let i in this.datatableExtraParams) {\n            this.datatable[i] = this.datatableExtraParams[i];\n        }\n    }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { CrudService, CRUD_SERVICE } from \"./crud-service.service\";\n\n@Injectable()\nexport class CrudResolveGuard implements Resolve<any> {\n\n  constructor(@Inject(CRUD_SERVICE) private crudService: CrudService<any, any>) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    return this.crudService.find(route.paramMap.get('id'));\n  }\n\n}\n","import { Route } from '@angular/router';\n\nimport { CrudResolveGuard } from './crud-resolve.guard';\n\nexport function crudRouteBuilder(route: string, parent: any, list: any, form: any): Route {\n    return   {\n        path: route,\n        component: parent,\n        data: { breadcrumb: route },\n        children: [\n            {\n                path: 'list',\n                component: list,\n                data: { breadcrumb: 'list' },\n            },\n            {\n                path: ':action',\n                component: form,\n                data: { breadcrumb: ':action' },\n            },\n            {\n                path: ':action/:id',\n                component: form,\n                resolve: {\n                    value: CrudResolveGuard\n                },\n                data: { breadcrumb: ':action' },\n            }\n        ]\n    }\n\n\n}\n","import { CrudService } from \"./crud-service.service\";\nimport { Observable } from \"rxjs\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\n\nexport class CrudServiceNuvem<I, E> implements CrudService<I, E> {\n\n    constructor(public uri: string, protected http: HttpClient) {\n    }\n\n    save(entity: E): Observable<E> {\n        return this.http.post<E>(this.uri, entity);\n    }\n\n    edit(entity: E): Observable<E> {\n        return this.http.put<E>(this.uri, entity);\n    }\n\n    find(id: I): Observable<E> {\n        return this.http.get<E>(`${this.uri}/${id}`);\n    }\n\n    delete(id: I): Observable<E> {\n        return this.http.delete<E>(`${this.uri}/${id}`);\n    }\n\n    findAll(entity: E): Observable<E> {\n        let params = new HttpParams();\n\n        for (let field in entity) {\n            params = params.append(field, <any> entity[field]);\n        }\n\n        return this.http.get<E>(`${this.uri}`, { params: params });\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HTTP_INTERCEPTORS, HttpResponse\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { PageNotificationService } from '../page-notification/page-notification.service';\n\nenum STATUS { OK=200, CREATED=201  }\n\n@Injectable({ providedIn: 'root' })\nexport class SuccessMessageHandlerInterceptor implements HttpInterceptor {\n\n  constructor(private notification: PageNotificationService) {\n\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n        tap((event) => {\n          if (event instanceof HttpResponse) {\n            if (event.headers.has(\"X-nuvem-alert\")) {\n              this.notification.addSuccessMessage(event.headers.get(\"X-nuvem-alert\"));\n            } else if ((event.status === STATUS.OK || event.status === STATUS.CREATED) && req.method != \"GET\") {\n              this.notification.addSuccessMessage(\"OperaÃ§Ã£o realizada com sucesso!\");\n            }\n          }\n        })\n    );\n  }\n\n}\n\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: SuccessMessageHandlerInterceptor, multi: true },\n];\n","import { Injector, Input, OnInit, ViewChild, AfterViewInit, ElementRef, Output, EventEmitter, Directive } from \"@angular/core\";\nimport { WrappedFormControlSuperclass } from \"@nuvem/angular-base\";\nimport { ControlContainer } from \"@angular/forms\";\n\n@Directive({\n    selector: \"[nField]\"\n})\nexport class FieldComponent<OuterType, InnerType = OuterType>\n    extends WrappedFormControlSuperclass<OuterType, InnerType>\n    implements OnInit, AfterViewInit {\n\n    @Input() form: string;\n\n    @Input() formControlName: string;\n\n    @Input() extraParams: any;\n\n    @Input() required: boolean;\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output() onSelect: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild(\"input\", { static: false }) input: any;\n\n    private _name: string;\n\n    private _label: string;\n\n    get name(): string {\n        return this._name ? this._name : this.formControlName;\n    }\n\n    @Input()\n    set name(value: string) {\n        this._name = value;\n    }\n\n    get label(): string {\n        return this.required ? `${this._label}*` : this._label;\n    }\n\n    @Input()\n    set label(value: string) {\n        this._label = value;\n    }\n\n    constructor(\n        private controlContainer: ControlContainer,\n        private injector: Injector) {\n        super(injector);\n    }\n\n    ngOnInit() {\n        this.setValidators();\n        this.setRequired();\n    }\n\n    setRequired() {\n        if (this.required) {\n            if (this.input instanceof ElementRef) {\n                this.input.nativeElement.required = true;\n            } else {\n                this.input.required = true;\n            }\n        }\n    }\n\n    setElementRefAttr(attr: string, value: any) {\n        if (value && this.input instanceof ElementRef) {\n            this.input.nativeElement[attr] = value;\n        }\n    }\n\n    setFormControlValidators() {\n        if (this.controlContainer && this.formControlName) {\n            let validator = this.controlContainer.control.get(this.formControlName).validator;\n            if (validator) {\n                this.formControl.setValidators(validator);\n            }\n        }\n    }\n\n\n    setValidators() {\n        if (this.controlContainer && this.formControlName) {\n            let validator = this.controlContainer.control.get(this.formControlName).validator;\n            if (validator) {\n                this.formControl.setValidators(validator);\n            }\n        }\n    }\n\n    ngAfterViewInit() {\n        for (let i in this.extraParams) {\n            this.input[i] = this.extraParams[i];\n        }\n    }\n\n    onBlurEvent(event) {\n        this.onBlur.emit(event);\n    }\n\n    onSelectEvent(event) {\n        this.onSelect.emit(event);\n    }\n\n    onFocusEvent(event) {\n        this.onFocus.emit(event);\n    }\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\n\n@Component({\n    selector: \"[nInputText]\",\n    templateUrl: \"./input-text.component.html\",\n    providers: [ provideValueAccessor(InputTextComponent) ],\n})\nexport class InputTextComponent extends FieldComponent<string> implements OnInit {\n\n    @Input() minLength: number;\n\n    @Input() maxLength: number;\n\n    @Input() min: number;\n\n    @Input() max: number;\n\n    @Input() pattern: string | RegExp;\n\n    @Input() type: string = \"text\";\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.setElementRefAttr(\"min\", this.min);\n        this.setElementRefAttr(\"max\", this.max);\n        this.setElementRefAttr(\"minLength\", this.minLength);\n        this.setElementRefAttr(\"maxLength\", this.maxLength);\n        this.setElementRefAttr(\"pattern\", this.pattern);\n    }\n\n}\n","import { LocaleSettings } from 'primeng';\n\nexport const CALENDAR_LOCALE: LocaleSettings = {\n    firstDayOfWeek: 0,\n    dayNames: [\"Domingo\", \"Segunda\", \"TerÃ§a\", \"Quarta\", \"Quinta\", \"Sexta\", \"SÃ¡bado\"],\n    dayNamesShort: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sab\"],\n    dayNamesMin: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\n    monthNames: [\"Janeiro\", \"Fevereiro\", \"MarÃ§o\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n    monthNamesShort: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\n    today: 'Hoje',\n    clear: 'Limpar',\n    dateFormat: 'dd/mm/yy',\n    weekHeader: 'Semana'\n};\n","import { Component, Input } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\nimport { CALENDAR_LOCALE } from './calendar-locale';\n@Component({\n    selector: \"[nCalendar]\",\n    templateUrl: \"./calendar.component.html\",\n    providers: [ provideValueAccessor(CalendarComponent) ],\n})\nexport class CalendarComponent extends FieldComponent<string, Date> {\n\n    @Input()\n    maxDate: Date = null;\n\n    @Input()\n    yearRange: string = null;\n\n    @Input()\n    monthNavigator = false;\n\n    @Input()\n    yearNavigator = false;\n\n    @Input()\n    locale = CALENDAR_LOCALE;\n\n    protected outerToInner(value: string): Date {\n        return value ? new Date(value) : null;\n    }\n\n}\n","import { Component, Input } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\"\nimport { FieldComponent } from \"../field.component\";\n\n@Component({\n    selector: \"[nTextArea]\",\n    templateUrl: \"./text-area.component.html\",\n    providers: [ provideValueAccessor(TextAreaComponent) ],\n})\nexport class TextAreaComponent extends FieldComponent<string> {\n\n    @Input() autoResize: boolean = false;\n\n    @Input() rows: string;\n\n    @Input() cols: string;\n\n    @Input() minLength: number;\n\n    @Input() maxLength: number;\n\n}\n","import { Component, Input, AfterViewInit, Output, EventEmitter, OnInit } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\nimport { CrudService } from \"../../crud-service.service\";\n\n@Component({\n    selector: \"[nDropdown]\",\n    templateUrl: \"./dropdown.component.html\",\n    providers: [provideValueAccessor(DropdownComponent)],\n})\nexport class DropdownComponent extends FieldComponent<any> implements AfterViewInit, OnInit {\n\n    @Input() optionLabel: string;\n\n    @Input() virtualScroll = false;\n\n    @Input() filter = false;\n\n    @Input() itemSize = 30;\n\n    @Input() service: CrudService<any, any>;\n\n    @Input() options: any[] = [];\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter<any>();\n\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        if (this.service) {\n            this.service.findAll(null).subscribe(data => {\n                this.options = data;\n            });\n        }\n    }\n\n    onChangeEvent(event): void {\n        this.onChange.emit(event);\n    }\n\n    protected outerToInner(value: any): any {\n        if (value && value.id) {\n            this.service.find(value.id).subscribe((data) => {\n                this.formControl.setValue(data);\n            });\n        }\n        return value;\n    }\n\n}\n","import { Component, Input } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\n\n@Component({\n    selector: \"[nInputMask]\",\n    templateUrl: \"./input-mask.component.html\",\n    providers: [ provideValueAccessor(InputMaskComponent) ],\n})\nexport class InputMaskComponent extends FieldComponent<string> {\n\n    @Input()\n    mask: string;\n\n    @Input()\n    placeholder: string;\n\n}\n","import { Component, Injector } from \"@angular/core\";\n\nimport { Subscription } from \"rxjs\";\n\nimport { provideValueAccessor, FormNotificationService, FormNotification, FieldFormNotification } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\nimport { ControlContainer } from '@angular/forms';\n\n@Component({\n    selector: \"[nCheck]\",\n    templateUrl: \"./check.component.html\",\n    providers: [ provideValueAccessor(CheckComponent) ],\n})\nexport class CheckComponent extends FieldComponent<string> {\n\n    private subscription: Subscription;\n\n    message: String;\n\n    /**\n     * MÃ©todo construtor responsÃ¡vel por carregar o serviÃ§o de validaÃ§Ã£o\n     * @param formNotificationService\n     */\n    constructor(\n        controlContainer: ControlContainer,\n        injector: Injector,\n        protected formNotificationService: FormNotificationService) {\n        super(controlContainer, injector);\n    }\n\n    /**\n     * MÃ©todo Inicial para subscriÃ§Ã£o no endpoint responsÃ¡vel por validar o formulÃ¡rio\n     */\n    ngOnInit(): void {\n        super.ngOnInit()\n        this.subscription = this.formNotificationService\n            .notifications(this.form, this.name)\n            .subscribe((notification: FormNotification) => {\n                if (notification instanceof FieldFormNotification) {\n                    this.message = notification.message;\n                } else {\n                    this.message = null;\n                }\n            });\n    }\n\n    /**\n     * MÃ©todo responsÃ¡vel por realizar a saida das subscriÃ§Ãµes do endpont de validaÃ§Ã£o\n     */\n    ngOnDestroy(): void {\n        super.ngOnDestroy()\n        this.subscription.unsubscribe();\n    }\n\n\n}\n","import { Component, OnInit, Inject, Input, Output, EventEmitter } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { CrudService, CRUD_SERVICE } from \"./crud-service.service\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\n@Component({\n    selector: 'nForm',\n    templateUrl: './form.component.html'\n})\nexport class FormComponent implements OnInit {\n\n    @Input() form: FormGroup;\n\n    @Input() route: [];\n\n    @Input() action: string = \"save\";\n\n    @Input() saveLabel: string = \"Salvar\";\n\n    @Input() service: CrudService<any, any>;\n\n    @Input() disableSave: boolean = false;\n\n    @Output() save: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output() reset: EventEmitter<any> = new EventEmitter<any>();\n    constructor(\n        @Inject(CRUD_SERVICE)\n        private crudService: CrudService<any, any>,\n        private activatedRoute: ActivatedRoute,\n        private router: Router\n    ) {}\n\n    ngOnInit(): void {\n        if (this.service) {\n            this.crudService = this.service;\n        }\n    }\n\n    submit() {\n        if (this.save.observers.length) {\n            this.save.emit(this.form.value);\n        } else {\n            this.crudService[this.action](this.form.value)\n            .subscribe(() => {\n                if (this.route) {\n                    this.router.navigate(this.route, { relativeTo: this.activatedRoute });\n                } else if (this.reset.observers.length) {\n                    this.reset.emit(this.form);\n                } else {\n                    this.form.reset();\n                }\n            });\n        }\n    }\n\n}\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n    selector: 'nValidationMessage',\n    templateUrl: './validation-message.component.html'\n})\nexport class ValidationMessageComponent {\n\n    @Input() control: any;\n\n}\n","import { Component, Input, TemplateRef } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\nimport { CrudService } from \"../../crud-service.service\";\n\n@Component({\n    selector: \"[nAutoComplete]\",\n    templateUrl: \"./auto-complete.component.html\",\n    providers: [provideValueAccessor(AutoCompleteComponent)],\n})\nexport class AutoCompleteComponent extends FieldComponent<any> {\n\n    @Input() field: string;\n\n    @Input() virtualScroll: boolean = false;\n\n    @Input() itemSize: number = 30;\n\n    @Input() service: CrudService<any, any>;\n\n    results: any[];\n\n    selectItem(option) {\n        this.formControl.setValue(option);\n    }\n\n    findAll(event: any) {\n        let query = {};\n        query[this.field] = event.query;\n        this.service.findAll(query).subscribe(data => {\n            this.results = data;\n        });\n    }\n\n    protected outerToInner(value: any): any {\n        if (value && value.id && !value[this.field]) {\n            this.service.find(value.id).subscribe((data) => {\n                this.formControl.setValue(data);\n            });\n        }\n        return value;\n    }\n\n}\n","import { Component, ElementRef, Renderer2, ChangeDetectorRef, IterableDiffers, Input, forwardRef } from '@angular/core';\nimport { AutoComplete as AutoCompletePrimeng } from 'primeng/autocomplete';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AutoCompleteCustomComponent),\n    multi: true\n  };\n\n@Component({\n    selector: 'p-autoCompleteCustom',\n    templateUrl: './auto-complete-custom.component.html',\n    providers: [AUTOCOMPLETE_VALUE_ACCESSOR]\n})\nexport class AutoCompleteCustomComponent extends AutoCompletePrimeng {\n\n    @Input() virtualScroll: boolean;\n\n    @Input() itemSize: number;\n\n    constructor(public el: ElementRef, public renderer: Renderer2, public cd: ChangeDetectorRef, public differs: IterableDiffers) {\n        super(el, renderer, cd, differs)\n    }\n\n}\n","import { Component, Input, Output, TemplateRef, EventEmitter } from \"@angular/core\";\n\n@Component({\n    selector: 'p-autoCompleteItem',\n    template: `\n        <li role=\"option\" [ngClass]=\"{'ui-autocomplete-list-item ui-corner-all':true,'ui-state-highlight':(highlightOption==option)}\"\n            (mouseenter)=\"highlightOptionChange.emit(option)\" (mouseleave)=\"highlightOptionChange.emit(null)\"\n            [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem($event)\"\n            [ngStyle]=\"{'height': itemSize + 'px', 'display': 'table', 'width': '100%'}\">\n            <span *ngIf=\"!template\">{{resolvedFieldData}}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: {$implicit: option, index: index}\"></ng-container>\n        </li>\n    `\n})\nexport class AutoCompleteItem {\n\n    @Input() option: any;\n\n    @Input() resolvedFieldData: any;\n\n    @Input() highlightOption: any;\n\n    @Output() highlightOptionChange = new EventEmitter<any>();\n\n    @Input() index: number;\n\n    @Input() itemSize: number;\n\n    @Input() template: TemplateRef<any>;\n\n    @Output() onClick = new EventEmitter();\n\n    selectItem(event: Event): void {\n        this.onClick.emit({\n            originalEvent: event,\n            option: this.option\n        });\n    }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { provideValueAccessor } from \"@nuvem/angular-base\";\nimport { FieldComponent } from \"../field.component\";\nimport { CrudService } from \"../../crud-service.service\";\nimport { forkJoin } from 'rxjs';\n\n@Component({\n    selector: \"[nAutoCompleteMultiple]\",\n    templateUrl: \"./auto-complete-multiple.component.html\",\n    providers: [provideValueAccessor(AutoCompleteMultipleComponent)],\n})\nexport class AutoCompleteMultipleComponent extends FieldComponent<any[]> {\n\n    @Input() field: string;\n\n    @Input() service: CrudService<any, any>;\n\n    @Input() virtualScroll: boolean = false;\n\n    @Input() itemSize: number = 30;\n\n    results: any[];\n\n    findAll(event: any) {\n        let query = {};\n        query[this.field] = event.query;\n        this.service.findAll(query).subscribe(data => {\n            this.results = data;\n        });\n    }\n\n    protected outerToInner(value: any[]): any[] {\n        if (value && value.length > 0 && !value[0][this.field]) {\n            let obs: any[] = [];\n            value.forEach(element => {\n                if (element && element.id) {\n                    obs.push(this.service.find(element.id));\n                }\n            });\n            forkJoin(obs).subscribe((data) => {\n                this.formControl.setValue(data);\n            });\n        }\n        return value;\n    }\n\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n    name: \"check\"\n})\nexport class CheckPipe implements PipeTransform {\n\n    transform(value: any, ...args: any[]): any {\n        return value ? \"Sim\" : \"NÃ£o\";\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { httpInterceptorProviders } from './success-message-handler.interceptor';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextComponent } from './components/input-text/input-text.component';\n\nimport { CalendarModule } from 'primeng/calendar';\nimport { CalendarComponent } from './components/calendar/calendar.component';\n\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { TextAreaComponent } from './components/text-area/text-area.component';\n\nimport { DropdownModule } from 'primeng/dropdown';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\n\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputMaskComponent } from './components/input-mask/input-mask.component';\n\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { CheckComponent } from './components/check/check.component';\n\nimport { FormNotificationModule } from '../form-notification/form-notification.module';\nimport { ButtonModule } from 'primeng/button';\nimport { FormComponent } from './form.component';\n\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmationService } from 'primeng/api';\nimport { CrudListComponent } from './crud-list.component';\n\nimport { ValidationMessageComponent } from './components/validation-message/validation-message.component';\n\nimport { CrudFormComponent } from './crud-form.component';\n\nimport { FieldComponent } from './components/field.component';\n\nimport { DatatableModule } from '../datatable/datatable.module';\n\nimport { RouterModule } from '@angular/router';\n\nimport { AutoCompleteComponent } from './components/auto-complete/auto-complete.component';\nimport { AutoCompleteCustomComponent } from './components/auto-complete/auto-complete-custom.component';\nimport { AutoCompleteItem } from './components/auto-complete/auto-complete-item.component';\nimport { AutoCompleteMultipleComponent } from './components/auto-complete-multiple/auto-complete-multiple.component';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { AutoCompleteModule } from 'primeng';\nimport { CheckPipe } from './components/check/check.pipe';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FormNotificationModule,\n        InputTextModule,\n        InputTextareaModule,\n        CalendarModule,\n        AutoCompleteModule,\n        ButtonModule,\n        DatatableModule,\n        HttpClientModule,\n        RouterModule,\n        ConfirmDialogModule,\n        DropdownModule,\n        ScrollingModule,\n        InputMaskModule,\n        RadioButtonModule,\n    ],\n    declarations: [\n        CalendarComponent,\n        InputTextComponent,\n        TextAreaComponent,\n        FormComponent,\n        AutoCompleteComponent,\n        AutoCompleteMultipleComponent,\n        CrudListComponent,\n        CrudFormComponent,\n        FieldComponent,\n        ValidationMessageComponent,\n        DropdownComponent,\n        AutoCompleteItem,\n        AutoCompleteCustomComponent,\n        CheckComponent,\n        InputMaskComponent,\n        CheckPipe,\n    ],\n    exports: [\n        CalendarComponent,\n        InputTextComponent,\n        TextAreaComponent,\n        FormComponent,\n        AutoCompleteComponent,\n        AutoCompleteMultipleComponent,\n        CrudListComponent,\n        CrudFormComponent,\n        FieldComponent,\n        ValidationMessageComponent,\n        DropdownComponent,\n        CheckComponent,\n        InputMaskComponent,\n        CheckPipe,\n    ],\n    providers: [\n        httpInterceptorProviders,\n        ConfirmationService,\n    ]\n})\nexport class CrudModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MenuItem } from 'primeng';\n\n@Injectable()\nexport class BreadcrumbService {\n\n    private readonly itemsSource = new Subject<MenuItem[]>();\n\n    itemsHandler = this.itemsSource.asObservable();\n\n    setItems(items: MenuItem[]) {\n        this.itemsSource.next(items);\n    }\n\n    reset() {\n        this.itemsSource.next([]);\n    }\n}\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { MenuItem, MessageService, Message } from 'primeng';\nimport { BreadcrumbService } from './breadcrumb.service';\nimport { AccessbilityService } from '@nuvem/angular-base';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\nimport { filter, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n    selector: 'breadcrumb',\n    templateUrl: './breadcrumb.component.html',\n    styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent implements OnInit, AfterViewInit {\n\n    subscription: Subscription;\n\n    items: MenuItem[];\n\n    highContrastEnabled = false;\n\n    constructor(\n        private readonly router: Router,\n        private readonly activatedRoute: ActivatedRoute,\n        private readonly breadcrumbService: BreadcrumbService,\n        private readonly messages: MessageService,\n        private readonly accessibilityService: AccessbilityService\n    ) {\n        this.subscription = breadcrumbService.itemsHandler.subscribe(response => {\n            this.items = response;\n        });\n    }\n\n    ngOnInit() {\n        this.router.events.pipe(filter(\n            (event: any) => event instanceof NavigationEnd),\n            distinctUntilChanged(),\n        ).subscribe((event) => {\n            this.items = this.buildBreadCrumb(this.activatedRoute.root);\n        })\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    enableHighContrast() {\n        this.highContrastEnabled = true;\n        this.accessibilityService.enableHighContrast();\n    }\n\n    disableHighContrast() {\n        this.highContrastEnabled = false;\n        this.accessibilityService.disableHighContrast();\n    }\n\n    increaseFontSize() {\n        this.accessibilityService.increaseFontSize();\n    }\n\n    decreaseFontSize() {\n        this.accessibilityService.decreaseFontSize();\n    }\n\n    ngAfterViewInit() {\n        this.messages.messageObserver.subscribe(\n            (msg: Message) => {\n                this.accessibilityService.addAccessibilityMessages({ severity: msg.severity });\n            }\n        );\n        this.accessibilityService.addAccessibilityIcons();\n    }\n\n    buildBreadCrumb(route: ActivatedRoute, url: string = '', breadcrumbs: MenuItem[] = []): MenuItem[] {\n\n        let label = route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : '';\n        let path = route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';\n\n        const lastRoutePart = path.split('/').pop();\n        const isDynamicRoute = lastRoutePart.startsWith(':');\n\n        if (isDynamicRoute && !!route.snapshot) {\n            for (let key in route.snapshot.params) {\n                path = path.replace(`:${key}`, route.snapshot.params[key]);\n            }\n            label = Object.values(route.snapshot.params).join(' ');\n        }\n\n        const nextUrl = path ? `${url}/${path}` : url;\n\n        const menuItem: MenuItem = {\n            \"label\": label,\n            \"routerLink\": nextUrl\n        }\n\n        const newBreadcrumbs = menuItem.label ? [...breadcrumbs, menuItem] : [...breadcrumbs];\n\n        if (route.firstChild) {\n            return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);\n        }\n\n        return newBreadcrumbs;\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreadcrumbComponent } from './breadcrumb.component';\nimport { BreadcrumbService } from './breadcrumb.service';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n    declarations: [BreadcrumbComponent],\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    exports: [\n        BreadcrumbComponent\n    ],\n    providers: [\n        BreadcrumbService\n    ]\n})\nexport class BreadcrumbModule { }\n","import { Injectable } from '@angular/core';\nimport { MenuItem } from 'primeng';\n\nexport enum MenuOrientation {\n    STATIC,\n    OVERLAY,\n    SLIM,\n    HORIZONTAL\n}\n\n/**\n * Class MenuService\n * @class\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class MenusService {\n\n    layoutMode: MenuOrientation = MenuOrientation.STATIC;\n\n    menuHoverActive: boolean;\n\n    itens: MenuItem[] = [];\n\n    resetMenu: boolean;\n\n    isMobile: boolean;\n\n    isTablet: boolean;\n\n    isDesktop: boolean;\n\n    overlayMenuActive: boolean;\n\n    staticMenuMobileActive: boolean;\n\n    staticMenuDesktopInactive: boolean;\n\n    isOverlay() {\n        return this.layoutMode === MenuOrientation.OVERLAY;\n    }\n\n    isHorizontal() {\n        return this.layoutMode === MenuOrientation.HORIZONTAL;\n    }\n\n    isSlim() {\n        return this.layoutMode === MenuOrientation.SLIM;\n    }\n\n    changeToStaticMenu() {\n        this.layoutMode = MenuOrientation.STATIC;\n    }\n\n    changeToOverlayMenu() {\n        this.layoutMode = MenuOrientation.OVERLAY;\n    }\n\n    changeToHorizontalMenu() {\n        this.layoutMode = MenuOrientation.HORIZONTAL;\n    }\n\n    changeToSlimMenu() {\n        this.layoutMode = MenuOrientation.SLIM;\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { MenusService } from './menu.service';\n\n@Component({\n    selector: 'app-menu',\n    templateUrl: './menu.component.html',\n})\nexport class MenuComponent {\n\n    constructor(public menuService: MenusService) {}\n\n}\n\n","import { Component, Input } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { MenuItem } from 'primeng';\nimport { MenusService } from './menu.service';\n\n@Component({\n    selector: '[submenu]',\n    templateUrl: './submenu.component.html',\n    animations: [\n        trigger('children', [\n            state('hiddenAnimated', style({\n                height: '0px'\n            })),\n            state('visibleAnimated', style({\n                height: '*'\n            })),\n            state('visible', style({\n                height: '*',\n                'z-index': 100\n            })),\n            state('hidden', style({\n                height: '0px',\n                'z-index': '*'\n            })),\n            transition('visibleAnimated => hiddenAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),\n            transition('hiddenAnimated => visibleAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ])\n    ]\n})\nexport class SubMenuComponent {\n\n    @Input() item: MenuItem;\n\n    @Input() root: boolean;\n\n    @Input() visible: boolean;\n\n    _reset: boolean;\n\n    _parentActive: boolean;\n\n    activeIndex: number;\n\n    constructor(public menuService: MenusService) { }\n\n    /**\n     * Alterar o menu root entre aberto e fechado\n     */\n    private rootMenuToggle() {\n        if (this.root) {\n            this.menuService.menuHoverActive = !this.menuService.menuHoverActive;\n        }\n    }\n\n    /**\n     * Activa o menu por index e desativa o item ativo\n     * @param index\n     */\n    private activeMenuByIndex(index: number) {\n        this.activeIndex = (this.activeIndex === index) ? null : index;\n        return this.activeIndex;\n    }\n\n    /**\n     * Verifica se foi informado um comando para o item de menu e executa caso necessÃ¡rio\n     * @param item menu\n     */\n    private execCommand(event: Event, item: MenuItem) {\n        if (item.command) {\n            item.command({ 'originalEvent': event, 'item': item });\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Esconte o menu caso este nÃ£o possua itens\n     * @param item menu\n     */\n    private hideMenu(item: MenuItem) {\n        if (!item.items) {\n            if (this.menuService.isHorizontal() || this.menuService.isSlim()) {\n                this.menuService.resetMenu = true;\n            } else {\n                this.menuService.resetMenu = false;\n            }\n\n            this.menuService.overlayMenuActive = false;\n            this.menuService.staticMenuMobileActive = false;\n            this.menuService.menuHoverActive = !this.menuService.menuHoverActive;\n\n            return true;\n        }\n\n        return false;\n    }\n\n    itemClick(event: Event, item: MenuItem, index: number) {\n\n        this.rootMenuToggle();\n\n        if (item.disabled) {\n            event.preventDefault();\n            return false;\n        }\n\n        this.activeMenuByIndex(index);\n        this.execCommand(event, item);\n\n        if (item.items || (!item.url && !item.routerLink)) {\n            event.preventDefault();\n        }\n\n        this.hideMenu(item);\n\n        return true;\n    }\n\n    onMouseEnter(index: number) {\n        if (this.root && this.menuService.menuHoverActive && (this.menuService.isHorizontal() || this.menuService.isSlim())) {\n            this.activeIndex = index;\n        }\n    }\n\n    isActive(index: number): boolean {\n        return this.activeIndex === index;\n    }\n\n    @Input() get reset(): boolean {\n        return this._reset;\n    }\n\n    set reset(val: boolean) {\n        this._reset = val;\n\n        if (this._reset && (this.menuService.isHorizontal() || this.menuService.isSlim())) {\n            this.activeIndex = null;\n        }\n    }\n\n    @Input() get parentActive(): boolean {\n        return this._parentActive;\n    }\n\n    set parentActive(val: boolean) {\n        this._parentActive = val;\n\n        if (!this._parentActive) {\n            this.activeIndex = null;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MenuComponent } from './menu.component';\nimport { SubMenuComponent } from './submenu.component';\nimport { RouterModule } from '@angular/router';\nimport { MenusService } from './menu.service';\n\n@NgModule({\n    declarations: [\n        MenuComponent,\n        SubMenuComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    exports: [\n        MenuComponent,\n        SubMenuComponent\n    ],\n    providers: [\n        MenusService\n    ]\n})\nexport class MenuModule { }\n","/*\n * Public API Surface of primeng-components\n */\nexport * from './lib/datatable/datatable.module';\nexport * from './lib/datatable/dataprovider-factory';\nexport * from './lib/datatable/dataprovider';\nexport * from './lib/datatable/server-dataprovider';\nexport * from './lib/datatable/memory-dataprovider';\nexport * from './lib/datatable/datatable-button.component';\nexport * from './lib/datatable/datatable.component';\nexport * from './lib/datatable/datatable-click-event';\nexport * from './lib/datatable/datatable-pagination-parameters';\nexport * from './lib/datatable/datatable.service';\nexport * from './lib/datatable/filter-column/filter-column.module';\nexport * from './lib/datatable/filter-column/filter-column.component';\nexport * from './lib/datatable/p-column.directive';\nexport * from './lib/datatable/show-column/show-column.module';\nexport * from './lib/datatable/show-column/show-column.component';\n\nexport * from './lib/block-ui/block-ui.component';\nexport * from './lib/block-ui/block-ui.module';\n\nexport * from './lib/extra-button/datatable-splitbutton.component';\nexport * from './lib/extra-button/datatable-splitbutton.module';\n\nexport * from './lib/page-notification/page-notification.module';\nexport * from './lib/page-notification/page-notification.service';\nexport * from './lib/page-notification/page-notification.component';\n\nexport * from './lib/form-notification/form-notification.component';\nexport * from './lib/form-notification/form-notification.module';\n\nexport * from './lib/error-stack/error-stack.module';\nexport * from './lib/error-stack/error-stack.component';\n\nexport * from './lib/crud/crud-form.component';\nexport * from './lib/crud/crud-list.component';\nexport * from './lib/crud/crud-resolve.guard';\nexport * from './lib/crud/crud-route-builder';\nexport * from './lib/crud/crud-service-nuvem.service';\nexport * from './lib/crud/crud-service.service';\nexport * from './lib/crud/crud.module';\nexport * from './lib/crud/success-message-handler.interceptor';\nexport * from './lib/crud/form.component';\n\nexport * from './lib/crud/components/auto-complete/auto-complete.component';\nexport * from './lib/crud/components/auto-complete-multiple/auto-complete-multiple.component';\nexport * from './lib/crud/components/calendar/calendar.component';\nexport * from './lib/crud/components/dropdown/dropdown.component';\nexport * from './lib/crud/components/input-text/input-text.component';\nexport * from './lib/crud/components/text-area/text-area.component';\nexport * from './lib/crud/components/validation-message/validation-message.component';\nexport * from './lib/crud/components/field.component';\nexport * from './lib/crud/components/check/check.component';\nexport * from './lib/crud/components/check/check.pipe';\nexport * from './lib/crud/components/input-mask/input-mask.component';\n\nexport * from './lib/crud/components/calendar/calendar-locale';\n\nexport * from './lib/breadcrumb/breadcrumb.module';\nexport * from './lib/breadcrumb/breadcrumb.component';\nexport * from './lib/breadcrumb/breadcrumb.service';\n\nexport * from './lib/menu/menu.module';\nexport * from './lib/menu/menu.component';\nexport * from './lib/menu/menu.service';\nexport * from './lib/menu/submenu.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AUTOCOMPLETE_VALUE_ACCESSOR as Éµb,AutoCompleteCustomComponent as Éµc} from './lib/crud/components/auto-complete/auto-complete-custom.component';\nexport {AutoCompleteItem as Éµa} from './lib/crud/components/auto-complete/auto-complete-item.component';"],"names":["DataTable","ButtonModule","MessageService","AutoCompletePrimeng","InputTextModule"],"mappings":"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"}