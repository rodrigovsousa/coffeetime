import { OnInit, AfterViewInit } from '@angular/core';
import { Subscription } from 'rxjs';
import { MenuItem, MessageService } from 'primeng';
import { BreadcrumbService } from './breadcrumb.service';
import { AccessbilityService } from '@nuvem/angular-base';
import { ActivatedRoute, Router } from '@angular/router';
import * as ɵngcc0 from '@angular/core';
export declare class BreadcrumbComponent implements OnInit, AfterViewInit {
    private readonly router;
    private readonly activatedRoute;
    private readonly breadcrumbService;
    private readonly messages;
    private readonly accessibilityService;
    subscription: Subscription;
    items: MenuItem[];
    highContrastEnabled: boolean;
    constructor(router: Router, activatedRoute: ActivatedRoute, breadcrumbService: BreadcrumbService, messages: MessageService, accessibilityService: AccessbilityService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    enableHighContrast(): void;
    disableHighContrast(): void;
    increaseFontSize(): void;
    decreaseFontSize(): void;
    ngAfterViewInit(): void;
    buildBreadCrumb(route: ActivatedRoute, url?: string, breadcrumbs?: MenuItem[]): MenuItem[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BreadcrumbComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<BreadcrumbComponent, "breadcrumb", never, {}, {}, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWRjcnVtYi5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiYnJlYWRjcnVtYi5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBNZW51SXRlbSwgTWVzc2FnZVNlcnZpY2UgfSBmcm9tICdwcmltZW5nJztcbmltcG9ydCB7IEJyZWFkY3J1bWJTZXJ2aWNlIH0gZnJvbSAnLi9icmVhZGNydW1iLnNlcnZpY2UnO1xuaW1wb3J0IHsgQWNjZXNzYmlsaXR5U2VydmljZSB9IGZyb20gJ0BudXZlbS9hbmd1bGFyLWJhc2UnO1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGUsIFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBCcmVhZGNydW1iQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBBZnRlclZpZXdJbml0IHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IHJvdXRlcjtcbiAgICBwcml2YXRlIHJlYWRvbmx5IGFjdGl2YXRlZFJvdXRlO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgYnJlYWRjcnVtYlNlcnZpY2U7XG4gICAgcHJpdmF0ZSByZWFkb25seSBtZXNzYWdlcztcbiAgICBwcml2YXRlIHJlYWRvbmx5IGFjY2Vzc2liaWxpdHlTZXJ2aWNlO1xuICAgIHN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuICAgIGl0ZW1zOiBNZW51SXRlbVtdO1xuICAgIGhpZ2hDb250cmFzdEVuYWJsZWQ6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3Iocm91dGVyOiBSb3V0ZXIsIGFjdGl2YXRlZFJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSwgYnJlYWRjcnVtYlNlcnZpY2U6IEJyZWFkY3J1bWJTZXJ2aWNlLCBtZXNzYWdlczogTWVzc2FnZVNlcnZpY2UsIGFjY2Vzc2liaWxpdHlTZXJ2aWNlOiBBY2Nlc3NiaWxpdHlTZXJ2aWNlKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgZW5hYmxlSGlnaENvbnRyYXN0KCk6IHZvaWQ7XG4gICAgZGlzYWJsZUhpZ2hDb250cmFzdCgpOiB2b2lkO1xuICAgIGluY3JlYXNlRm9udFNpemUoKTogdm9pZDtcbiAgICBkZWNyZWFzZUZvbnRTaXplKCk6IHZvaWQ7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgYnVpbGRCcmVhZENydW1iKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSwgdXJsPzogc3RyaW5nLCBicmVhZGNydW1icz86IE1lbnVJdGVtW10pOiBNZW51SXRlbVtdO1xufVxuIl19