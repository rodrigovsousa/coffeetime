{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ng-block-ui/constants/block-ui-actions.constant.ts","ng://ng-block-ui/constants/block-ui-default-name.constant.ts","ng://ng-block-ui/services/block-ui-instance.service.ts","ng://ng-block-ui/components/block-ui/block-ui.component.ts","ng://ng-block-ui/components/block-ui-content/block-ui-content.component.style.ts","ng://ng-block-ui/components/block-ui-content/block-ui-content.component.template.ts","ng://ng-block-ui/components/block-ui-content/block-ui-content.component.ts","ng://ng-block-ui/services/block-ui.service.ts","ng://ng-block-ui/directives/block-ui.directive.ts","ng://ng-block-ui/block-ui.module.ts","ng://ng-block-ui/decorators/block-ui.decorator.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","BlockUIDefaultName","BlockUIInstanceService","ReplaySubject","blockUISubject","asObservable","blockUIObservable","subscribe","blockUIMiddleware","bind","getSettings","blockUISettings","updateSettings","settings","decorate","name","blockUI","isActive","blockCount","start","dispatch","BlockUIActions","START","update","UPDATE","stop","STOP","reset","RESET","unsubscribe","UNSUBSCRIBE","blockUIInstances","observe","_a","action","subject","message","next","Injectable","BlockUIComponent","ngOnInit","template","Component","args","selector","encapsulation","ViewEncapsulation","None","Input","styles","BlockUIContentComponent","resolver","changeDetectionRef","startTimeout","stopTimeout","blockUISubscription","subscribeToBlockUI","ngAfterViewInit","templateCmp","TemplateRef","templateOutlet","createEmbeddedView","templateComp","resolveComponentFactory","templateCompRef","createComponent","updateBlockTemplate","error","console","ngAfterViewChecked","detectChanges","blockUI$","event","_this","onDispatchedEvent","onStart","onStop","onUpdate","onReset","onUnsubscribe","delay","delayStart","state","showBlock","setTimeout","updateInstanceBlockCount","delayStop","active","hideBlock","clearState","updateMessage","defaultMessage","clearTimeout","msg","ComponentRef","instance","ngOnDestroy","ComponentFactoryResolver","ChangeDetectorRef","ViewChild","read","ViewContainerRef","BlockUIService","blockUIInstance","target","targets","toArray","instances","keys","some","key","indexOf","type","forEach","BlockUIDirective","blockUIService","viewRef","templateRef","renderer","componentFactoryResolver","defineProperty","blockTarget","Number","parentElement","element","nativeElement","nextSibling","isComponentInTemplate","addClass","blockUIComponentRef","blockUIContent","findContentNode","appendChild","className","children","Array","from","reverse","el","localName","find","e","resolvedBlockUIComponent","Directive","Renderer2","BlockUIServiceInstance","BlockUIModuleSettings","InjectionToken","provideInstance","BlockUIModule","forRoot","ngModule","providers","provide","useValue","useFactory","deps","NgModule","imports","CommonModule","entryComponents","declarations","exports","value","propertyKey","descriptor"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class BlockUIActions {\n    static START = 'start';\n    static STOP = 'stop';\n    static UPDATE = 'update';\n    static RESET = 'reset';\n    static UNSUBSCRIBE = 'unsubscribe';\n}","export const BlockUIDefaultName: string = `block-ui-main`;\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { BlockUIActions } from '../constants/block-ui-actions.constant';\nimport { BlockUIDefaultName } from '../constants/block-ui-default-name.constant';\nimport { NgBlockUI } from '../models/block-ui.model';\nimport { BlockUISettings } from '../models/block-ui-settings.model';\nimport { BlockUIEvent } from '../models/block-ui-event.model';\n\n\n@Injectable()\nexport class BlockUIInstanceService {\n  blockUISettings: BlockUISettings | any = {};\n  blockUIInstances: any = {};\n  private blockUISubject: ReplaySubject<any> = new ReplaySubject();\n  private blockUIObservable: Observable<any> = this.blockUISubject.asObservable();\n\n  constructor() {\n    this.blockUIObservable.subscribe(this.blockUIMiddleware.bind(this));\n  }\n\n  getSettings(): BlockUISettings | any {\n    return this.blockUISettings;\n  }\n\n  updateSettings(settings: BlockUISettings | any = {}): void {\n    this.blockUISettings = { ...this.blockUISettings, ...settings };\n  }\n\n  decorate(name: string = BlockUIDefaultName): NgBlockUI {\n    const blockUI = {\n      name,\n      isActive: false,\n      blockCount: 0,\n      start: this.dispatch(this.blockUISubject, BlockUIActions.START, name),\n      update: this.dispatch(this.blockUISubject, BlockUIActions.UPDATE, name),\n      stop: this.dispatch(this.blockUISubject, BlockUIActions.STOP, name),\n      reset: this.dispatch(this.blockUISubject, BlockUIActions.RESET, name),\n      unsubscribe: this.dispatch(this.blockUISubject, BlockUIActions.UNSUBSCRIBE, name)\n    } as NgBlockUI;\n\n    this.blockUIInstances[name] = this.blockUIInstances[name] || blockUI;\n\n    return blockUI;\n  }\n\n  observe(): Observable<any> {\n    return this.blockUIObservable;\n  }\n\n  private blockUIMiddleware({ action, name }: BlockUIEvent): void {\n    let isActive: boolean = null;\n\n    switch (action) {\n      case (BlockUIActions.START):\n        isActive = true;\n        break;\n\n      case (BlockUIActions.STOP):\n      case (BlockUIActions.RESET):\n        isActive = false;\n        break;\n    }\n\n    if (isActive !== null) {\n      this.blockUIInstances[name].isActive = isActive;\n    }\n  }\n\n  private dispatch(subject: ReplaySubject<any>, action: BlockUIActions, name: string = BlockUIDefaultName): Function {\n    return (message?: any): void => {\n      subject.next({\n        name,\n        action,\n        message\n      });\n    };\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  OnInit,\n  ComponentRef\n} from '@angular/core';\nimport { BlockUIInstanceService } from '../../services/block-ui-instance.service';\nimport { BlockUIDefaultName } from '../../constants/block-ui-default-name.constant';\n\n@Component({\n  selector: 'block-ui',\n  template: `\n    <ng-content></ng-content>\n    <block-ui-content\n      [name]=\"name\"\n      [message]=\"message\"\n      [template]=\"template\"\n      [delayStart]=\"delayStart\"\n      [delayStop]=\"delayStop\"\n    >\n    </block-ui-content>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class BlockUIComponent implements OnInit {\n  @Input() name: string;\n  @Input() message: any;\n  @Input() delayStart: number;\n  @Input() delayStop: number;\n  @Input() template: any;\n\n  constructor(\n    private blockUI: BlockUIInstanceService,\n  ) { }\n\n  ngOnInit() {\n    this.name = this.name || BlockUIDefaultName;\n    this.template = this.template || this.blockUI.blockUISettings.template;\n  }\n}\n","// Spinner style - https://github.com/lukehaas/css-loaders\n\nexport const styles = `\n.block-ui-wrapper {\n  display: none;\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.70);\n  z-index: 30000;\n  cursor: wait;\n}\n\n.block-ui-wrapper.block-ui-wrapper--element {\n  position: absolute;\n}\n\n.block-ui-wrapper.active {\n  display: block;\n}\n\n.block-ui-wrapper.block-ui-main {\n  position: fixed;\n}\n\n.block-ui-spinner,\n.block-ui-template {\n  position: absolute;\n  top: 40%;\n  margin: 0 auto;\n  left: 0;\n  right: 0;\n  transform: translateY(-50%);\n}\n\n.block-ui-spinner > .message {\n  font-size: 1.3em;\n  text-align: center;\n  color: #fff;\n}\n\n.block-ui__element {\n  position: relative;\n}\n\n.loader,\n.loader:after {\n  border-radius: 50%;\n  width: 10em;\n  height: 10em;\n}\n.loader {\n  margin: 7px auto;\n  font-size: 5px;\n  position: relative;\n  text-indent: -9999em;\n  border-top: 1.1em solid rgba(255, 255, 255, 0.2);\n  border-right: 1.1em solid rgba(255, 255, 255, 0.2);\n  border-bottom: 1.1em solid rgba(255, 255, 255, 0.2);\n  border-left: 1.1em solid #ffffff;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n  -webkit-animation: load8 1.1s infinite linear;\n  animation: load8 1.1s infinite linear;\n}\n\n@-webkit-keyframes load8 {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes load8 {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n`;\n","export const template = `\n<div class=\"block-ui-wrapper {{name}} {{className}}\" [ngClass]=\"{ 'active': active }\">\n  <div class=\"block-ui-spinner\" *ngIf=\"!templateCmp\">\n    <div class=\"loader\"></div>\n    <div *ngIf=\"message || defaultMessage\" class=\"message\">\n      {{ message || defaultMessage }}\n    </div>\n  </div>\n  <ng-template *ngIf=\"templateCmp\" #templateOutlet></ng-template>\n</div>\n`;\n","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  AfterViewChecked,\n  OnDestroy,\n  ViewEncapsulation,\n  Input,\n  ViewChild,\n  ComponentRef,\n  TemplateRef,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { BlockUIInstanceService } from '../../services/block-ui-instance.service';\nimport { BlockUIEvent } from '../../models/block-ui-event.model';\nimport { BlockUIActions } from '../../constants/block-ui-actions.constant';\nimport { BlockUIDefaultName } from '../../constants/block-ui-default-name.constant';\nimport { styles } from './block-ui-content.component.style';\nimport { template } from './block-ui-content.component.template';\nimport { BlockUISettings } from '../../models/block-ui-settings.model';\n\n@Component({\n  selector: 'block-ui-content',\n  template: template,\n  styles: [styles], // TODO: Find how to bundle styles for npm\n  encapsulation: ViewEncapsulation.None\n})\nexport class BlockUIContentComponent implements OnInit, AfterViewInit, AfterViewChecked, OnDestroy {\n  @Input() name: string = BlockUIDefaultName;\n  @Input() delayStart: number = 0;\n  @Input() delayStop: number = 0;\n  @Input('message') defaultMessage: string;\n  @Input('template') templateCmp: any;\n  @ViewChild('templateOutlet', { read: ViewContainerRef })\n  templateOutlet: ViewContainerRef;\n\n  state: any = { startTimeout: null, stopTimeout: null, blockCount: 0 };\n  className: string;\n  active: boolean = false;\n  templateCompRef: ComponentRef<{ message?: any }> | TemplateRef<{}>;\n  message: any;\n\n  private blockUISubscription: Subscription;\n  private settings: BlockUISettings;\n\n  constructor(\n    private blockUI: BlockUIInstanceService,\n    private resolver: ComponentFactoryResolver,\n    private changeDetectionRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.settings = this.blockUI.getSettings();\n    this.blockUISubscription = this.subscribeToBlockUI(this.blockUI.observe());\n  }\n\n  ngAfterViewInit() {\n    try {\n      if (!this.templateCmp) {\n        return false;\n      }\n\n      if (this.templateCmp instanceof TemplateRef) {\n        this.templateOutlet.createEmbeddedView(this.templateCmp);\n      } else {\n        const templateComp = this.resolver.resolveComponentFactory(this.templateCmp);\n        this.templateCompRef = this.templateOutlet.createComponent(templateComp);\n\n        this.updateBlockTemplate(this.message);\n      }\n    } catch (error) {\n      console.error('ng-block-ui:', error);\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.detectChanges();\n  }\n\n  private subscribeToBlockUI(blockUI$: Observable<any>): Subscription {\n    return blockUI$\n      .subscribe(event => this.onDispatchedEvent(event));\n  }\n\n  private onDispatchedEvent(event: BlockUIEvent) {\n    switch (event.action) {\n      case (BlockUIActions.START):\n        this.onStart(event);\n        break;\n\n      case (BlockUIActions.STOP):\n        this.onStop(event);\n        break;\n\n      case (BlockUIActions.UPDATE):\n        this.onUpdate(event);\n        break;\n\n      case (BlockUIActions.RESET):\n        this.onReset();\n        break;\n\n      case (BlockUIActions.UNSUBSCRIBE):\n        this.onStop(event);\n        this.onUnsubscribe(event.name);\n        break;\n    }\n  }\n\n  private onStart({ name, message }: BlockUIEvent) {\n    if (name === this.name) {\n      const delay = this.delayStart || this.settings.delayStart || 0;\n\n      if (this.state.startTimeout === null) {\n        if (delay === 0) {\n          this.showBlock(message);\n        } else {\n          this.state.startTimeout = setTimeout(() => {\n            this.showBlock(message);\n          }, delay);\n        }\n      }\n\n      this.state.blockCount++;\n      this.updateInstanceBlockCount();\n    }\n  }\n\n  private onStop({ name }: BlockUIEvent) {\n    if (name === this.name) {\n      const delay = this.delayStop || this.settings.delayStop || 0;\n\n      if (this.state.blockCount > 1) {\n        this.state.blockCount--;\n      } else {\n        if (!this.active) {\n          this.clearState();\n        } else {\n          if (this.state.stopTimeout === null) {\n            if (delay === 0) {\n              this.hideBlock();\n            } else {\n              this.state.stopTimeout = setTimeout(() => {\n                this.hideBlock();\n              }, delay);\n            }\n          }\n        }\n      }\n\n      this.updateInstanceBlockCount();\n    }\n  }\n\n  private onReset() {\n    this.hideBlock();\n  }\n\n  private onUpdate({ name, message }: BlockUIEvent) {\n    if (name === this.name) {\n      const delay = this.delayStart || this.settings.delayStart || 0;\n\n      if (delay === 0) {\n        this.updateMessage(message);\n      } else {\n        setTimeout(() => {\n          this.updateMessage(message);\n        }, delay);\n      }\n    }\n  }\n\n  updateMessage(message: string) {\n    this.message = message || this.defaultMessage || this.settings.message;\n    this.updateBlockTemplate(this.message);\n    this.detectChanges();\n  }\n\n  private showBlock(message: any) {\n    this.active = true;\n    this.message = message || this.defaultMessage || this.settings.message;\n    this.updateBlockTemplate(this.message);\n    this.detectChanges();\n  }\n\n  private hideBlock() {\n    this.clearState();\n    this.active = false;\n    this.detectChanges();\n  }\n\n  private clearState() {\n    this.state.startTimeout != null && clearTimeout(this.state.startTimeout);\n    this.state.stopTimeout != null && clearTimeout(this.state.stopTimeout);\n    this.state.blockCount = 0;\n    this.state.startTimeout = null;\n    this.state.stopTimeout = null;\n    this.updateInstanceBlockCount();\n  }\n\n  private updateBlockTemplate(msg: any): void {\n    if (this.templateCompRef && this.templateCompRef instanceof ComponentRef) {\n      this.templateCompRef.instance.message = msg;\n    }\n  }\n\n  private onUnsubscribe(name: string) {\n    if (this.blockUISubscription && name === this.name) {\n      this.blockUISubscription.unsubscribe();\n    }\n  }\n\n  private updateInstanceBlockCount() {\n    if (this.blockUI.blockUIInstances[this.name]) {\n      this.blockUI.blockUIInstances[this.name].blockCount = this.state.blockCount;\n    }\n  }\n\n  private detectChanges() {\n    if (!this.changeDetectionRef['destroyed']) {\n      this.changeDetectionRef.detectChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this.onUnsubscribe(this.name);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BlockUIActions } from '../constants/block-ui-actions.constant';\nimport { BlockUIDefaultName } from '../constants/block-ui-default-name.constant';\nimport { BlockUIInstanceService } from './block-ui-instance.service';\n\n\n@Injectable()\nexport class BlockUIService {\n\n  constructor(\n    private blockUIInstance: BlockUIInstanceService\n  ) {}\n\n  /**\n  * Starts blocking for given BlockUI instance or instances\n  */\n  start(target: string | string[], message?: any): void {\n    this.dispatch(target, BlockUIActions.START, message);\n  }\n\n  /**\n  * Stops blocking for given BlockUI instance or instances\n  */\n  stop(target: string | string[]): void {\n    this.dispatch(target, BlockUIActions.STOP);\n  }\n\n  /**\n  * Reset blocking for given BlockUI instance or instances\n  */\n  reset(target: string | string[]): void {\n    this.dispatch(target, BlockUIActions.RESET);\n  }\n\n  /**\n  * Unsubscribes for given BlockUI instance or instances\n  */\n  unsubscribe(target: string | string[]): void {\n    this.dispatch(target, BlockUIActions.UNSUBSCRIBE);\n  }\n\n  /**\n  * Checks if BlockUI is actively blocking\n  */\n  isActive(target: string | string[] = null): boolean {\n    const targets = target ? this.toArray(target) : null;\n    const instances = this.blockUIInstance.blockUIInstances;\n\n    return Object.keys(instances).some((key: string) => {\n      if (!targets) {\n        return instances[key].isActive;\n      }\n\n      return targets.indexOf(instances[key].name) >= 0 && instances[key].isActive;\n    });\n  }\n\n  private dispatch(target: string | string[] = [], type: string, message?: any) {\n    const instances = this.toArray(target);\n    instances.forEach(i => this.blockUIInstance.decorate(i)[type](message));\n  }\n\n  private toArray(target: string | string[] = []) {\n    return typeof target === 'string' ? [target] : target;\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  ComponentRef,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  TemplateRef,\n  Renderer2\n} from '@angular/core';\nimport { BlockUIContentComponent } from '../components/block-ui-content/block-ui-content.component';\nimport { BlockUIInstanceService } from '../services/block-ui-instance.service';\nimport { BlockUIDefaultName } from '../constants/block-ui-default-name.constant';\n\n@Directive({ selector: '[blockUI]' })\nexport class BlockUIDirective implements OnInit {\n  private blockUIComponentRef: ComponentRef<BlockUIContentComponent>;\n  blockTarget: string;\n  message: any;\n  template: any;\n  delayStart: any;\n  delayStop: any;\n\n  @Input()\n  set blockUI(name: any) { this.blockTarget = name; };\n  @Input()\n  set blockUIMessage(message: any) { this.message = message; };\n  @Input()\n  set blockUITemplate(template: any) { this.template = template; };\n  @Input()\n  set blockUIDelayStart(delayStart: any) {\n     this.delayStart = delayStart ? Number(delayStart) : null;\n  };\n  @Input()\n  set blockUIDelayStop(delayStop: any) {\n    this.delayStop = delayStop ? Number(delayStop) : null;\n  };\n\n  constructor(\n    private blockUIService: BlockUIInstanceService,\n    private viewRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private renderer: Renderer2,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) { }\n\n  ngOnInit() {\n    try {\n      this.viewRef.createEmbeddedView(this.templateRef);\n      const parentElement = this.viewRef.element.nativeElement.nextSibling;\n\n      if (parentElement && !this.isComponentInTemplate(parentElement)) {\n        this.renderer.addClass(parentElement, 'block-ui__element');\n\n        this.blockUIComponentRef = this.createComponent();\n\n        let blockUIContent = this.findContentNode(this.viewRef.element.nativeElement);\n\n        if (blockUIContent) {\n          const settings = this.blockUIService.getSettings();\n\n          parentElement.appendChild(blockUIContent);\n          this.blockUIComponentRef.instance.className = 'block-ui-wrapper--element';\n          this.blockUIComponentRef.instance.name = this.blockTarget || BlockUIDefaultName;\n          if (this.message) this.blockUIComponentRef.instance.defaultMessage = this.message;\n          if (this.delayStart) this.blockUIComponentRef.instance.delayStart = this.delayStart;\n          if (this.delayStop) this.blockUIComponentRef.instance.delayStop = this.delayStop;\n          if (this.template || settings.template)\n            this.blockUIComponentRef.instance.templateCmp = this.template || settings.template;\n        }\n      }\n    } catch (error) {\n      console.error('ng-block-ui:', error);\n    }\n  }\n\n  private isComponentInTemplate(element: any): boolean {\n    let { children } = element || [];\n    children = Array.from(children).reverse();\n    return children.some((el: any) => el.localName === 'block-ui');\n  }\n\n  // Needed for IE (#17)\n  private findContentNode(element: any) {\n    const { nextSibling } = element;\n    return [nextSibling, nextSibling.nextSibling].find((e) => e.localName === 'block-ui-content');\n  }\n\n  private createComponent() {\n    const resolvedBlockUIComponent = this.componentFactoryResolver.resolveComponentFactory(BlockUIContentComponent);\n    return this.viewRef.createComponent(resolvedBlockUIComponent);\n  }\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BlockUIComponent } from './components/block-ui/block-ui.component';\nimport { BlockUIContentComponent } from './components/block-ui-content/block-ui-content.component';\nimport { BlockUIInstanceService } from './services/block-ui-instance.service';\nimport { BlockUIService } from './services/block-ui.service';\nimport { BlockUIDirective } from './directives/block-ui.directive';\nimport { BlockUISettings } from './models/block-ui-settings.model';\n\nexport const BlockUIServiceInstance = new BlockUIInstanceService();\n\n// Needed for AOT compiling\nexport const BlockUIModuleSettings = new InjectionToken<string>('BlockUIModuleSettings');\n\nexport function provideInstance(settings: BlockUISettings): any {\n  BlockUIServiceInstance.updateSettings(settings);\n  return BlockUIServiceInstance;\n}\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  entryComponents: [\n    BlockUIComponent,\n    BlockUIContentComponent\n  ],\n  declarations: [\n    BlockUIComponent,\n    BlockUIDirective,\n    BlockUIContentComponent\n  ],\n  exports: [\n    BlockUIComponent,\n    BlockUIDirective,\n    BlockUIContentComponent\n  ]\n})\nexport class BlockUIModule {\n  public static forRoot(settings: BlockUISettings = {}): ModuleWithProviders {\n    return {\n      ngModule: BlockUIModule,\n      providers: [\n        {\n          provide: BlockUIModuleSettings,\n          useValue: settings\n        },\n        {\n          provide: BlockUIInstanceService,\n          useFactory: provideInstance,\n          deps: [BlockUIModuleSettings]\n        },\n        BlockUIService\n      ]\n    };\n  }\n}\n","import { BlockUIServiceInstance } from '../block-ui.module';\n\n\nexport function BlockUI(value?: string) {\n  return function (target?: any, propertyKey?: string, descriptor?: any) {\n    target[propertyKey] = BlockUIServiceInstance.decorate(value);\n  };\n}\n"]}