/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { NgModule } from '@angular/core';
import { BlockUIModule } from 'ng-block-ui';
import { BlockUIPreventNavigation } from './block-ui-prevent-navigation.service';
import * as ɵngcc0 from '@angular/core';
var BlockUIRouterModule = /** @class */ (function () {
    function BlockUIRouterModule() {
    }
    /**
     * @return {?}
     */
    BlockUIRouterModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: BlockUIRouterModule,
            providers: [
                BlockUIPreventNavigation
            ]
        };
    };
BlockUIRouterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BlockUIRouterModule });
BlockUIRouterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BlockUIRouterModule_Factory(t) { return new (t || BlockUIRouterModule)(); }, imports: [[
            BlockUIModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BlockUIRouterModule, { imports: function () { return [BlockUIModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BlockUIRouterModule, [{
        type: NgModule,
        args: [{
                imports: [
                    BlockUIModule
                ]
            }]
    }], function () { return []; }, null); })();
    return BlockUIRouterModule;
}());
export { BlockUIRouterModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxvY2stdWktcm91dGVyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmc6L25nLWJsb2NrLXVpL3JvdXRlci9ibG9jay11aS1yb3V0ZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUU5RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzVDLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHVDQUF1QyxDQUFDOztBQUNqRjtBQU9HO0FBQ0U7QUFBTTtBQUFRO0FBQW1CO0FBQVEsSUFBOUIsMkJBQU87QUFBTztBQUM5QjtBQUFRO0FBQ0ssUUFEVCxNQUFNLENBQUM7QUFDWCxZQUFNLFFBQVEsRUFBRSxtQkFBbUI7QUFDbkMsWUFBTSxTQUFTLEVBQUU7QUFDakIsZ0JBQVEsd0JBQXdCO0FBQ2hDLGFBQU87QUFDUCxTQUFLLENBQUM7QUFDTjt1REFiQyxRQUFRLFNBQUM7V0FDUixPQUFPLEVBQUUsMEJBQ1AsYUFBYSxzQkFDZCxrQkFDRjs7Ozs7Ozs7Ozs7Z0RBQ1E7QUFBQyw4QkFYVjtBQUFFO0FBQU0sU0FXSyxtQkFBbUI7O0FBWEEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBU0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQVpBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUNBLEFBVkEsQUFXQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQmxvY2tVSU1vZHVsZSB9IGZyb20gJ25nLWJsb2NrLXVpJztcbmltcG9ydCB7IEJsb2NrVUlQcmV2ZW50TmF2aWdhdGlvbiB9IGZyb20gJy4vYmxvY2stdWktcHJldmVudC1uYXZpZ2F0aW9uLnNlcnZpY2UnO1xuXG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBCbG9ja1VJTW9kdWxlXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgQmxvY2tVSVJvdXRlck1vZHVsZSB7XG4gIHB1YmxpYyBzdGF0aWMgZm9yUm9vdCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IEJsb2NrVUlSb3V0ZXJNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgQmxvY2tVSVByZXZlbnROYXZpZ2F0aW9uXG4gICAgICBdXG4gICAgfTtcbiAgfVxufVxuIl19