{"version":3,"file":"ng-block-ui.js.map","sources":["ng://ng-block-ui/constants/block-ui-actions.constant.ts","ng://ng-block-ui/constants/block-ui-default-name.constant.ts","ng://ng-block-ui/services/block-ui-instance.service.ts","ng://ng-block-ui/components/block-ui/block-ui.component.ts","ng://ng-block-ui/components/block-ui-content/block-ui-content.component.style.ts","ng://ng-block-ui/components/block-ui-content/block-ui-content.component.template.ts","ng://ng-block-ui/components/block-ui-content/block-ui-content.component.ts","ng://ng-block-ui/services/block-ui.service.ts","ng://ng-block-ui/directives/block-ui.directive.ts","ng://ng-block-ui/block-ui.module.ts","ng://ng-block-ui/decorators/block-ui.decorator.ts"],"sourcesContent":["export class BlockUIActions {\n    static START = 'start';\n    static STOP = 'stop';\n    static UPDATE = 'update';\n    static RESET = 'reset';\n    static UNSUBSCRIBE = 'unsubscribe';\n}","export const BlockUIDefaultName: string = `block-ui-main`;\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { BlockUIActions } from '../constants/block-ui-actions.constant';\nimport { BlockUIDefaultName } from '../constants/block-ui-default-name.constant';\nimport { NgBlockUI } from '../models/block-ui.model';\nimport { BlockUISettings } from '../models/block-ui-settings.model';\nimport { BlockUIEvent } from '../models/block-ui-event.model';\n\n\n@Injectable()\nexport class BlockUIInstanceService {\n  blockUISettings: BlockUISettings | any = {};\n  blockUIInstances: any = {};\n  private blockUISubject: ReplaySubject<any> = new ReplaySubject();\n  private blockUIObservable: Observable<any> = this.blockUISubject.asObservable();\n\n  constructor() {\n    this.blockUIObservable.subscribe(this.blockUIMiddleware.bind(this));\n  }\n\n  getSettings(): BlockUISettings | any {\n    return this.blockUISettings;\n  }\n\n  updateSettings(settings: BlockUISettings | any = {}): void {\n    this.blockUISettings = { ...this.blockUISettings, ...settings };\n  }\n\n  decorate(name: string = BlockUIDefaultName): NgBlockUI {\n    const blockUI = {\n      name,\n      isActive: false,\n      blockCount: 0,\n      start: this.dispatch(this.blockUISubject, BlockUIActions.START, name),\n      update: this.dispatch(this.blockUISubject, BlockUIActions.UPDATE, name),\n      stop: this.dispatch(this.blockUISubject, BlockUIActions.STOP, name),\n      reset: this.dispatch(this.blockUISubject, BlockUIActions.RESET, name),\n      unsubscribe: this.dispatch(this.blockUISubject, BlockUIActions.UNSUBSCRIBE, name)\n    } as NgBlockUI;\n\n    this.blockUIInstances[name] = this.blockUIInstances[name] || blockUI;\n\n    return blockUI;\n  }\n\n  observe(): Observable<any> {\n    return this.blockUIObservable;\n  }\n\n  private blockUIMiddleware({ action, name }: BlockUIEvent): void {\n    let isActive: boolean = null;\n\n    switch (action) {\n      case (BlockUIActions.START):\n        isActive = true;\n        break;\n\n      case (BlockUIActions.STOP):\n      case (BlockUIActions.RESET):\n        isActive = false;\n        break;\n    }\n\n    if (isActive !== null) {\n      this.blockUIInstances[name].isActive = isActive;\n    }\n  }\n\n  private dispatch(subject: ReplaySubject<any>, action: BlockUIActions, name: string = BlockUIDefaultName): Function {\n    return (message?: any): void => {\n      subject.next({\n        name,\n        action,\n        message\n      });\n    };\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  OnInit,\n  ComponentRef\n} from '@angular/core';\nimport { BlockUIInstanceService } from '../../services/block-ui-instance.service';\nimport { BlockUIDefaultName } from '../../constants/block-ui-default-name.constant';\n\n@Component({\n  selector: 'block-ui',\n  template: `\n    <ng-content></ng-content>\n    <block-ui-content\n      [name]=\"name\"\n      [message]=\"message\"\n      [template]=\"template\"\n      [delayStart]=\"delayStart\"\n      [delayStop]=\"delayStop\"\n    >\n    </block-ui-content>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class BlockUIComponent implements OnInit {\n  @Input() name: string;\n  @Input() message: any;\n  @Input() delayStart: number;\n  @Input() delayStop: number;\n  @Input() template: any;\n\n  constructor(\n    private blockUI: BlockUIInstanceService,\n  ) { }\n\n  ngOnInit() {\n    this.name = this.name || BlockUIDefaultName;\n    this.template = this.template || this.blockUI.blockUISettings.template;\n  }\n}\n","// Spinner style - https://github.com/lukehaas/css-loaders\n\nexport const styles = `\n.block-ui-wrapper {\n  display: none;\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.70);\n  z-index: 30000;\n  cursor: wait;\n}\n\n.block-ui-wrapper.block-ui-wrapper--element {\n  position: absolute;\n}\n\n.block-ui-wrapper.active {\n  display: block;\n}\n\n.block-ui-wrapper.block-ui-main {\n  position: fixed;\n}\n\n.block-ui-spinner,\n.block-ui-template {\n  position: absolute;\n  top: 40%;\n  margin: 0 auto;\n  left: 0;\n  right: 0;\n  transform: translateY(-50%);\n}\n\n.block-ui-spinner > .message {\n  font-size: 1.3em;\n  text-align: center;\n  color: #fff;\n}\n\n.block-ui__element {\n  position: relative;\n}\n\n.loader,\n.loader:after {\n  border-radius: 50%;\n  width: 10em;\n  height: 10em;\n}\n.loader {\n  margin: 7px auto;\n  font-size: 5px;\n  position: relative;\n  text-indent: -9999em;\n  border-top: 1.1em solid rgba(255, 255, 255, 0.2);\n  border-right: 1.1em solid rgba(255, 255, 255, 0.2);\n  border-bottom: 1.1em solid rgba(255, 255, 255, 0.2);\n  border-left: 1.1em solid #ffffff;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n  -webkit-animation: load8 1.1s infinite linear;\n  animation: load8 1.1s infinite linear;\n}\n\n@-webkit-keyframes load8 {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes load8 {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n`;\n","export const template = `\n<div class=\"block-ui-wrapper {{name}} {{className}}\" [ngClass]=\"{ 'active': active }\">\n  <div class=\"block-ui-spinner\" *ngIf=\"!templateCmp\">\n    <div class=\"loader\"></div>\n    <div *ngIf=\"message || defaultMessage\" class=\"message\">\n      {{ message || defaultMessage }}\n    </div>\n  </div>\n  <ng-template *ngIf=\"templateCmp\" #templateOutlet></ng-template>\n</div>\n`;\n","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  AfterViewChecked,\n  OnDestroy,\n  ViewEncapsulation,\n  Input,\n  ViewChild,\n  ComponentRef,\n  TemplateRef,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { BlockUIInstanceService } from '../../services/block-ui-instance.service';\nimport { BlockUIEvent } from '../../models/block-ui-event.model';\nimport { BlockUIActions } from '../../constants/block-ui-actions.constant';\nimport { BlockUIDefaultName } from '../../constants/block-ui-default-name.constant';\nimport { styles } from './block-ui-content.component.style';\nimport { template } from './block-ui-content.component.template';\nimport { BlockUISettings } from '../../models/block-ui-settings.model';\n\n@Component({\n  selector: 'block-ui-content',\n  template: template,\n  styles: [styles], // TODO: Find how to bundle styles for npm\n  encapsulation: ViewEncapsulation.None\n})\nexport class BlockUIContentComponent implements OnInit, AfterViewInit, AfterViewChecked, OnDestroy {\n  @Input() name: string = BlockUIDefaultName;\n  @Input() delayStart: number = 0;\n  @Input() delayStop: number = 0;\n  @Input('message') defaultMessage: string;\n  @Input('template') templateCmp: any;\n  @ViewChild('templateOutlet', { read: ViewContainerRef })\n  templateOutlet: ViewContainerRef;\n\n  state: any = { startTimeout: null, stopTimeout: null, blockCount: 0 };\n  className: string;\n  active: boolean = false;\n  templateCompRef: ComponentRef<{ message?: any }> | TemplateRef<{}>;\n  message: any;\n\n  private blockUISubscription: Subscription;\n  private settings: BlockUISettings;\n\n  constructor(\n    private blockUI: BlockUIInstanceService,\n    private resolver: ComponentFactoryResolver,\n    private changeDetectionRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.settings = this.blockUI.getSettings();\n    this.blockUISubscription = this.subscribeToBlockUI(this.blockUI.observe());\n  }\n\n  ngAfterViewInit() {\n    try {\n      if (!this.templateCmp) {\n        return false;\n      }\n\n      if (this.templateCmp instanceof TemplateRef) {\n        this.templateOutlet.createEmbeddedView(this.templateCmp);\n      } else {\n        const templateComp = this.resolver.resolveComponentFactory(this.templateCmp);\n        this.templateCompRef = this.templateOutlet.createComponent(templateComp);\n\n        this.updateBlockTemplate(this.message);\n      }\n    } catch (error) {\n      console.error('ng-block-ui:', error);\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.detectChanges();\n  }\n\n  private subscribeToBlockUI(blockUI$: Observable<any>): Subscription {\n    return blockUI$\n      .subscribe(event => this.onDispatchedEvent(event));\n  }\n\n  private onDispatchedEvent(event: BlockUIEvent) {\n    switch (event.action) {\n      case (BlockUIActions.START):\n        this.onStart(event);\n        break;\n\n      case (BlockUIActions.STOP):\n        this.onStop(event);\n        break;\n\n      case (BlockUIActions.UPDATE):\n        this.onUpdate(event);\n        break;\n\n      case (BlockUIActions.RESET):\n        this.onReset();\n        break;\n\n      case (BlockUIActions.UNSUBSCRIBE):\n        this.onStop(event);\n        this.onUnsubscribe(event.name);\n        break;\n    }\n  }\n\n  private onStart({ name, message }: BlockUIEvent) {\n    if (name === this.name) {\n      const delay = this.delayStart || this.settings.delayStart || 0;\n\n      if (this.state.startTimeout === null) {\n        if (delay === 0) {\n          this.showBlock(message);\n        } else {\n          this.state.startTimeout = setTimeout(() => {\n            this.showBlock(message);\n          }, delay);\n        }\n      }\n\n      this.state.blockCount++;\n      this.updateInstanceBlockCount();\n    }\n  }\n\n  private onStop({ name }: BlockUIEvent) {\n    if (name === this.name) {\n      const delay = this.delayStop || this.settings.delayStop || 0;\n\n      if (this.state.blockCount > 1) {\n        this.state.blockCount--;\n      } else {\n        if (!this.active) {\n          this.clearState();\n        } else {\n          if (this.state.stopTimeout === null) {\n            if (delay === 0) {\n              this.hideBlock();\n            } else {\n              this.state.stopTimeout = setTimeout(() => {\n                this.hideBlock();\n              }, delay);\n            }\n          }\n        }\n      }\n\n      this.updateInstanceBlockCount();\n    }\n  }\n\n  private onReset() {\n    this.hideBlock();\n  }\n\n  private onUpdate({ name, message }: BlockUIEvent) {\n    if (name === this.name) {\n      const delay = this.delayStart || this.settings.delayStart || 0;\n\n      if (delay === 0) {\n        this.updateMessage(message);\n      } else {\n        setTimeout(() => {\n          this.updateMessage(message);\n        }, delay);\n      }\n    }\n  }\n\n  updateMessage(message: string) {\n    this.message = message || this.defaultMessage || this.settings.message;\n    this.updateBlockTemplate(this.message);\n    this.detectChanges();\n  }\n\n  private showBlock(message: any) {\n    this.active = true;\n    this.message = message || this.defaultMessage || this.settings.message;\n    this.updateBlockTemplate(this.message);\n    this.detectChanges();\n  }\n\n  private hideBlock() {\n    this.clearState();\n    this.active = false;\n    this.detectChanges();\n  }\n\n  private clearState() {\n    this.state.startTimeout != null && clearTimeout(this.state.startTimeout);\n    this.state.stopTimeout != null && clearTimeout(this.state.stopTimeout);\n    this.state.blockCount = 0;\n    this.state.startTimeout = null;\n    this.state.stopTimeout = null;\n    this.updateInstanceBlockCount();\n  }\n\n  private updateBlockTemplate(msg: any): void {\n    if (this.templateCompRef && this.templateCompRef instanceof ComponentRef) {\n      this.templateCompRef.instance.message = msg;\n    }\n  }\n\n  private onUnsubscribe(name: string) {\n    if (this.blockUISubscription && name === this.name) {\n      this.blockUISubscription.unsubscribe();\n    }\n  }\n\n  private updateInstanceBlockCount() {\n    if (this.blockUI.blockUIInstances[this.name]) {\n      this.blockUI.blockUIInstances[this.name].blockCount = this.state.blockCount;\n    }\n  }\n\n  private detectChanges() {\n    if (!this.changeDetectionRef['destroyed']) {\n      this.changeDetectionRef.detectChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this.onUnsubscribe(this.name);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BlockUIActions } from '../constants/block-ui-actions.constant';\nimport { BlockUIDefaultName } from '../constants/block-ui-default-name.constant';\nimport { BlockUIInstanceService } from './block-ui-instance.service';\n\n\n@Injectable()\nexport class BlockUIService {\n\n  constructor(\n    private blockUIInstance: BlockUIInstanceService\n  ) {}\n\n  /**\n  * Starts blocking for given BlockUI instance or instances\n  */\n  start(target: string | string[], message?: any): void {\n    this.dispatch(target, BlockUIActions.START, message);\n  }\n\n  /**\n  * Stops blocking for given BlockUI instance or instances\n  */\n  stop(target: string | string[]): void {\n    this.dispatch(target, BlockUIActions.STOP);\n  }\n\n  /**\n  * Reset blocking for given BlockUI instance or instances\n  */\n  reset(target: string | string[]): void {\n    this.dispatch(target, BlockUIActions.RESET);\n  }\n\n  /**\n  * Unsubscribes for given BlockUI instance or instances\n  */\n  unsubscribe(target: string | string[]): void {\n    this.dispatch(target, BlockUIActions.UNSUBSCRIBE);\n  }\n\n  /**\n  * Checks if BlockUI is actively blocking\n  */\n  isActive(target: string | string[] = null): boolean {\n    const targets = target ? this.toArray(target) : null;\n    const instances = this.blockUIInstance.blockUIInstances;\n\n    return Object.keys(instances).some((key: string) => {\n      if (!targets) {\n        return instances[key].isActive;\n      }\n\n      return targets.indexOf(instances[key].name) >= 0 && instances[key].isActive;\n    });\n  }\n\n  private dispatch(target: string | string[] = [], type: string, message?: any) {\n    const instances = this.toArray(target);\n    instances.forEach(i => this.blockUIInstance.decorate(i)[type](message));\n  }\n\n  private toArray(target: string | string[] = []) {\n    return typeof target === 'string' ? [target] : target;\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  ComponentRef,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  TemplateRef,\n  Renderer2\n} from '@angular/core';\nimport { BlockUIContentComponent } from '../components/block-ui-content/block-ui-content.component';\nimport { BlockUIInstanceService } from '../services/block-ui-instance.service';\nimport { BlockUIDefaultName } from '../constants/block-ui-default-name.constant';\n\n@Directive({ selector: '[blockUI]' })\nexport class BlockUIDirective implements OnInit {\n  private blockUIComponentRef: ComponentRef<BlockUIContentComponent>;\n  blockTarget: string;\n  message: any;\n  template: any;\n  delayStart: any;\n  delayStop: any;\n\n  @Input()\n  set blockUI(name: any) { this.blockTarget = name; };\n  @Input()\n  set blockUIMessage(message: any) { this.message = message; };\n  @Input()\n  set blockUITemplate(template: any) { this.template = template; };\n  @Input()\n  set blockUIDelayStart(delayStart: any) {\n     this.delayStart = delayStart ? Number(delayStart) : null;\n  };\n  @Input()\n  set blockUIDelayStop(delayStop: any) {\n    this.delayStop = delayStop ? Number(delayStop) : null;\n  };\n\n  constructor(\n    private blockUIService: BlockUIInstanceService,\n    private viewRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private renderer: Renderer2,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) { }\n\n  ngOnInit() {\n    try {\n      this.viewRef.createEmbeddedView(this.templateRef);\n      const parentElement = this.viewRef.element.nativeElement.nextSibling;\n\n      if (parentElement && !this.isComponentInTemplate(parentElement)) {\n        this.renderer.addClass(parentElement, 'block-ui__element');\n\n        this.blockUIComponentRef = this.createComponent();\n\n        let blockUIContent = this.findContentNode(this.viewRef.element.nativeElement);\n\n        if (blockUIContent) {\n          const settings = this.blockUIService.getSettings();\n\n          parentElement.appendChild(blockUIContent);\n          this.blockUIComponentRef.instance.className = 'block-ui-wrapper--element';\n          this.blockUIComponentRef.instance.name = this.blockTarget || BlockUIDefaultName;\n          if (this.message) this.blockUIComponentRef.instance.defaultMessage = this.message;\n          if (this.delayStart) this.blockUIComponentRef.instance.delayStart = this.delayStart;\n          if (this.delayStop) this.blockUIComponentRef.instance.delayStop = this.delayStop;\n          if (this.template || settings.template)\n            this.blockUIComponentRef.instance.templateCmp = this.template || settings.template;\n        }\n      }\n    } catch (error) {\n      console.error('ng-block-ui:', error);\n    }\n  }\n\n  private isComponentInTemplate(element: any): boolean {\n    let { children } = element || [];\n    children = Array.from(children).reverse();\n    return children.some((el: any) => el.localName === 'block-ui');\n  }\n\n  // Needed for IE (#17)\n  private findContentNode(element: any) {\n    const { nextSibling } = element;\n    return [nextSibling, nextSibling.nextSibling].find((e) => e.localName === 'block-ui-content');\n  }\n\n  private createComponent() {\n    const resolvedBlockUIComponent = this.componentFactoryResolver.resolveComponentFactory(BlockUIContentComponent);\n    return this.viewRef.createComponent(resolvedBlockUIComponent);\n  }\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BlockUIComponent } from './components/block-ui/block-ui.component';\nimport { BlockUIContentComponent } from './components/block-ui-content/block-ui-content.component';\nimport { BlockUIInstanceService } from './services/block-ui-instance.service';\nimport { BlockUIService } from './services/block-ui.service';\nimport { BlockUIDirective } from './directives/block-ui.directive';\nimport { BlockUISettings } from './models/block-ui-settings.model';\n\nexport const BlockUIServiceInstance = new BlockUIInstanceService();\n\n// Needed for AOT compiling\nexport const BlockUIModuleSettings = new InjectionToken<string>('BlockUIModuleSettings');\n\nexport function provideInstance(settings: BlockUISettings): any {\n  BlockUIServiceInstance.updateSettings(settings);\n  return BlockUIServiceInstance;\n}\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  entryComponents: [\n    BlockUIComponent,\n    BlockUIContentComponent\n  ],\n  declarations: [\n    BlockUIComponent,\n    BlockUIDirective,\n    BlockUIContentComponent\n  ],\n  exports: [\n    BlockUIComponent,\n    BlockUIDirective,\n    BlockUIContentComponent\n  ]\n})\nexport class BlockUIModule {\n  public static forRoot(settings: BlockUISettings = {}): ModuleWithProviders {\n    return {\n      ngModule: BlockUIModule,\n      providers: [\n        {\n          provide: BlockUIModuleSettings,\n          useValue: settings\n        },\n        {\n          provide: BlockUIInstanceService,\n          useFactory: provideInstance,\n          deps: [BlockUIModuleSettings]\n        },\n        BlockUIService\n      ]\n    };\n  }\n}\n","import { BlockUIServiceInstance } from '../block-ui.module';\n\n\nexport function BlockUI(value?: string) {\n  return function (target?: any, propertyKey?: string, descriptor?: any) {\n    target[propertyKey] = BlockUIServiceInstance.decorate(value);\n  };\n}\n"],"names":[],"mappings":"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"}
