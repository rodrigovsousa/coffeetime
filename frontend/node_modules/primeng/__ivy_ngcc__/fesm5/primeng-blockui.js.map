{"version":3,"file":"primeng-blockui.js","sources":["ng:/primeng/blockui/blockui.ts","ng:/primeng/blockui/primeng-blockui.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,AfterViewInit,OnDestroy,ElementRef,ViewChild,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\n\n@Component({\n    selector: 'p-blockUI',\n    template: `\n        <div #mask [class]=\"styleClass\" [ngClass]=\"{'ui-blockui-document':!target, 'ui-blockui ui-widget-overlay': true}\" [ngStyle]=\"{display: blocked ? 'block' : 'none'}\">\n            <ng-content></ng-content>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class BlockUI implements AfterViewInit,OnDestroy {\n\n    @Input() target: any;\n    \n    @Input() autoZIndex: boolean = true;\n    \n    @Input() baseZIndex: number = 0;\n    \n    @Input() styleClass: string;\n    \n    @ViewChild('mask') mask: ElementRef;\n    \n    _blocked: boolean;\n        \n    constructor(public el: ElementRef) {}\n    \n    @Input() get blocked(): boolean {\n        return this._blocked;\n    }\n    \n    set blocked(val: boolean) {\n        this._blocked = val;\n        \n        if (this.mask && this.mask.nativeElement) {\n            if (this._blocked)\n                this.block();\n            else\n                this.unblock();\n        }\n    }\n    \n    ngAfterViewInit() {\n        if (this.target && !this.target.getBlockableElement) {\n            throw 'Target of BlockUI must implement BlockableUI interface';\n        }\n    }\n        \n    block() {\n        if (this.target) {\n            this.target.getBlockableElement().appendChild(this.mask.nativeElement);\n            let style = this.target.style||{};\n            style.position = 'relative';\n            this.target.style = style;\n        }\n        else {\n            document.body.appendChild(this.mask.nativeElement);\n        }\n        \n        if (this.autoZIndex) {\n            this.mask.nativeElement.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n    }\n    \n    unblock() {\n        this.el.nativeElement.appendChild(this.mask.nativeElement);\n    }\n    \n    ngOnDestroy() {\n        this.unblock();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [BlockUI],\n    declarations: [BlockUI]\n})\nexport class BlockUIModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}