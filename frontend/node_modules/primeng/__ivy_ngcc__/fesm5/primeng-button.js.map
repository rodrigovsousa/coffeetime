{"version":3,"file":"primeng-button.js","sources":["ng:/primeng/button/button.ts","ng:/primeng/button/primeng-button.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Directive,Component,ElementRef,EventEmitter,AfterViewInit,Output,OnDestroy,Input,ChangeDetectionStrategy} from '@angular/core';\nimport {DomHandler} from 'primeng/dom';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pButton]'\n})\nexport class ButtonDirective implements AfterViewInit, OnDestroy {\n\n    @Input() iconPos: 'left' | 'right' = 'left';\n    \n    @Input() cornerStyleClass: string = 'ui-corner-all';\n        \n    public _label: string;\n    \n    public _icon: string;\n            \n    public initialized: boolean;\n\n    constructor(public el: ElementRef) {}\n    \n    ngAfterViewInit() {\n        DomHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\n        if (this.icon) {\n            let iconElement = document.createElement(\"span\");\n            iconElement.setAttribute(\"aria-hidden\", \"true\");\n            let iconPosClass = (this.iconPos == 'right') ? 'ui-button-icon-right': 'ui-button-icon-left';\n            iconElement.className = iconPosClass  + ' ui-clickable ' + this.icon;\n            this.el.nativeElement.appendChild(iconElement);\n        }\n        \n        let labelElement = document.createElement(\"span\");\n        if (this.icon && !this.label) {\n            labelElement.setAttribute('aria-hidden', 'true');\n        }\n        labelElement.className = 'ui-button-text ui-clickable';\n        labelElement.appendChild(document.createTextNode(this.label||'ui-btn'));\n        this.el.nativeElement.appendChild(labelElement);\n        this.initialized = true;\n    }\n        \n    getStyleClass(): string {\n        let styleClass = 'ui-button ui-widget ui-state-default ' + this.cornerStyleClass;\n        if (this.icon) {\n            if (this.label != null && this.label != undefined && this.label != \"\") {\n                if (this.iconPos == 'left')\n                    styleClass = styleClass + ' ui-button-text-icon-left';\n                else\n                    styleClass = styleClass + ' ui-button-text-icon-right';\n            }\n            else {\n                styleClass = styleClass + ' ui-button-icon-only';\n            }\n        }\n        else {\n            if (this.label) {\n                styleClass = styleClass + ' ui-button-text-only';\n            }\n            else {\n                styleClass = styleClass + ' ui-button-text-empty';\n            }\n        }\n        \n        return styleClass;\n    }\n\n    setStyleClass() {\n        let styleClass = this.getStyleClass();\n        this.el.nativeElement.className = styleClass;\n    }\n    \n    @Input() get label(): string {\n        return this._label;\n    }\n\n    set label(val: string) {\n        this._label = val;\n        \n        if (this.initialized) {\n            DomHandler.findSingle(this.el.nativeElement, '.ui-button-text').textContent = this._label || 'ui-btn';\n\n            if (!this.icon) {\n                if (this._label) {\n                    DomHandler.removeClass(this.el.nativeElement, 'ui-button-text-empty');\n                    DomHandler.addClass(this.el.nativeElement, 'ui-button-text-only');\n                }\n                else {\n                    DomHandler.addClass(this.el.nativeElement, 'ui-button-text-empty');\n                    DomHandler.removeClass(this.el.nativeElement, 'ui-button-text-only');\n                }\n            }\n\n            this.setStyleClass();\n        }\n    }\n    \n    @Input() get icon(): string {\n        return this._icon;\n    }\n\n    set icon(val: string) {\n        this._icon = val;\n        \n        if (this.initialized) {\n            let iconPosClass = (this.iconPos == 'right') ? 'ui-button-icon-right': 'ui-button-icon-left';\n            DomHandler.findSingle(this.el.nativeElement, '.ui-clickable').className =\n                iconPosClass + ' ui-clickable ' + this.icon;\n            this.setStyleClass();\n        }\n    }\n        \n    ngOnDestroy() {\n        while(this.el.nativeElement.hasChildNodes()) {\n            this.el.nativeElement.removeChild(this.el.nativeElement.lastChild);\n        }\n        \n        this.initialized = false;\n    }\n}\n\n@Component({\n    selector: 'p-button',\n    template: `\n        <button [attr.type]=\"type\" [class]=\"styleClass\" [ngStyle]=\"style\" [disabled]=\"disabled\"\n            [ngClass]=\"{'ui-button ui-widget ui-state-default ui-corner-all':true,\n                        'ui-button-icon-only': (icon && !label),\n                        'ui-button-text-icon-left': (icon && label && iconPos === 'left'),\n                        'ui-button-text-icon-right': (icon && label && iconPos === 'right'),\n                        'ui-button-text-only': (!icon && label),\n                        'ui-button-text-empty': (!icon && !label),\n                        'ui-state-disabled': disabled}\"\n                        (click)=\"onClick.emit($event)\" (focus)=\"onFocus.emit($event)\" (blur)=\"onBlur.emit($event)\">\n            <ng-content></ng-content>\n            <span [ngClass]=\"{'ui-clickable': true,\n                        'ui-button-icon-left': (iconPos === 'left'), \n                        'ui-button-icon-right': (iconPos === 'right')}\"\n                        [class]=\"icon\" *ngIf=\"icon\" [attr.aria-hidden]=\"true\"></span>\n            <span class=\"ui-button-text ui-clickable\" [attr.aria-hidden]=\"icon && !label\">{{label||'ui-btn'}}</span>\n        </button>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Button {\n\n    @Input() type: string;\n\n    @Input() iconPos: string = 'left';\n\n    @Input() icon: string;\n\n    @Input() label: string;\n\n    @Input() disabled: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ButtonDirective,Button],\n    declarations: [ButtonDirective,Button]\n})\nexport class ButtonModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}