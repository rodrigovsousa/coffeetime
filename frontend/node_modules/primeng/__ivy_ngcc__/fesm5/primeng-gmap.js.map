{"version":3,"file":"primeng-gmap.js","sources":["ng:/primeng/gmap/gmap.ts","ng:/primeng/gmap/primeng-gmap.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,AfterViewChecked,DoCheck,Input,Output,EventEmitter,IterableDiffers,ChangeDetectorRef,NgZone,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\ndeclare var google: any;\n\n@Component({\n    selector: 'p-gmap',\n    template: `<div [ngStyle]=\"style\" [class]=\"styleClass\"></div>`,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class GMap implements AfterViewChecked,DoCheck {\n\n    @Input() style: any;\n        \n    @Input() styleClass: string;\n    \n    @Input() options: any;\n    \n    @Input() overlays: any[];\n    \n    @Output() onMapClick: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onOverlayClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onOverlayDblClick: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onOverlayDragStart: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onOverlayDrag: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onOverlayDragEnd: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onMapReady: EventEmitter<any> = new EventEmitter();\n\n    @Output() onMapDragEnd: EventEmitter<any> = new EventEmitter();\n   \n    @Output() onZoomChanged: EventEmitter<any> = new EventEmitter();\n\n    differ: any;\n    \n    map: any;\n\n    constructor(public el: ElementRef,differs: IterableDiffers, public cd: ChangeDetectorRef, public zone:NgZone) {\n        this.differ = differs.find([]).create(null);\n    }\n    \n    ngAfterViewChecked() {\n        if (!this.map && this.el.nativeElement.offsetParent) {\n            this.initialize();\n        }\n    }\n    \n    initialize() {\n        this.map = new google.maps.Map(this.el.nativeElement.children[0], this.options);\n        this.onMapReady.emit({\n            map: this.map\n        });\n        \n        if (this.overlays) {\n            for(let overlay of this.overlays) {\n                overlay.setMap(this.map);\n                this.bindOverlayEvents(overlay);\n            }\n        }\n        \n        this.map.addListener('click', (event) => {\n            this.zone.run(() => {\n                this.onMapClick.emit(event);\n            });\n        });\n\n        this.map.addListener('dragend', (event) => {\n            this.zone.run(() => {\n                this.onMapDragEnd.emit(event);\n            });\n        });\n\n        this.map.addListener('zoom_changed', (event) => {\n            this.zone.run(() => {\n                this.onZoomChanged.emit(event);\n            });\n        });\n    }\n    \n    bindOverlayEvents(overlay: any) {\n        overlay.addListener('click', (event) => {\n            this.zone.run(() => {\n                this.onOverlayClick.emit({\n                    originalEvent: event,\n                    'overlay': overlay,\n                    map: this.map\n                });\n            });\n        });\n\n        overlay.addListener('dblclick', (event) => {\n            this.zone.run(() => {\n                this.onOverlayDblClick.emit({\n                    originalEvent: event,\n                    'overlay': overlay,\n                    map: this.map\n                });\n            });\n        });\n        \n        if (overlay.getDraggable()) {\n            this.bindDragEvents(overlay);\n        }\n    }\n    \n    ngDoCheck() {\n        let changes = this.differ.diff(this.overlays);\n        \n        if (changes && this.map) {\n            changes.forEachRemovedItem((record) => {\n                google.maps.event.clearInstanceListeners(record.item);\n                record.item.setMap(null);\n            });\n\n            changes.forEachAddedItem((record) => {\n                record.item.setMap(this.map);\n                record.item.addListener('click', (event) => {\n                    this.zone.run(() => {\n                        this.onOverlayClick.emit({\n                            originalEvent: event,\n                            overlay: record.item,\n                            map: this.map\n                        });\n                    });\n                });\n                \n                if (record.item.getDraggable()) {\n                    this.bindDragEvents(record.item);\n                }\n            });\n        }\n    }\n    \n    bindDragEvents(overlay) {\n        overlay.addListener('dragstart', (event) => {\n            this.zone.run(() => {\n                this.onOverlayDragStart.emit({\n                    originalEvent: event,\n                    overlay: overlay,\n                    map: this.map\n                });\n            });\n        });\n        \n        overlay.addListener('drag', (event) => {\n            this.zone.run(() => {\n                this.onOverlayDrag.emit({\n                    originalEvent: event,\n                    overlay: overlay,\n                    map: this.map\n                });\n            });\n        });\n        \n        overlay.addListener('dragend', (event) => {\n            this.zone.run(() => {\n                this.onOverlayDragEnd.emit({\n                    originalEvent: event,\n                    overlay: overlay,\n                    map: this.map\n                });\n            });\n        });\n    }\n    \n    getMap() {\n        return this.map;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [GMap],\n    declarations: [GMap]\n})\nexport class GMapModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}