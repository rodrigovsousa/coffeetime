{"version":3,"file":"primeng-inputtext.js","sources":["ng:/primeng/inputtext/inputtext.ts","ng:/primeng/inputtext/primeng-inputtext.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAA6C,IAkBzC,mBAAmB,EAAc,EAAqB,OAAgB;AAAI,QAAvD,OAAE,GAAF,EAAE,CAAY;AAAC,QAAoB,YAAO,GAAP,OAAO,CAAS;AAAC,KAAG;AAC9E,IACI,6BAAS,GAAT;AACJ,QAAQ,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACjC,KAAK;AACJ;AAC0G,IAEvG,2BAAO,GAAP,UAAQ,CAAC;AACb,QAAQ,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACjC,KAAK;AACJ,IACG,qCAAiB,GAAjB;AAAc,QACV,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM;AACxF,aAAyB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC7D,KAAK;AACJ;AAIU,gBApBgB,UAAU;AAAI,gBAA0B,OAAO,uBAAlC,QAAQ;AAAM;AAAU,IAQ5D;AACJ,QAFK,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;AAAC,4CAGlC;AACJ,IAfY,SAAS,wBAVrB,SAAS,CAAC,nBAUH,CAIgC,WAAA,QAAQ,EAAE,CAAA;SAb9C,QAAQ,jBAauC,OAJtC,SAAS,CAoBrB;AA7Ba,cAAc,cACxB,IAAI,EAAE,kBACF,sBAAsB,EAAE,MAAM,kBAC9B,uBAAuB,EAAE,MAAM,kBAC/B;IAA0B,EAAE,MAAM,kBAClC,mBAAmB,EAAE,MAAM,kBAC3B,yBAAyB,EAAE,QAAQ,cACtC,UACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;oBAsBF;AACA,IAFA,gBAAC;AAED,CAtBA,IAoBC;AACD;AAGS,IAGT;AAA6B,KAAG;IAAnB,eAAe,wBAL3B,QAAQ,CAAC,cACN,OAAO;AAAE,CAAC,YAAY,CAAC,cACvB,OAAO,EAAE,CAAC,SAAS,CAAC,cACpB,YAAY,EAAE,CAAC,SAAS,CAAC,UAC5B,CAAC,QACW,eAAe,CAAI;;;;;;;;;gDAAC;AAAC,IAAH,sBAAC;AAAE,CAAlC;AAAK;ACzCL;AACA;AACA,GAAG;AACH;AACA;AACS","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,DoCheck,Optional} from '@angular/core';\nimport {NgModel} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pInputText]',\n    host: {\n        '[class.ui-inputtext]': 'true',\n        '[class.ui-corner-all]': 'true',\n        '[class.ui-state-default]': 'true',\n        '[class.ui-widget]': 'true',\n        '[class.ui-state-filled]': 'filled'\n    }\n})\nexport class InputText implements DoCheck {\n\n    filled: boolean;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel) {}\n        \n    ngDoCheck() {\n        this.updateFilledState();\n    }\n    \n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n    @HostListener('input', ['$event']) \n    onInput(e) {\n        this.updateFilledState();\n    }\n    \n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) ||\n                        (this.ngModel && this.ngModel.model);\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputText],\n    declarations: [InputText]\n})\nexport class InputTextModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}