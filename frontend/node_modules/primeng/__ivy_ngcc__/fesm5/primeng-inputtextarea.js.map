{"version":3,"file":"primeng-inputtextarea.js","sources":["ng:/primeng/inputtextarea/inputtextarea.ts","ng:/primeng/inputtextarea/primeng-inputtextarea.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,Output,DoCheck,EventEmitter,Optional} from '@angular/core';\nimport {NgModel} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pInputTextarea]',\n    host: {\n        '[class.ui-inputtext]': 'true',\n        '[class.ui-corner-all]': 'true',\n        '[class.ui-inputtextarea-resizable]': 'autoResize',\n        '[class.ui-state-default]': 'true',\n        '[class.ui-widget]': 'true',\n        '[class.ui-state-filled]': 'filled'\n    }\n})\nexport class InputTextarea implements DoCheck {\n    \n    @Input() autoResize: boolean;\n    \n    @Output() onResize: EventEmitter<any> = new EventEmitter();\n        \n    filled: boolean;\n\n    cachedScrollHeight:number;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel) {}\n        \n    ngDoCheck() {\n        this.updateFilledState();\n        \n        if (this.autoResize) {\n            this.resize();\n        }\n    }\n    \n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n    @HostListener('input', ['$event'])\n    onInput(e) {\n        this.updateFilledState();\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) || (this.ngModel && this.ngModel.model);\n    }\n    \n    @HostListener('focus', ['$event'])\n    onFocus(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    @HostListener('blur', ['$event'])\n    onBlur(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    resize(event?: Event) {\n        this.el.nativeElement.style.height = 'auto';\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = \"scroll\";\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        }\n        else {\n            this.el.nativeElement.style.overflow = \"hidden\";\n        }\n\n        this.onResize.emit(event||{});\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputTextarea],\n    declarations: [InputTextarea]\n})\nexport class InputTextareaModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}