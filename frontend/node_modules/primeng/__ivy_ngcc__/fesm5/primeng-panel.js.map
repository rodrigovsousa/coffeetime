{"version":3,"file":"primeng-panel.js","sources":["ng:/primeng/panel/panel.ts","ng:/primeng/panel/primeng-panel.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,ElementRef,ContentChild,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule,Footer} from 'primeng/api';\nimport {BlockableUI} from 'primeng/api';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\n\nlet idx: number = 0;\n\n@Component({\n    selector: 'p-panel',\n    template: `\n        <div [attr.id]=\"id\" [ngClass]=\"'ui-panel ui-widget ui-widget-content ui-corner-all'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div [ngClass]=\"{'ui-panel-titlebar ui-widget-header ui-helper-clearfix ui-corner-all': true, 'ui-panel-titlebar-clickable': (toggleable && toggler === 'header')}\" \n                *ngIf=\"showHeader\" (click)=\"onHeaderClick($event)\" [attr.id]=\"id + '-titlebar'\">\n                <span class=\"ui-panel-title\" *ngIf=\"header\" [attr.id]=\"id + '_header'\">{{header}}</span>\n                <ng-content select=\"p-header\"></ng-content>\n                <a *ngIf=\"toggleable\" [attr.id]=\"id + '-label'\" class=\"ui-panel-titlebar-icon ui-panel-titlebar-toggler ui-corner-all ui-state-default\" tabindex=\"0\"\n                    (click)=\"onIconClick($event)\" (keydown.enter)=\"onIconClick($event)\" [attr.aria-controls]=\"id + '-content'\" role=\"tab\" [attr.aria-expanded]=\"!collapsed\">\n                    <span [class]=\"collapsed ? expandIcon : collapseIcon\"></span>\n                </a>\n            </div>\n            <div [attr.id]=\"id + '-content'\" class=\"ui-panel-content-wrapper\" [@panelContent]=\"collapsed ? {value: 'hidden', params: {transitionParams: animating ? transitionOptions : '0ms', height: '0', opacity:'0'}} : {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*', opacity: '1'}}\" (@panelContent.done)=\"onToggleDone($event)\"\n                [ngClass]=\"{'ui-panel-content-wrapper-overflown': collapsed||animating}\"\n                role=\"region\" [attr.aria-hidden]=\"collapsed\" [attr.aria-labelledby]=\"id  + '-titlebar'\">\n                <div class=\"ui-panel-content ui-widget-content\">\n                    <ng-content></ng-content>\n                </div>\n                \n                <div class=\"ui-panel-footer ui-widget-content\" *ngIf=\"footerFacet\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                </div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('panelContent', [\n            state('hidden', style({\n                height: '0',\n                opacity: 0\n            })),\n            state('void', style({\n                height: '{{height}}',\n                opacity: '{{opacity}}'\n            }), {params: {height: '0', opacity: '0'}}),\n            state('visible', style({\n                height: '*',\n                opacity: 1\n            })),\n            transition('visible <=> hidden', animate('{{transitionParams}}')),\n            transition('void => hidden', animate('{{transitionParams}}')),\n            transition('void => visible', animate('{{transitionParams}}'))\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Panel implements BlockableUI {\n\n    @Input() toggleable: boolean;\n\n    @Input() header: string;\n\n    @Input() collapsed: boolean = false;\n    \n    @Input() style: any;\n    \n    @Input() styleClass: string;\n    \n    @Input() expandIcon: string = 'pi pi-plus';\n    \n    @Input() collapseIcon: string = 'pi pi-minus';\n  \n    @Input() showHeader: boolean = true;\n\n    @Input() toggler: string = \"icon\";\n    \n    @Output() collapsedChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBeforeToggle: EventEmitter<any> = new EventEmitter();\n\n    @Output() onAfterToggle: EventEmitter<any> = new EventEmitter();\n    \n    @Input() transitionOptions: string = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n\n    @ContentChild(Footer) footerFacet;\n    \n    animating: boolean;\n    \n    id: string = `ui-panel-${idx++}`;\n    \n    constructor(private el: ElementRef) {}\n\n    onHeaderClick(event: Event) {\n        if (this.toggler === 'header') {\n            this.toggle(event);\n        }\n    }\n\n    onIconClick(event: Event) {\n        if (this.toggler === 'icon') {\n            this.toggle(event);\n        }\n    }\n    \n    toggle(event: Event) {\n        if (this.animating) {\n            return false;\n        }\n        \n        this.animating = true;\n        this.onBeforeToggle.emit({originalEvent: event, collapsed: this.collapsed});\n        \n        if (this.toggleable) {\n            if (this.collapsed)\n                this.expand(event);\n            else\n                this.collapse(event);\n        }\n        \n        event.preventDefault();\n    }\n    \n    expand(event) {\n        this.collapsed = false;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    \n    collapse(event) {\n        this.collapsed = true;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    \n    getBlockableElement(): HTMLElementÂ {\n        return this.el.nativeElement.children[0];\n    }\n    \n    onToggleDone(event: Event) {\n        this.animating = false;\n        this.onAfterToggle.emit({originalEvent: event, collapsed: this.collapsed});\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Panel,SharedModule],\n    declarations: [Panel]\n})\nexport class PanelModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}