{"version":3,"file":"primeng-radiobutton.js","sources":["ng:/primeng/radiobutton/radiobutton.ts","ng:/primeng/radiobutton/primeng-radiobutton.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,ElementRef,EventEmitter,forwardRef,ViewChild,ChangeDetectorRef,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const RADIO_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioButton),\n    multi: true\n};\n\n@Component({\n    selector: 'p-radioButton',\n    template: `\n        <div [ngStyle]=\"style\" [ngClass]=\"'ui-radiobutton ui-widget'\" [class]=\"styleClass\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #rb type=\"radio\" [attr.id]=\"inputId\" [attr.name]=\"name\" [attr.value]=\"value\" [attr.tabindex]=\"tabindex\" [attr.aria-labelledby]=\"ariaLabelledBy\"\n                    [checked]=\"checked\" (change)=\"onChange($event)\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" [disabled]=\"disabled\">\n            </div>\n            <div (click)=\"handleClick($event, rb, true)\" role=\"radio\" [attr.aria-checked]=\"checked\"\n                [ngClass]=\"{'ui-radiobutton-box ui-widget ui-state-default':true,\n                'ui-state-active':rb.checked,'ui-state-disabled':disabled,'ui-state-focus':focused}\">\n                <span class=\"ui-radiobutton-icon ui-clickable\" [ngClass]=\"{'pi pi-circle-on':rb.checked}\"></span>\n            </div>\n        </div>\n        <label (click)=\"select($event)\" [class]=\"labelStyleClass\"\n            [ngClass]=\"{'ui-radiobutton-label':true, 'ui-label-active':rb.checked, 'ui-label-disabled':disabled, 'ui-label-focus':focused}\"\n            *ngIf=\"label\" [attr.for]=\"inputId\">{{label}}</label>\n    `,\n    providers: [RADIO_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class RadioButton implements ControlValueAccessor {\n\n    @Input() value: any;\n\n    @Input() name: string;\n\n    @Input() disabled: boolean;\n    \n    @Input() label: string;\n\n    @Input() tabindex: number;\n\n    @Input() inputId: string;\n\n    @Input() ariaLabelledBy: string;\n    \n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() labelStyleClass: string;\n\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n    \n    @ViewChild('rb') inputViewChild: ElementRef;\n            \n    public onModelChange: Function = () => {};\n    \n    public onModelTouched: Function = () => {};\n    \n    public checked: boolean;\n        \n    public focused: boolean;\n\n    constructor(private cd: ChangeDetectorRef) {}\n    \n    handleClick(event, radioButton, focus) {\n        event.preventDefault();\n\n        if (this.disabled) {\n            return;\n        }\n\n        this.select(event);\n\n        if (focus) {\n            radioButton.focus();\n        }\n    }\n    \n    select(event) {\n        if (!this.disabled) {\n            this.inputViewChild.nativeElement.checked = true;\n            this.checked = true;\n            this.onModelChange(this.value);\n            this.onClick.emit(event);\n        }\n    }\n            \n    writeValue(value: any) : void {\n        this.checked = (value == this.value);\n\n        if (this.inputViewChild && this.inputViewChild.nativeElement) {\n            this.inputViewChild.nativeElement.checked = this.checked;\n        }\n        \n        this.cd.markForCheck();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    onInputFocus(event) {\n        this.focused = true;\n        this.onFocus.emit(event);\n    }\n\n    onInputBlur(event) {\n        this.focused = false;\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    }\n    \n    onChange(event) {\n        this.select(event);\n    }\n\n    focus() {\n        this.inputViewChild.nativeElement.focus();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [RadioButton],\n    declarations: [RadioButton]\n})\nexport class RadioButtonModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}