{"version":3,"file":"primeng-terminal.js","sources":["ng:/primeng/terminal/terminalservice.ts","ng:/primeng/terminal/terminal.ts","ng:/primeng/terminal/primeng-terminal.ts"],"names":["__decorate"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACO,IAGP;AAA6B,QAEjB,kBAAa,GAAG,IAAI,OAAO,EAAU,CAAC;AAClD,QAAY,mBAAc,GAAG,IAAI,OAAO,EAAU,CAAC;AACnD,QACI,mBAAc,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;AACvD,QAAI,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;AACzD,KAYC;AAAC,IAXE,qCAAW,GAAX,UAAY,OAAe;AAC/B,QAAQ,IAAI,OAAO,EAAE;AACrB,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC7C,SAAS;AACT,KAAK;AACJ,IACG,sCAAY,GAAZ,UAAa,QAAgB;AACjC,QAAQ,IAAI,QAAQ,EAAE;AACtB,YAAY,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC/C,SAAS;AACT,KAAK;IAlBQ,eAAe,wBAD3B,UAAU,EAAE,QACA,eAAe,CAmB3B;;;;gDAAC;AAAC,IAAH,sBAAC;AAAE,CAnBH;AAAK;AAAC;AAGI;AAGiB;AAIW;AAQnC;AAC6D;ACvBhE;AAA4C,IA+CxC,kBAAmB,EAAc,EAAS,eAAgC;AAC9E,QADI,iBAKC;AACL,QANuB,OAAE,GAAF,EAAE,CAAY;AAAC,QAAQ,oBAAe,GAAf,eAAe,CAAiB;AAAC,QAV3E,aAAQ,GAAU,EAAE,CAAC;AACzB,QAUQ,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC,eAAe,CAAC,SAAS,CAAC,UAAA,QAAQ;AAAI,YACtE,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACxE,YAAY,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACzC,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IACI,kCAAe,GAAf;AAAc,QACV,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,KAAK;AACJ,IACG,qCAAkB,GAAlB;AAAc,QACV,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACnC,YAAY,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;AACnE,YAAY,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AAC1C,SAAS;AACT,KAAK;AACJ,IAEG,sBAAI,8BAAQ;AAAI,aAAhB,UAAa,KAAa;AAC9B,YAAQ,IAAI,KAAK,EAAE;AACnB,gBAAY,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;AACrE,gBAAY,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACzC,aAAS;AACT,SAAK;AACJ;AACqB;AACf,OAHF;AACL,IACI,gCAAa,GAAb,UAAc,KAAoB;AACtC,QAAQ,IAAI,KAAK,CAAC,OAAO,IAAI,EAAE,EAAE;AACjC,YAAY,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;AACrD,YAAY,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC3D,YAAY,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAC9B,SAAS;AACT,KAAK;AACJ,IACG,wBAAK,GAAL,UAAM,OAAoB;AAC9B,QAAQ,OAAO,CAAC,KAAK,EAAE,CAAC;AACxB,KAAK;AACJ,IACG,8BAAW,GAAX;AAAc,QACV,IAAI,IAAI,CAAC,YAAY,EAAE;AAC/B,YAAY,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;AAC5C,SAAS;AACT,KAAK;AACJ;AAIiC,gBA/CP,UAAU;AAAI,gBAAsB,eAAe;AAAG;AACxE,IAnBIA;AAAeA,QAAvB,KAAK,EAAE;AAAC,oDAAuB;AAEpC,IAAaA;AAAeA,QAAvB,KAAK,EAAE;AAAC,4CAAe;AAC3B,IACYA;AACVA,QADE,KAAK,EAAE;AAAC,2CAAW;AACvB,IACYA;AAAeA,QAAvB,KAAK,EAAE;AAAC,gDAAmB;AAC/B,IA8BGA;AAAeA,QADd,KAAK,EAAE;AACZ,4CAKK;IA5CQ,QAAQ,0BApBpB,SAAS,CAAC,cACP,QAAQ,EAAE,YAAY,cACtB,QAAQ,EAAE;;;;8FAeT,cACD,eAAe,EAAE,uBAAuB,CAAC,OAAO,UACnD,CAAC,QACW;GAAQ,CAgEpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBACD;AACA,IAFA,eAAC;AAED,CAlEA,IAgEC;AACD;AAEqC,IAIrC;AAA4B,KAAG;IAAlB,cAAc,0BAL1B,QAAQ,CAAC,cACN;CAAO,EAAE,CAAC,YAAY,EAAC,WAAW,CAAC,cACnC,OAAO,EAAE,CAAC,QAAQ,CAAC,cACnB,YAAY,EAAE,CAAC,QAAQ,CAAC,UAC3B,CAAC,QACW,cAAc,CAAI;;;;;;;;;gDAAC;AAAC,IAAH,qBAAC;AAAE,CAAjC;AAAK;AClGL;AACA;AACA,GAAG;AACH;AACA;AACwB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class TerminalService {\n    \n    private commandSource = new Subject<string>();\n    private responseSource = new Subject<string>();\n    \n    commandHandler = this.commandSource.asObservable();\n    responseHandler = this.responseSource.asObservable();\n    \n    sendCommand(command: string) {\n        if (command) {\n            this.commandSource.next(command);\n        }\n    }\n    \n    sendResponse(response: string) {\n        if (response) {\n            this.responseSource.next(response);\n        }\n    }\n}","import {NgModule,Component,AfterViewInit,AfterViewChecked,OnDestroy,Input,ElementRef,ChangeDetectionStrategy} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\nimport {TerminalService} from './terminalservice';\nimport {Subscription}   from 'rxjs';\n\n@Component({\n    selector: 'p-terminal',\n    template: `\n        <div [ngClass]=\"'ui-terminal ui-widget ui-widget-content ui-corner-all'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"focus(in)\">\n            <div *ngIf=\"welcomeMessage\">{{welcomeMessage}}</div>\n            <div class=\"ui-terminal-content\">\n                <div *ngFor=\"let command of commands\">\n                    <span>{{prompt}}</span>\n                    <span class=\"ui-terminal-command\">{{command.text}}</span>\n                    <div>{{command.response}}</div>\n                </div>\n            </div>\n            <div>\n                <span class=\"ui-terminal-content-prompt\">{{prompt}}</span>\n                <input #in type=\"text\" [(ngModel)]=\"command\" class=\"ui-terminal-input\" autocomplete=\"off\" (keydown)=\"handleCommand($event)\" autofocus>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Terminal implements AfterViewInit,AfterViewChecked,OnDestroy {\n\n    @Input() welcomeMessage: string;\n\n    @Input() prompt: string;\n        \n    @Input() style: any;\n        \n    @Input() styleClass: string;\n            \n    commands: any[] = [];\n    \n    command: string;\n    \n    container: Element;\n    \n    commandProcessed: boolean;\n    \n    subscription: Subscription;\n    \n    constructor(public el: ElementRef, public terminalService: TerminalService) {\n        this.subscription = terminalService.responseHandler.subscribe(response => {\n            this.commands[this.commands.length - 1].response = response;\n            this.commandProcessed = true;\n        });\n    }\n    \n    ngAfterViewInit() {\n        this.container = DomHandler.find(this.el.nativeElement, '.ui-terminal')[0];\n    }\n    \n    ngAfterViewChecked() {\n        if (this.commandProcessed) {\n            this.container.scrollTop = this.container.scrollHeight;\n            this.commandProcessed = false;\n        }\n    }\n                \n    @Input()\n    set response(value: string) {\n        if (value) {\n            this.commands[this.commands.length - 1].response = value;\n            this.commandProcessed = true;\n        }\n    }\n    \n    handleCommand(event: KeyboardEvent) {\n        if (event.keyCode == 13) {\n            this.commands.push({text: this.command});\n            this.terminalService.sendCommand(this.command);\n            this.command = '';\n        }\n    }\n    \n    focus(element: HTMLElement) {\n        element.focus();\n    }\n    \n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    \n}\n\n@NgModule({\n    imports: [CommonModule,FormsModule],\n    exports: [Terminal],\n    declarations: [Terminal]\n})\nexport class TerminalModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}