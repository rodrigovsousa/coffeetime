{"version":3,"file":"primeng-tree.js","sources":["ng:/primeng/tree/tree.ts","ng:/primeng/tree/primeng-tree.ts"],"names":[],"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","sourcesContent":["import {NgModule,Component,Input,AfterContentInit,OnDestroy,Output,EventEmitter,OnInit,OnChanges,\n    ContentChildren,QueryList,TemplateRef,Inject,ElementRef,forwardRef,ChangeDetectionStrategy,SimpleChanges} from '@angular/core';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {Optional} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TreeNode} from 'primeng/api';\nimport {SharedModule} from 'primeng/api';\nimport {PrimeTemplate} from 'primeng/api';\nimport {TreeDragDropService} from 'primeng/api';\nimport {Subscription} from 'rxjs';\nimport {BlockableUI} from 'primeng/api';\nimport {ObjectUtils} from 'primeng/utils';\nimport {DomHandler} from 'primeng/dom';\n\n@Component({\n    selector: 'p-treeNode',\n    template: `\n        <ng-template [ngIf]=\"node\">\n            <li *ngIf=\"tree.droppableNodes\" class=\"ui-treenode-droppoint\" [ngClass]=\"{'ui-treenode-droppoint-active ui-state-highlight':draghoverPrev}\"\n            (drop)=\"onDropPoint($event,-1)\" (dragover)=\"onDropPointDragOver($event)\" (dragenter)=\"onDropPointDragEnter($event,-1)\" (dragleave)=\"onDropPointDragLeave($event)\"></li>\n            <li *ngIf=\"!tree.horizontal\" role=\"treeitem\" [ngClass]=\"['ui-treenode',node.styleClass||'', isLeaf() ? 'ui-treenode-leaf': '']\">\n                <div class=\"ui-treenode-content\" [style.paddingLeft]=\"(level * 1.5)  + 'em'\" (click)=\"onNodeClick($event)\" (contextmenu)=\"onNodeRightClick($event)\" (touchend)=\"onNodeTouchEnd()\"\n                    (drop)=\"onDropNode($event)\" (dragover)=\"onDropNodeDragOver($event)\" (dragenter)=\"onDropNodeDragEnter($event)\" (dragleave)=\"onDropNodeDragLeave($event)\"\n                    [draggable]=\"tree.draggableNodes\" (dragstart)=\"onDragStart($event)\" (dragend)=\"onDragStop($event)\" [attr.tabindex]=\"0\"\n                    [ngClass]=\"{'ui-treenode-selectable':tree.selectionMode && node.selectable !== false,'ui-treenode-dragover':draghoverNode, 'ui-treenode-content-selected':isSelected()}\"\n                    (keydown)=\"onKeyDown($event)\" [attr.aria-posinset]=\"this.index + 1\" [attr.aria-expanded]=\"this.node.expanded\" [attr.aria-selected]=\"isSelected()\" [attr.aria-label]=\"node.label\">\n                    <span *ngIf=\"!isLeaf()\" class=\"ui-tree-toggler pi ui-unselectable-text\" [ngClass]=\"{'pi-caret-right':!node.expanded,'pi-caret-down':node.expanded}\" (click)=\"toggle($event)\"></span\n                    ><div class=\"ui-chkbox\" *ngIf=\"tree.selectionMode == 'checkbox'\" [attr.aria-checked]=\"isSelected()\"><div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\" [ngClass]=\"{'ui-state-disabled': node.selectable === false}\">\n                        <span class=\"ui-chkbox-icon ui-clickable pi\"\n                            [ngClass]=\"{'pi-check':isSelected(),'pi-minus':node.partialSelected}\"></span></div></div\n                    ><span [class]=\"getIcon()\" *ngIf=\"node.icon||node.expandedIcon||node.collapsedIcon\"></span\n                    ><span class=\"ui-treenode-label ui-corner-all\"\n                        [ngClass]=\"{'ui-state-highlight':isSelected()}\">\n                            <span *ngIf=\"!tree.getTemplateForNode(node)\">{{node.label}}</span>\n                            <span *ngIf=\"tree.getTemplateForNode(node)\">\n                                <ng-container *ngTemplateOutlet=\"tree.getTemplateForNode(node); context: {$implicit: node}\"></ng-container>\n                            </span>\n                    </span>\n                </div>\n                <ul class=\"ui-treenode-children\" style=\"display: none;\" *ngIf=\"!tree.virtualScroll && node.children && node.expanded\" [style.display]=\"node.expanded ? 'block' : 'none'\" role=\"group\">\n                    <p-treeNode *ngFor=\"let childNode of node.children;let firstChild=first;let lastChild=last; let index=index; trackBy: tree.trackBy\" [node]=\"childNode\" [parentNode]=\"node\"\n                        [firstChild]=\"firstChild\" [lastChild]=\"lastChild\" [index]=\"index\" [style.height.px]=\"tree.virtualNodeHeight\" [level]=\"level + 1\"></p-treeNode>\n                </ul>\n            </li>\n            <li *ngIf=\"tree.droppableNodes&&lastChild\" class=\"ui-treenode-droppoint\" [ngClass]=\"{'ui-treenode-droppoint-active ui-state-highlight':draghoverNext}\"\n            (drop)=\"onDropPoint($event,1)\" (dragover)=\"onDropPointDragOver($event)\" (dragenter)=\"onDropPointDragEnter($event,1)\" (dragleave)=\"onDropPointDragLeave($event)\"></li>\n            <table *ngIf=\"tree.horizontal\" [class]=\"node.styleClass\">\n                <tbody>\n                    <tr>\n                        <td class=\"ui-treenode-connector\" *ngIf=\"!root\">\n                            <table class=\"ui-treenode-connector-table\">\n                                <tbody>\n                                    <tr>\n                                        <td [ngClass]=\"{'ui-treenode-connector-line':!firstChild}\"></td>\n                                    </tr>\n                                    <tr>\n                                        <td [ngClass]=\"{'ui-treenode-connector-line':!lastChild}\"></td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </td>\n                        <td class=\"ui-treenode\" [ngClass]=\"{'ui-treenode-collapsed':!node.expanded}\">\n                            <div class=\"ui-treenode-content ui-state-default ui-corner-all\" tabindex=\"0\"\n                                [ngClass]=\"{'ui-treenode-selectable':tree.selectionMode,'ui-state-highlight':isSelected()}\" (click)=\"onNodeClick($event)\" (contextmenu)=\"onNodeRightClick($event)\"\n                                (touchend)=\"onNodeTouchEnd()\" (keydown)=\"onNodeKeydown($event)\">\n                                <span class=\"ui-tree-toggler pi pi-fw ui-unselectable-text\" [ngClass]=\"{'pi-plus':!node.expanded,'pi-minus':node.expanded}\" *ngIf=\"!isLeaf()\"\n                                        (click)=\"toggle($event)\"></span\n                                ><span [class]=\"getIcon()\" *ngIf=\"node.icon||node.expandedIcon||node.collapsedIcon\"></span\n                                ><span class=\"ui-treenode-label ui-corner-all\">\n                                        <span *ngIf=\"!tree.getTemplateForNode(node)\">{{node.label}}</span>\n                                        <span *ngIf=\"tree.getTemplateForNode(node)\">\n                                        <ng-container *ngTemplateOutlet=\"tree.getTemplateForNode(node); context: {$implicit: node}\"></ng-container>\n                                        </span>\n                                </span>\n                            </div>\n                        </td>\n                        <td class=\"ui-treenode-children-container\" *ngIf=\"node.children && node.expanded\" [style.display]=\"node.expanded ? 'table-cell' : 'none'\">\n                            <div class=\"ui-treenode-children\">\n                                <p-treeNode *ngFor=\"let childNode of node.children;let firstChild=first;let lastChild=last; trackBy: tree.trackBy\" [node]=\"childNode\"\n                                        [firstChild]=\"firstChild\" [lastChild]=\"lastChild\"></p-treeNode>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </ng-template>\n    `\n})\nexport class UITreeNode implements OnInit {\n\n    static ICON_CLASS: string = 'ui-treenode-icon ';\n\n    @Input() rowNode: any;\n\n    @Input() node: TreeNode;\n\n    @Input() parentNode: TreeNode;\n\n    @Input() root: boolean;\n\n    @Input() index: number;\n\n    @Input() firstChild: boolean;\n\n    @Input() lastChild: boolean;\n\n    @Input() level: number;\n\n    tree: Tree;\n\n    constructor(@Inject(forwardRef(() => Tree)) tree) {\n        this.tree = tree as Tree;\n    }\n\n    draghoverPrev: boolean;\n\n    draghoverNext: boolean;\n\n    draghoverNode: boolean\n\n    ngOnInit() {\n        this.node.parent = this.parentNode;\n\n        if (this.parentNode) {\n            this.tree.syncNodeOption(this.node, this.tree.value, 'parent', this.tree.getNodeWithKey(this.parentNode.key, this.tree.value));\n        }\n    }\n\n    getIcon() {\n        let icon: string;\n\n        if (this.node.icon)\n            icon = this.node.icon;\n        else\n            icon = this.node.expanded && this.node.children && this.node.children.length ? this.node.expandedIcon : this.node.collapsedIcon;\n\n        return UITreeNode.ICON_CLASS + ' ' + icon;\n    }\n\n    isLeaf() {\n        return this.tree.isNodeLeaf(this.node);\n    }\n\n    toggle(event: Event) {\n        if (this.node.expanded)\n            this.collapse(event);\n        else\n            this.expand(event);\n    }\n\n    expand(event: Event) {\n        this.node.expanded = true;\n        if (this.tree.virtualScroll) {\n            this.tree.updateSerializedValue();\n        }\n        this.tree.onNodeExpand.emit({originalEvent: event, node: this.node});\n    }\n\n    collapse(event: Event) {\n        this.node.expanded = false;\n        if (this.tree.virtualScroll) {\n            this.tree.updateSerializedValue();\n        }\n        this.tree.onNodeCollapse.emit({originalEvent: event, node: this.node});\n    }\n\n    onNodeClick(event: MouseEvent) {\n        this.tree.onNodeClick(event, this.node);\n    }\n\n    onNodeKeydown(event: KeyboardEvent) {\n        if (event.which === 13) {\n            this.tree.onNodeClick(event, this.node);\n        }\n    }\n\n    onNodeTouchEnd() {\n        this.tree.onNodeTouchEnd();\n    }\n\n    onNodeRightClick(event: MouseEvent) {\n        this.tree.onNodeRightClick(event, this.node);\n    }\n\n    isSelected() {\n        return this.tree.isSelected(this.node);\n    }\n\n    onDropPoint(event: Event, position: number) {\n        event.preventDefault();\n        let dragNode = this.tree.dragNode;\n        let dragNodeIndex = this.tree.dragNodeIndex;\n        let dragNodeScope = this.tree.dragNodeScope;\n        let isValidDropPointIndex = this.tree.dragNodeTree === this.tree ? (position === 1 || dragNodeIndex !== this.index - 1) : true;\n\n        if (this.tree.allowDrop(dragNode, this.node, dragNodeScope) && isValidDropPointIndex) {\n            let dropParams = {...this.createDropPointEventMetadata(position)};\n\n            if (this.tree.validateDrop) {\n                this.tree.onNodeDrop.emit({\n                    originalEvent: event,\n                    dragNode: dragNode,\n                    dropNode: this.node,\n                    dropIndex: this.index,\n                    accept: () => {\n                        this.processPointDrop(dropParams);\n                    }\n                });\n            }\n            else {\n                this.processPointDrop(dropParams);\n                this.tree.onNodeDrop.emit({\n                    originalEvent: event,\n                    dragNode: dragNode,\n                    dropNode: this.node,\n                    dropIndex: this.index\n                });\n            }\n        }\n\n        this.draghoverPrev = false;\n        this.draghoverNext = false;\n    }\n\n    processPointDrop(event) {\n        let newNodeList = event.dropNode.parent ? event.dropNode.parent.children : this.tree.value;\n        event.dragNodeSubNodes.splice(event.dragNodeIndex, 1);\n        let dropIndex = this.index;\n\n        if (event.position < 0) {\n            dropIndex = (event.dragNodeSubNodes === newNodeList) ? ((event.dragNodeIndex > event.index) ? event.index : event.index - 1) : event.index;\n            newNodeList.splice(dropIndex, 0, event.dragNode);\n        }\n        else {\n            dropIndex = newNodeList.length;\n            newNodeList.push(event.dragNode);\n        }\n\n        this.tree.dragDropService.stopDrag({\n            node: event.dragNode,\n            subNodes: event.dropNode.parent ? event.dropNode.parent.children : this.tree.value,\n            index: event.dragNodeIndex\n        });\n    }\n\n    createDropPointEventMetadata(position) {\n        return {\n            dragNode: this.tree.dragNode,\n            dragNodeIndex:  this.tree.dragNodeIndex,\n            dragNodeSubNodes: this.tree.dragNodeSubNodes,\n            dropNode: this.node,\n            index: this.index,\n            position: position\n        };\n    }\n\n    onDropPointDragOver(event) {\n        event.dataTransfer.dropEffect = 'move';\n        event.preventDefault();\n    }\n\n    onDropPointDragEnter(event: Event, position: number) {\n        if (this.tree.allowDrop(this.tree.dragNode, this.node, this.tree.dragNodeScope)) {\n            if (position < 0)\n                this.draghoverPrev = true;\n            else\n                this.draghoverNext = true;\n        }\n    }\n\n    onDropPointDragLeave(event: Event) {\n        this.draghoverPrev = false;\n        this.draghoverNext = false;\n    }\n\n    onDragStart(event) {\n        if (this.tree.draggableNodes && this.node.draggable !== false) {\n            event.dataTransfer.setData(\"text\", \"data\");\n\n            this.tree.dragDropService.startDrag({\n                tree: this,\n                node: this.node,\n                subNodes: this.node.parent ? this.node.parent.children : this.tree.value,\n                index: this.index,\n                scope: this.tree.draggableScope\n            });\n        }\n        else {\n            event.preventDefault();\n        }\n    }\n\n    onDragStop(event) {\n        this.tree.dragDropService.stopDrag({\n            node: this.node,\n            subNodes: this.node.parent ? this.node.parent.children : this.tree.value,\n            index: this.index\n        });\n    }\n\n    onDropNodeDragOver(event) {\n        event.dataTransfer.dropEffect = 'move';\n        if (this.tree.droppableNodes) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    onDropNode(event) {\n        if (this.tree.droppableNodes && this.node.droppable !== false) {\n            event.preventDefault();\n            event.stopPropagation();\n            let dragNode = this.tree.dragNode;\n\n            if (this.tree.allowDrop(dragNode, this.node, this.tree.dragNodeScope)) {\n                let dropParams = {...this.createDropNodeEventMetadata()};\n\n                if (this.tree.validateDrop) {\n                    this.tree.onNodeDrop.emit({\n                        originalEvent: event,\n                        dragNode: dragNode,\n                        dropNode: this.node,\n                        index: this.index,\n                        accept: () => {\n                            this.processNodeDrop(dropParams);\n                        }\n                    });\n                }\n                else {\n                    this.processNodeDrop(dropParams);\n                    this.tree.onNodeDrop.emit({\n                        originalEvent: event,\n                        dragNode: dragNode,\n                        dropNode: this.node,\n                        index: this.index\n                    });\n                }\n            }\n        }\n\n        this.draghoverNode = false;\n    }\n\n    createDropNodeEventMetadata() {\n        return {\n            dragNode: this.tree.dragNode,\n            dragNodeIndex:  this.tree.dragNodeIndex,\n            dragNodeSubNodes: this.tree.dragNodeSubNodes,\n            dropNode: this.node\n        };\n    }\n\n    processNodeDrop(event) {\n        let dragNodeIndex = event.dragNodeIndex;\n        event.dragNodeSubNodes.splice(dragNodeIndex, 1);\n\n        if (event.dropNode.children)\n            event.dropNode.children.push(event.dragNode);\n        else\n            event.dropNode.children = [event.dragNode];\n\n        this.tree.dragDropService.stopDrag({\n            node: event.dragNode,\n            subNodes: event.dropNode.parent ? event.dropNode.parent.children : this.tree.value,\n            index: dragNodeIndex\n        });\n\n\n    }\n\n    onDropNodeDragEnter(event) {\n        if (this.tree.droppableNodes && this.node.droppable !== false && this.tree.allowDrop(this.tree.dragNode, this.node, this.tree.dragNodeScope)) {\n            this.draghoverNode = true;\n        }\n    }\n\n    onDropNodeDragLeave(event) {\n        if (this.tree.droppableNodes) {\n            let rect = event.currentTarget.getBoundingClientRect();\n            if (event.x > rect.left + rect.width || event.x < rect.left || event.y >= Math.floor(rect.top + rect.height) || event.y < rect.top) {\n               this.draghoverNode = false;\n            }\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        const nodeElement = (<HTMLDivElement> event.target).parentElement.parentElement;\n\n        if (nodeElement.nodeName !== 'P-TREENODE') {\n            return;\n        }\n\n        switch (event.which) {\n            //down arrow\n            case 40:\n                const listElement = (this.tree.droppableNodes) ? nodeElement.children[1].children[1] : nodeElement.children[0].children[1];\n                if (listElement && listElement.children.length > 0) {\n                    this.focusNode(listElement.children[0]);\n                }\n                else {\n                    const nextNodeElement = nodeElement.nextElementSibling;\n                    if (nextNodeElement) {\n                        this.focusNode(nextNodeElement);\n                    }\n                    else {\n                        let nextSiblingAncestor = this.findNextSiblingOfAncestor(nodeElement);\n                        if (nextSiblingAncestor) {\n                            this.focusNode(nextSiblingAncestor);\n                        }\n                    }\n                }\n\n                event.preventDefault();\n            break;\n\n            //up arrow\n            case 38:\n                if (nodeElement.previousElementSibling) {\n                    this.focusNode(this.findLastVisibleDescendant(nodeElement.previousElementSibling));\n                }\n                else {\n                    let parentNodeElement = this.getParentNodeElement(nodeElement);\n                    if (parentNodeElement) {\n                        this.focusNode(parentNodeElement);\n                    }\n                }\n\n                event.preventDefault();\n            break;\n\n            //right arrow\n            case 39:\n                if (!this.node.expanded && !this.tree.isNodeLeaf(this.node)) {\n                    this.expand(event);\n                }\n\n                event.preventDefault();\n            break;\n\n            //left arrow\n            case 37:\n                if (this.node.expanded) {\n                    this.collapse(event);\n                }\n                else {\n                    let parentNodeElement = this.getParentNodeElement(nodeElement);\n                    if (parentNodeElement) {\n                        this.focusNode(parentNodeElement);\n                    }\n                }\n\n                event.preventDefault();\n            break;\n\n            //enter\n            case 13:\n                this.tree.onNodeClick(event, this.node);\n                event.preventDefault();\n            break;\n\n            default:\n                //no op\n            break;\n        }\n    }\n\n    findNextSiblingOfAncestor(nodeElement) {\n        let parentNodeElement = this.getParentNodeElement(nodeElement);\n        if (parentNodeElement) {\n            if (parentNodeElement.nextElementSibling)\n                return parentNodeElement.nextElementSibling;\n            else\n                return this.findNextSiblingOfAncestor(parentNodeElement);\n        }\n        else {\n            return null;\n        }\n    }\n\n    findLastVisibleDescendant(nodeElement) {\n        const listElement = <HTMLElement> Array.from(nodeElement.children).find(el => DomHandler.hasClass(el, 'ui-treenode'));\n        const childrenListElement = listElement.children[1];\n        if (childrenListElement && childrenListElement.children.length > 0) {\n            const lastChildElement = childrenListElement.children[childrenListElement.children.length - 1];\n\n            return this.findLastVisibleDescendant(lastChildElement);\n        }\n        else {\n            return nodeElement;\n        }\n    }\n\n    getParentNodeElement(nodeElement) {\n        const parentNodeElement = nodeElement.parentElement.parentElement.parentElement;\n\n        return parentNodeElement.tagName === 'P-TREENODE' ? parentNodeElement : null;\n    }\n\n    focusNode(element) {\n        if (this.tree.droppableNodes)\n            element.children[1].children[0].focus();\n        else\n            element.children[0].children[0].focus();\n    }\n}\n\n@Component({\n    selector: 'p-tree',\n    template: `\n        <div [ngClass]=\"{'ui-tree ui-widget ui-widget-content ui-corner-all':true,'ui-tree-selectable':selectionMode,\n                'ui-treenode-dragover':dragHover,'ui-tree-loading': loading, 'ui-tree-flex-scrollable': scrollHeight === 'flex'}\" \n            [ngStyle]=\"style\" [class]=\"styleClass\" *ngIf=\"!horizontal\"\n            (drop)=\"onDrop($event)\" (dragover)=\"onDragOver($event)\" (dragenter)=\"onDragEnter($event)\" (dragleave)=\"onDragLeave($event)\">\n            <div class=\"ui-tree-loading-mask ui-widget-overlay\" *ngIf=\"loading\"></div>\n            <div class=\"ui-tree-loading-content\" *ngIf=\"loading\">\n                <i [class]=\"'ui-tree-loading-icon pi-spin ' + loadingIcon\"></i>\n            </div>\n            <div *ngIf=\"filter\" class=\"ui-tree-filter-container\">\n                <input #filter type=\"text\" autocomplete=\"off\" class=\"ui-tree-filter ui-inputtext ui-widget ui-state-default ui-corner-all\" [attr.placeholder]=\"filterPlaceholder\"\n                    (keydown.enter)=\"$event.preventDefault()\" (input)=\"_filter($event)\">\n                    <span class=\"ui-tree-filter-icon pi pi-search\"></span>\n            </div>\n            <ng-container *ngIf=\"!virtualScroll; else virtualScrollList\">\n                <div class=\"ui-tree-wrapper\" [style.max-height]=\"scrollHeight\">\n                    <ul class=\"ui-tree-container\" *ngIf=\"getRootNode()\" role=\"tree\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\">\n                        <p-treeNode *ngFor=\"let node of getRootNode(); let firstChild=first;let lastChild=last; let index=index; trackBy: trackBy\" [node]=\"node\"\n                                    [firstChild]=\"firstChild\" [lastChild]=\"lastChild\" [index]=\"index\" [level]=\"0\"></p-treeNode>\n                    </ul>\n                </div>\n            </ng-container>\n            <ng-template #virtualScrollList>\n                <cdk-virtual-scroll-viewport class=\"ui-tree-wrapper\" [style.height]=\"scrollHeight\" [itemSize]=\"virtualNodeHeight\" [minBufferPx]=\"minBufferPx\" [maxBufferPx]=\"maxBufferPx\">\n                    <ul class=\"ui-tree-container\" *ngIf=\"getRootNode()\" role=\"tree\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\">\n                        <p-treeNode *cdkVirtualFor=\"let rowNode of serializedValue; let firstChild=first; let lastChild=last; let index=index; trackBy: trackBy\"  [level]=\"rowNode.level\"\n                                    [rowNode]=\"rowNode\" [node]=\"rowNode.node\" [firstChild]=\"firstChild\" [lastChild]=\"lastChild\" [index]=\"index\" [style.height.px]=\"virtualNodeHeight\"></p-treeNode>\n                    </ul>\n                </cdk-virtual-scroll-viewport>\n            </ng-template>\n            <div class=\"ui-tree-empty-message\" *ngIf=\"!loading && (value == null || value.length === 0)\">{{emptyMessage}}</div>\n        </div>\n        <div [ngClass]=\"{'ui-tree ui-tree-horizontal ui-widget ui-widget-content ui-corner-all':true,'ui-tree-selectable':selectionMode}\"  [ngStyle]=\"style\" [class]=\"styleClass\" *ngIf=\"horizontal\">\n            <div class=\"ui-tree-loading ui-widget-overlay\" *ngIf=\"loading\"></div>\n            <div class=\"ui-tree-loading-content\" *ngIf=\"loading\">\n                <i [class]=\"'ui-tree-loading-icon pi-spin ' + loadingIcon\"></i>\n            </div>\n            <table *ngIf=\"value&&value[0]\">\n                <p-treeNode [node]=\"value[0]\" [root]=\"true\"></p-treeNode>\n            </table>\n            <div class=\"ui-tree-empty-message\" *ngIf=\"!loading && (value == null || value.length === 0)\">{{emptyMessage}}</div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Tree implements OnInit,AfterContentInit,OnChanges,OnDestroy,BlockableUI {\n\n    @Input() value: TreeNode[];\n\n    @Input() selectionMode: string;\n\n    @Input() selection: any;\n\n    @Output() selectionChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onNodeSelect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onNodeUnselect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onNodeExpand: EventEmitter<any> = new EventEmitter();\n\n    @Output() onNodeCollapse: EventEmitter<any> = new EventEmitter();\n\n    @Output() onNodeContextMenuSelect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onNodeDrop: EventEmitter<any> = new EventEmitter();\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() contextMenu: any;\n\n    @Input() layout: string = 'vertical';\n\n    @Input() draggableScope: any;\n\n    @Input() droppableScope: any;\n\n    @Input() draggableNodes: boolean;\n\n    @Input() droppableNodes: boolean;\n\n    @Input() metaKeySelection: boolean = true;\n\n    @Input() propagateSelectionUp: boolean = true;\n\n    @Input() propagateSelectionDown: boolean = true;\n\n    @Input() loading: boolean;\n\n    @Input() loadingIcon: string = 'pi pi-spinner';\n\n    @Input() emptyMessage: string = 'No records found';\n\n    @Input() ariaLabel: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() validateDrop: boolean;\n\n    @Input() filter: boolean;\n\n    @Input() filterBy: string = 'label';\n\n    @Input() filterMode: string = 'lenient';\n\n    @Input() filterPlaceholder: string;\n\n    @Input() filterLocale: string;\n\n    @Input() scrollHeight: string;\n\n    @Input() virtualScroll: boolean;\n\n    @Input() virtualNodeHeight: string;\n\n    @Input() minBufferPx: number;\n\n    @Input() maxBufferPx: number;\n\n    @Input() trackBy: Function = (index: number, item: any) => item;\n\n    @Output() onFilter: EventEmitter<any> = new EventEmitter();\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    serializedValue: any[];\n\n    public templateMap: any;\n\n    public nodeTouched: boolean;\n\n    public dragNodeTree: Tree;\n\n    public dragNode: TreeNode;\n\n    public dragNodeSubNodes: TreeNode[];\n\n    public dragNodeIndex: number;\n\n    public dragNodeScope: any;\n\n    public dragHover: boolean;\n\n    public dragStartSubscription: Subscription;\n\n    public dragStopSubscription: Subscription;\n\n    public filteredNodes: TreeNode[];\n\n    constructor(public el: ElementRef, @Optional() public dragDropService: TreeDragDropService) {}\n\n    ngOnInit() {\n        if (this.droppableNodes) {\n            this.dragStartSubscription = this.dragDropService.dragStart$.subscribe(\n              event => {\n                this.dragNodeTree = event.tree;\n                this.dragNode = event.node;\n                this.dragNodeSubNodes = event.subNodes;\n                this.dragNodeIndex = event.index;\n                this.dragNodeScope = event.scope;\n            });\n\n            this.dragStopSubscription = this.dragDropService.dragStop$.subscribe(\n              event => {\n                this.dragNodeTree = null;\n                this.dragNode = null;\n                this.dragNodeSubNodes = null;\n                this.dragNodeIndex = null;\n                this.dragNodeScope = null;\n                this.dragHover = false;\n            });\n        }\n    }\n\n    ngOnChanges(simpleChange: SimpleChanges) {\n        if (simpleChange.value) {\n            this.updateSerializedValue();\n        }\n    }\n\n    get horizontal(): boolean {\n        return this.layout == 'horizontal';\n    }\n\n    ngAfterContentInit() {\n        if (this.templates.length) {\n            this.templateMap = {};\n        }\n\n        this.templates.forEach((item) => {\n            this.templateMap[item.name] = item.template;\n        });\n    }\n\n    updateSerializedValue() {\n        this.serializedValue = [];\n        this.serializeNodes(null, this.getRootNode(), 0, true);\n    }\n\n    serializeNodes(parent, nodes, level, visible) {\n        if (nodes && nodes.length) {\n            for(let node of nodes) {\n                node.parent = parent;\n                const rowNode = {\n                    node: node,\n                    parent: parent,\n                    level: level,\n                    visible: visible && (parent ? parent.expanded : true)\n                };\n                this.serializedValue.push(rowNode);\n\n                if (rowNode.visible && node.expanded) {\n                    this.serializeNodes(node, node.children, level + 1, rowNode.visible);\n                }\n            }\n        }\n    }\n\n    onNodeClick(event, node: TreeNode) {\n        let eventTarget = (<Element> event.target);\n\n        if (DomHandler.hasClass(eventTarget, 'ui-tree-toggler')) {\n            return;\n        }\n        else if (this.selectionMode) {\n            if (node.selectable === false) {\n                return;\n            }\n\n            if (this.hasFilteredNodes()) {\n                node = this.getNodeWithKey(node.key, this.value);\n\n                if (!node) {\n                    return;\n                }\n            }\n\n            let index = this.findIndexInSelection(node);\n            let selected = (index >= 0);\n\n            if (this.isCheckboxSelectionMode()) {\n                if (selected) {\n                    if (this.propagateSelectionDown)\n                        this.propagateDown(node, false);\n                    else\n                        this.selection = this.selection.filter((val,i) => i!=index);\n\n                    if (this.propagateSelectionUp && node.parent) {\n                        this.propagateUp(node.parent, false);\n                    }\n\n                    this.selectionChange.emit(this.selection);\n                    this.onNodeUnselect.emit({originalEvent: event, node: node});\n                }\n                else {\n                    if (this.propagateSelectionDown)\n                        this.propagateDown(node, true);\n                    else\n                        this.selection = [...this.selection||[],node];\n\n                    if (this.propagateSelectionUp && node.parent) {\n                        this.propagateUp(node.parent, true);\n                    }\n\n                    this.selectionChange.emit(this.selection);\n                    this.onNodeSelect.emit({originalEvent: event, node: node});\n                }\n            }\n            else {\n                let metaSelection = this.nodeTouched ? false : this.metaKeySelection;\n\n                if (metaSelection) {\n                    let metaKey = (event.metaKey||event.ctrlKey);\n\n                    if (selected && metaKey) {\n                        if (this.isSingleSelectionMode()) {\n                            this.selectionChange.emit(null);\n                        }\n                        else {\n                            this.selection = this.selection.filter((val,i) => i!=index);\n                            this.selectionChange.emit(this.selection);\n                        }\n\n                        this.onNodeUnselect.emit({originalEvent: event, node: node});\n                    }\n                    else {\n                        if (this.isSingleSelectionMode()) {\n                            this.selectionChange.emit(node);\n                        }\n                        else if (this.isMultipleSelectionMode()) {\n                            this.selection = (!metaKey) ? [] : this.selection||[];\n                            this.selection = [...this.selection,node];\n                            this.selectionChange.emit(this.selection);\n                        }\n\n                        this.onNodeSelect.emit({originalEvent: event, node: node});\n                    }\n                }\n                else {\n                    if (this.isSingleSelectionMode()) {\n                        if (selected) {\n                            this.selection = null;\n                            this.onNodeUnselect.emit({originalEvent: event, node: node});\n                        }\n                        else {\n                            this.selection = node;\n                            this.onNodeSelect.emit({originalEvent: event, node: node});\n                        }\n                    }\n                    else {\n                        if (selected) {\n                            this.selection = this.selection.filter((val,i) => i!=index);\n                            this.onNodeUnselect.emit({originalEvent: event, node: node});\n                        }\n                        else {\n                            this.selection = [...this.selection||[],node];\n                            this.onNodeSelect.emit({originalEvent: event, node: node});\n                        }\n                    }\n\n                    this.selectionChange.emit(this.selection);\n                }\n            }\n        }\n\n        this.nodeTouched = false;\n    }\n\n    onNodeTouchEnd() {\n        this.nodeTouched = true;\n    }\n\n    onNodeRightClick(event: MouseEvent, node: TreeNode) {\n        if (this.contextMenu) {\n            let eventTarget = (<Element> event.target);\n\n            if (eventTarget.className && eventTarget.className.indexOf('ui-tree-toggler') === 0) {\n                return;\n            }\n            else {\n                let index = this.findIndexInSelection(node);\n                let selected = (index >= 0);\n\n                if (!selected) {\n                    if (this.isSingleSelectionMode())\n                        this.selectionChange.emit(node);\n                    else\n                        this.selectionChange.emit([node]);\n                }\n\n                this.contextMenu.show(event);\n                this.onNodeContextMenuSelect.emit({originalEvent: event, node: node});\n            }\n        }\n    }\n\n    findIndexInSelection(node: TreeNode) {\n        let index: number = -1;\n\n        if (this.selectionMode && this.selection) {\n            if (this.isSingleSelectionMode()) {\n                let areNodesEqual = (this.selection.key && this.selection.key === node.key) || this.selection == node;\n                index = areNodesEqual ? 0 : - 1;\n            }\n            else {\n                for(let i = 0; i  < this.selection.length; i++) {\n                    let selectedNode = this.selection[i];\n                    let areNodesEqual = (selectedNode.key && selectedNode.key === node.key) || selectedNode == node;\n                    if (areNodesEqual) {\n                        index = i;\n                        break;\n                    }\n                }\n            }\n        }\n\n        return index;\n    }\n\n    syncNodeOption(node, parentNodes, option, value?: any) {\n        // to synchronize the node option between the filtered nodes and the original nodes(this.value)\n        const _node = this.hasFilteredNodes() ? this.getNodeWithKey(node.key, parentNodes) : null;\n        if (_node) {\n            _node[option] = value||node[option];\n        }\n    }\n\n    hasFilteredNodes() {\n        return this.filter && this.filteredNodes && this.filteredNodes.length;\n    }\n\n    getNodeWithKey(key: string, nodes: TreeNode[]) {\n        for (let node of nodes) {\n            if (node.key === key) {\n                return node;\n            }\n\n            if (node.children) {\n                let matchedNode = this.getNodeWithKey(key, node.children);\n                if (matchedNode) {\n                    return matchedNode;\n                }\n            }\n        }\n    }\n\n    propagateUp(node: TreeNode, select: boolean) {\n        if (node.children && node.children.length) {\n            let selectedCount: number = 0;\n            let childPartialSelected: boolean = false;\n            for(let child of node.children) {\n                if (this.isSelected(child)) {\n                    selectedCount++;\n                }\n                else if (child.partialSelected) {\n                    childPartialSelected = true;\n                }\n            }\n\n            if (select && selectedCount == node.children.length) {\n                this.selection = [...this.selection||[],node];\n                node.partialSelected = false;\n            }\n            else {\n                if (!select) {\n                    let index = this.findIndexInSelection(node);\n                    if (index >= 0) {\n                        this.selection = this.selection.filter((val,i) => i!=index);\n                    }\n                }\n\n                if (childPartialSelected || selectedCount > 0 && selectedCount != node.children.length)\n                    node.partialSelected = true;\n                else\n                    node.partialSelected = false;\n            }\n\n            this.syncNodeOption(node, this.filteredNodes, 'partialSelected');\n        }\n\n        let parent = node.parent;\n        if (parent) {\n            this.propagateUp(parent, select);\n        }\n    }\n\n    propagateDown(node: TreeNode, select: boolean) {\n        let index = this.findIndexInSelection(node);\n\n        if (select && index == -1) {\n            this.selection = [...this.selection||[],node];\n        }\n        else if (!select && index > -1) {\n            this.selection = this.selection.filter((val,i) => i!=index);\n        }\n\n        node.partialSelected = false;\n\n        this.syncNodeOption(node, this.filteredNodes, 'partialSelected');\n\n        if (node.children && node.children.length) {\n            for(let child of node.children) {\n                this.propagateDown(child, select);\n            }\n        }\n    }\n\n    isSelected(node: TreeNode) {\n        return this.findIndexInSelection(node) != -1;\n    }\n\n    isSingleSelectionMode() {\n        return this.selectionMode && this.selectionMode == 'single';\n    }\n\n    isMultipleSelectionMode() {\n        return this.selectionMode && this.selectionMode == 'multiple';\n    }\n\n    isCheckboxSelectionMode() {\n        return this.selectionMode && this.selectionMode == 'checkbox';\n    }\n\n    isNodeLeaf(node) {\n        return node.leaf == false ? false : !(node.children && node.children.length);\n    }\n\n    getRootNode() {\n        return this.filteredNodes ? this.filteredNodes : this.value;\n    }\n\n    getTemplateForNode(node: TreeNode): TemplateRef<any> {\n        if (this.templateMap)\n            return node.type ? this.templateMap[node.type] : this.templateMap['default'];\n        else\n            return null;\n    }\n\n    onDragOver(event) {\n        if (this.droppableNodes && (!this.value || this.value.length === 0)) {\n            event.dataTransfer.dropEffect = 'move';\n            event.preventDefault();\n        }\n    }\n\n    onDrop(event) {\n        if (this.droppableNodes && (!this.value || this.value.length === 0)) {\n            event.preventDefault();\n            let dragNode = this.dragNode;\n            if (this.allowDrop(dragNode, null, this.dragNodeScope)) {\n                let dragNodeIndex = this.dragNodeIndex;\n                this.dragNodeSubNodes.splice(dragNodeIndex, 1);\n                this.value = this.value||[];\n                this.value.push(dragNode);\n\n                this.dragDropService.stopDrag({\n                    node: dragNode\n                });\n            }\n        }\n    }\n\n    onDragEnter(event) {\n        if (this.droppableNodes && this.allowDrop(this.dragNode, null, this.dragNodeScope)) {\n            this.dragHover = true;\n        }\n    }\n\n    onDragLeave(event) {\n        if (this.droppableNodes) {\n            let rect = event.currentTarget.getBoundingClientRect();\n            if (event.x > rect.left + rect.width || event.x < rect.left || event.y > rect.top + rect.height || event.y < rect.top) {\n               this.dragHover = false;\n            }\n        }\n    }\n\n    allowDrop(dragNode: TreeNode, dropNode: TreeNode, dragNodeScope: any): boolean {\n        if (!dragNode) {\n            //prevent random html elements to be dragged\n            return false;\n        }\n        else if (this.isValidDragScope(dragNodeScope)) {\n            let allow: boolean = true;\n            if (dropNode) {\n                if (dragNode === dropNode) {\n                    allow = false;\n                }\n                else {\n                    let parent = dropNode.parent;\n                    while(parent != null) {\n                        if (parent === dragNode) {\n                            allow = false;\n                            break;\n                        }\n                        parent = parent.parent;\n                    }\n                }\n            }\n\n            return allow;\n        }\n        else {\n            return false;\n        }\n    }\n\n    isValidDragScope(dragScope: any): boolean {\n        let dropScope = this.droppableScope;\n\n        if (dropScope) {\n            if (typeof dropScope === 'string') {\n                if (typeof dragScope === 'string')\n                    return dropScope === dragScope;\n                else if (dragScope instanceof Array)\n                    return (<Array<any>>dragScope).indexOf(dropScope) != -1;\n            }\n            else if (dropScope instanceof Array) {\n                if (typeof dragScope === 'string') {\n                    return (<Array<any>>dropScope).indexOf(dragScope) != -1;\n                }\n                else if (dragScope instanceof Array) {\n                    for(let s of dropScope) {\n                        for(let ds of dragScope) {\n                            if (s === ds) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n            }\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n\n    _filter(event) {\n        let filterValue = event.target.value;\n        if (filterValue === '') {\n            this.filteredNodes = null;\n        }\n        else {\n            this.filteredNodes = [];\n            const searchFields: string[] = this.filterBy.split(',');\n            const filterText = ObjectUtils.removeAccents(filterValue).toLocaleLowerCase(this.filterLocale);\n            const isStrictMode = this.filterMode === 'strict';\n            for(let node of this.value) {\n                let copyNode = {...node};\n                let paramsWithoutNode = {searchFields, filterText, isStrictMode};\n                if ((isStrictMode && (this.findFilteredNodes(copyNode, paramsWithoutNode) || this.isFilterMatched(copyNode, paramsWithoutNode))) ||\n                    (!isStrictMode && (this.isFilterMatched(copyNode, paramsWithoutNode) || this.findFilteredNodes(copyNode, paramsWithoutNode)))) {\n                    this.filteredNodes.push(copyNode);\n                }\n            }\n        }\n\n        this.updateSerializedValue();\n        this.onFilter.emit({\n            filter: filterValue,\n            filteredValue: this.filteredNodes\n        });\n    }\n\n    findFilteredNodes(node, paramsWithoutNode) {\n        if (node) {\n            let matched = false;\n            if (node.children) {\n                let childNodes = [...node.children];\n                node.children = [];\n                for (let childNode of childNodes) {\n                    let copyChildNode = {...childNode};\n                    if (this.isFilterMatched(copyChildNode, paramsWithoutNode)) {\n                        matched = true;\n                        node.children.push(copyChildNode);\n                    }\n                }\n            }\n\n            if (matched) {\n                node.expanded = true;\n                return true;\n            }\n        }\n    }\n\n    isFilterMatched(node, {searchFields, filterText, isStrictMode}) {\n        let matched = false;\n        for(let field of searchFields) {\n            let fieldValue = ObjectUtils.removeAccents(String(ObjectUtils.resolveFieldData(node, field))).toLocaleLowerCase(this.filterLocale);\n            if (fieldValue.indexOf(filterText) > -1) {\n                matched = true;\n            }\n        }\n\n        if (!matched || (isStrictMode && !this.isNodeLeaf(node))) {\n            matched = this.findFilteredNodes(node, {searchFields, filterText, isStrictMode}) || matched;\n        }\n\n        return matched;\n    }\n\n    getBlockableElement(): HTMLElementÂ {\n      return this.el.nativeElement.children[0];\n    }\n\n    ngOnDestroy() {\n        if (this.dragStartSubscription) {\n            this.dragStartSubscription.unsubscribe();\n        }\n\n        if (this.dragStopSubscription) {\n            this.dragStopSubscription.unsubscribe();\n        }\n    }\n}\n@NgModule({\n    imports: [CommonModule,ScrollingModule],\n    exports: [Tree,SharedModule,ScrollingModule],\n    declarations: [Tree,UITreeNode]\n})\nexport class TreeModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}