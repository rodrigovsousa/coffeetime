import { ElementRef, AfterContentInit, OnDestroy, EventEmitter, QueryList, ChangeDetectorRef, TemplateRef } from '@angular/core';
import { Header } from 'primeng/api';
import { BlockableUI } from 'primeng/api';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
export declare class AccordionTab implements OnDestroy {
    changeDetector: ChangeDetectorRef;
    header: string;
    disabled: boolean;
    cache: boolean;
    selectedChange: EventEmitter<any>;
    transitionOptions: string;
    headerFacet: QueryList<Header>;
    templates: QueryList<any>;
    private _selected;
    private _animating;
    selected: any;
    animating: boolean;
    contentTemplate: TemplateRef<any>;
    id: string;
    loaded: boolean;
    accordion: Accordion;
    constructor(accordion: any, changeDetector: ChangeDetectorRef);
    ngAfterContentInit(): void;
    toggle(event: any): boolean;
    findTabIndex(): number;
    readonly hasHeaderFacet: boolean;
    onToggleDone(event: Event): void;
    onKeydown(event: KeyboardEvent): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AccordionTab, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AccordionTab, "p-accordionTab", never, { "cache": "cache"; "transitionOptions": "transitionOptions"; "selected": "selected"; "header": "header"; "disabled": "disabled"; }, { "selectedChange": "selectedChange"; }, ["headerFacet", "templates"], ["p-header", "*"]>;
}
export declare class Accordion implements BlockableUI, AfterContentInit, OnDestroy {
    el: ElementRef;
    changeDetector: ChangeDetectorRef;
    multiple: boolean;
    onClose: EventEmitter<any>;
    onOpen: EventEmitter<any>;
    style: any;
    styleClass: string;
    expandIcon: string;
    collapseIcon: string;
    activeIndexChange: EventEmitter<any>;
    tabList: QueryList<AccordionTab>;
    tabListSubscription: Subscription;
    private _activeIndex;
    preventActiveIndexPropagation: boolean;
    tabs: AccordionTab[];
    constructor(el: ElementRef, changeDetector: ChangeDetectorRef);
    ngAfterContentInit(): void;
    initTabs(): any;
    getBlockableElement(): HTMLElement;
    activeIndex: any;
    updateSelectionState(): void;
    updateActiveIndex(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Accordion, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Accordion, "p-accordion", never, { "expandIcon": "expandIcon"; "collapseIcon": "collapseIcon"; "activeIndex": "activeIndex"; "multiple": "multiple"; "style": "style"; "styleClass": "styleClass"; }, { "onClose": "onClose"; "onOpen": "onOpen"; "activeIndexChange": "activeIndexChange"; }, ["tabList"], ["*"]>;
}
export declare class AccordionModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<AccordionModule, [typeof Accordion, typeof AccordionTab], [typeof ɵngcc1.CommonModule], [typeof Accordion, typeof AccordionTab, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<AccordionModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLmQudHMiLCJzb3VyY2VzIjpbImFjY29yZGlvbi5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEFmdGVyQ29udGVudEluaXQsIE9uRGVzdHJveSwgRXZlbnRFbWl0dGVyLCBRdWVyeUxpc3QsIENoYW5nZURldGVjdG9yUmVmLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSGVhZGVyIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuaW1wb3J0IHsgQmxvY2thYmxlVUkgfSBmcm9tICdwcmltZW5nL2FwaSc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEFjY29yZGlvblRhYiBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gICAgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIGhlYWRlcjogc3RyaW5nO1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIGNhY2hlOiBib29sZWFuO1xuICAgIHNlbGVjdGVkQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICB0cmFuc2l0aW9uT3B0aW9uczogc3RyaW5nO1xuICAgIGhlYWRlckZhY2V0OiBRdWVyeUxpc3Q8SGVhZGVyPjtcbiAgICB0ZW1wbGF0ZXM6IFF1ZXJ5TGlzdDxhbnk+O1xuICAgIHByaXZhdGUgX3NlbGVjdGVkO1xuICAgIHByaXZhdGUgX2FuaW1hdGluZztcbiAgICBzZWxlY3RlZDogYW55O1xuICAgIGFuaW1hdGluZzogYm9vbGVhbjtcbiAgICBjb250ZW50VGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgaWQ6IHN0cmluZztcbiAgICBsb2FkZWQ6IGJvb2xlYW47XG4gICAgYWNjb3JkaW9uOiBBY2NvcmRpb247XG4gICAgY29uc3RydWN0b3IoYWNjb3JkaW9uOiBhbnksIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgdG9nZ2xlKGV2ZW50OiBhbnkpOiBib29sZWFuO1xuICAgIGZpbmRUYWJJbmRleCgpOiBudW1iZXI7XG4gICAgcmVhZG9ubHkgaGFzSGVhZGVyRmFjZXQ6IGJvb2xlYW47XG4gICAgb25Ub2dnbGVEb25lKGV2ZW50OiBFdmVudCk6IHZvaWQ7XG4gICAgb25LZXlkb3duKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQWNjb3JkaW9uIGltcGxlbWVudHMgQmxvY2thYmxlVUksIEFmdGVyQ29udGVudEluaXQsIE9uRGVzdHJveSB7XG4gICAgZWw6IEVsZW1lbnRSZWY7XG4gICAgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIG11bHRpcGxlOiBib29sZWFuO1xuICAgIG9uQ2xvc2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uT3BlbjogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgc3R5bGU6IGFueTtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgZXhwYW5kSWNvbjogc3RyaW5nO1xuICAgIGNvbGxhcHNlSWNvbjogc3RyaW5nO1xuICAgIGFjdGl2ZUluZGV4Q2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICB0YWJMaXN0OiBRdWVyeUxpc3Q8QWNjb3JkaW9uVGFiPjtcbiAgICB0YWJMaXN0U3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gICAgcHJpdmF0ZSBfYWN0aXZlSW5kZXg7XG4gICAgcHJldmVudEFjdGl2ZUluZGV4UHJvcGFnYXRpb246IGJvb2xlYW47XG4gICAgdGFiczogQWNjb3JkaW9uVGFiW107XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgaW5pdFRhYnMoKTogYW55O1xuICAgIGdldEJsb2NrYWJsZUVsZW1lbnQoKTogSFRNTEVsZW1lbnQ7XG4gICAgYWN0aXZlSW5kZXg6IGFueTtcbiAgICB1cGRhdGVTZWxlY3Rpb25TdGF0ZSgpOiB2b2lkO1xuICAgIHVwZGF0ZUFjdGl2ZUluZGV4KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEFjY29yZGlvbk1vZHVsZSB7XG59XG4iXX0=