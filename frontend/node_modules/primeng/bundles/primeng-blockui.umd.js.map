{"version":3,"file":"primeng-blockui.umd.js","sources":["ng:/primeng/blockui/blockui.ts"],"names":["DomHandler","ElementRef","Input","ViewChild","Component","ChangeDetectionStrategy","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,AfterViewInit,OnDestroy,ElementRef,ViewChild,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\n\n@Component({\n    selector: 'p-blockUI',\n    template: `\n        <div #mask [class]=\"styleClass\" [ngClass]=\"{'ui-blockui-document':!target, 'ui-blockui ui-widget-overlay': true}\" [ngStyle]=\"{display: blocked ? 'block' : 'none'}\">\n            <ng-content></ng-content>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class BlockUI implements AfterViewInit,OnDestroy {\n\n    @Input() target: any;\n    \n    @Input() autoZIndex: boolean = true;\n    \n    @Input() baseZIndex: number = 0;\n    \n    @Input() styleClass: string;\n    \n    @ViewChild('mask') mask: ElementRef;\n    \n    _blocked: boolean;\n        \n    constructor(public el: ElementRef) {}\n    \n    @Input() get blocked(): boolean {\n        return this._blocked;\n    }\n    \n    set blocked(val: boolean) {\n        this._blocked = val;\n        \n        if (this.mask && this.mask.nativeElement) {\n            if (this._blocked)\n                this.block();\n            else\n                this.unblock();\n        }\n    }\n    \n    ngAfterViewInit() {\n        if (this.target && !this.target.getBlockableElement) {\n            throw 'Target of BlockUI must implement BlockableUI interface';\n        }\n    }\n        \n    block() {\n        if (this.target) {\n            this.target.getBlockableElement().appendChild(this.mask.nativeElement);\n            let style = this.target.style||{};\n            style.position = 'relative';\n            this.target.style = style;\n        }\n        else {\n            document.body.appendChild(this.mask.nativeElement);\n        }\n        \n        if (this.autoZIndex) {\n            this.mask.nativeElement.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n    }\n    \n    unblock() {\n        this.el.nativeElement.appendChild(this.mask.nativeElement);\n    }\n    \n    ngOnDestroy() {\n        this.unblock();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [BlockUI],\n    declarations: [BlockUI]\n})\nexport class BlockUIModule { }"]}