{"version":3,"file":"primeng-button.umd.js","sources":["ng:/primeng/button/button.ts"],"names":["DomHandler","ElementRef","Input","Directive","EventEmitter","Output","Component","ChangeDetectionStrategy","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import {NgModule,Directive,Component,ElementRef,EventEmitter,AfterViewInit,Output,OnDestroy,Input,ChangeDetectionStrategy} from '@angular/core';\nimport {DomHandler} from 'primeng/dom';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pButton]'\n})\nexport class ButtonDirective implements AfterViewInit, OnDestroy {\n\n    @Input() iconPos: 'left' | 'right' = 'left';\n    \n    @Input() cornerStyleClass: string = 'ui-corner-all';\n        \n    public _label: string;\n    \n    public _icon: string;\n            \n    public initialized: boolean;\n\n    constructor(public el: ElementRef) {}\n    \n    ngAfterViewInit() {\n        DomHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\n        if (this.icon) {\n            let iconElement = document.createElement(\"span\");\n            iconElement.setAttribute(\"aria-hidden\", \"true\");\n            let iconPosClass = (this.iconPos == 'right') ? 'ui-button-icon-right': 'ui-button-icon-left';\n            iconElement.className = iconPosClass  + ' ui-clickable ' + this.icon;\n            this.el.nativeElement.appendChild(iconElement);\n        }\n        \n        let labelElement = document.createElement(\"span\");\n        if (this.icon && !this.label) {\n            labelElement.setAttribute('aria-hidden', 'true');\n        }\n        labelElement.className = 'ui-button-text ui-clickable';\n        labelElement.appendChild(document.createTextNode(this.label||'ui-btn'));\n        this.el.nativeElement.appendChild(labelElement);\n        this.initialized = true;\n    }\n        \n    getStyleClass(): string {\n        let styleClass = 'ui-button ui-widget ui-state-default ' + this.cornerStyleClass;\n        if (this.icon) {\n            if (this.label != null && this.label != undefined && this.label != \"\") {\n                if (this.iconPos == 'left')\n                    styleClass = styleClass + ' ui-button-text-icon-left';\n                else\n                    styleClass = styleClass + ' ui-button-text-icon-right';\n            }\n            else {\n                styleClass = styleClass + ' ui-button-icon-only';\n            }\n        }\n        else {\n            if (this.label) {\n                styleClass = styleClass + ' ui-button-text-only';\n            }\n            else {\n                styleClass = styleClass + ' ui-button-text-empty';\n            }\n        }\n        \n        return styleClass;\n    }\n\n    setStyleClass() {\n        let styleClass = this.getStyleClass();\n        this.el.nativeElement.className = styleClass;\n    }\n    \n    @Input() get label(): string {\n        return this._label;\n    }\n\n    set label(val: string) {\n        this._label = val;\n        \n        if (this.initialized) {\n            DomHandler.findSingle(this.el.nativeElement, '.ui-button-text').textContent = this._label || 'ui-btn';\n\n            if (!this.icon) {\n                if (this._label) {\n                    DomHandler.removeClass(this.el.nativeElement, 'ui-button-text-empty');\n                    DomHandler.addClass(this.el.nativeElement, 'ui-button-text-only');\n                }\n                else {\n                    DomHandler.addClass(this.el.nativeElement, 'ui-button-text-empty');\n                    DomHandler.removeClass(this.el.nativeElement, 'ui-button-text-only');\n                }\n            }\n\n            this.setStyleClass();\n        }\n    }\n    \n    @Input() get icon(): string {\n        return this._icon;\n    }\n\n    set icon(val: string) {\n        this._icon = val;\n        \n        if (this.initialized) {\n            let iconPosClass = (this.iconPos == 'right') ? 'ui-button-icon-right': 'ui-button-icon-left';\n            DomHandler.findSingle(this.el.nativeElement, '.ui-clickable').className =\n                iconPosClass + ' ui-clickable ' + this.icon;\n            this.setStyleClass();\n        }\n    }\n        \n    ngOnDestroy() {\n        while(this.el.nativeElement.hasChildNodes()) {\n            this.el.nativeElement.removeChild(this.el.nativeElement.lastChild);\n        }\n        \n        this.initialized = false;\n    }\n}\n\n@Component({\n    selector: 'p-button',\n    template: `\n        <button [attr.type]=\"type\" [class]=\"styleClass\" [ngStyle]=\"style\" [disabled]=\"disabled\"\n            [ngClass]=\"{'ui-button ui-widget ui-state-default ui-corner-all':true,\n                        'ui-button-icon-only': (icon && !label),\n                        'ui-button-text-icon-left': (icon && label && iconPos === 'left'),\n                        'ui-button-text-icon-right': (icon && label && iconPos === 'right'),\n                        'ui-button-text-only': (!icon && label),\n                        'ui-button-text-empty': (!icon && !label),\n                        'ui-state-disabled': disabled}\"\n                        (click)=\"onClick.emit($event)\" (focus)=\"onFocus.emit($event)\" (blur)=\"onBlur.emit($event)\">\n            <ng-content></ng-content>\n            <span [ngClass]=\"{'ui-clickable': true,\n                        'ui-button-icon-left': (iconPos === 'left'), \n                        'ui-button-icon-right': (iconPos === 'right')}\"\n                        [class]=\"icon\" *ngIf=\"icon\" [attr.aria-hidden]=\"true\"></span>\n            <span class=\"ui-button-text ui-clickable\" [attr.aria-hidden]=\"icon && !label\">{{label||'ui-btn'}}</span>\n        </button>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Button {\n\n    @Input() type: string;\n\n    @Input() iconPos: string = 'left';\n\n    @Input() icon: string;\n\n    @Input() label: string;\n\n    @Input() disabled: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ButtonDirective,Button],\n    declarations: [ButtonDirective,Button]\n})\nexport class ButtonModule { }\n"]}