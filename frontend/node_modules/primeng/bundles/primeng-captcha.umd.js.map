{"version":3,"file":"primeng-captcha.umd.js","sources":["ng:/primeng/captcha/captcha.ts"],"names":["EventEmitter","ElementRef","NgZone","Input","Output","Component","ChangeDetectionStrategy","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import {NgModule,AfterViewInit,Component,EventEmitter,Input,NgZone,OnDestroy,Output,ElementRef,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\n@Component({\n    selector: 'p-captcha',\n    template: `<div></div>`,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Captcha implements AfterViewInit,OnDestroy {\n\n    @Input() siteKey: string = null;\n        \n    @Input() theme = 'light';\n    \n    @Input() type = 'image';\n    \n    @Input() size = 'normal';\n    \n    @Input() tabindex = 0;\n    \n    @Input() language: string = null;\n     \n    @Input() initCallback = \"initRecaptcha\";\n    \n    @Output() onResponse: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onExpire: EventEmitter<any> = new EventEmitter();\n    \n    private _instance: any = null;\n\n    constructor(public el: ElementRef, public _zone: NgZone) {}\n    \n    ngAfterViewInit() {\n        if ((<any>window).grecaptcha) {\n            if (!(<any>window).grecaptcha.render){\n                setTimeout(() =>{\n                    this.init();\n                },100)\n            }\n            else {\n                this.init();\n            }\n        }\n        else {\n            (<any>window)[this.initCallback] = () => {\n              this.init();\n            }\n        } \n    }\n    \n    init()Â {\n        this._instance = (<any>window).grecaptcha.render(this.el.nativeElement.children[0], {\n            'sitekey': this.siteKey,\n            'theme': this.theme,\n            'type': this.type,\n            'size': this.size,\n            'tabindex': this.tabindex,\n            'hl': this.language,\n            'callback': (response: string) => {this._zone.run(() => this.recaptchaCallback(response))},\n            'expired-callback': () => {this._zone.run(() => this.recaptchaExpiredCallback())}\n        });\n    }\n    \n    reset() {\n        if (this._instance === null)\n            return;\n        \n        (<any>window).grecaptcha.reset(this._instance);\n    }\n    \n    getResponse(): String {\n        if (this._instance === null)\n            return null;\n        \n        return (<any>window).grecaptcha.getResponse(this._instance);\n    }\n    \n    recaptchaCallback(response: string) {\n        this.onResponse.emit({\n            response: response\n        });\n    }\n\n    recaptchaExpiredCallback() {\n        this.onExpire.emit();\n    }\n    \n    ngOnDestroy() {\n        if (this._instance != null) {\n          (<any>window).grecaptcha.reset(this._instance);\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Captcha],\n    declarations: [Captcha]\n})\nexport class CaptchaModule { }\n"]}