{"version":3,"file":"primeng-checkbox.umd.js","sources":["ng:/primeng/checkbox/checkbox.ts"],"names":["NG_VALUE_ACCESSOR","forwardRef","EventEmitter","ChangeDetectorRef","Input","ViewChild","Output","Component","ChangeDetectionStrategy","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,forwardRef,ChangeDetectorRef,ViewChild,ElementRef,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl} from '@angular/forms';\n\nexport const CHECKBOX_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Checkbox),\n  multi: true\n};\n\n@Component({\n    selector: 'p-checkbox',\n    template: `\n        <div [ngStyle]=\"style\" [ngClass]=\"{'ui-chkbox ui-widget': true,'ui-chkbox-readonly': readonly}\" [class]=\"styleClass\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [readonly]=\"readonly\" [value]=\"value\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [ngClass]=\"{'ui-state-focus':focused}\" (change)=\"handleChange($event)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.required]=\"required\">\n            </div>\n            <div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\" (click)=\"onClick($event,cb,true)\"\n                        [ngClass]=\"{'ui-state-active':checked,'ui-state-disabled':disabled,'ui-state-focus':focused}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"ui-chkbox-icon ui-clickable\" [ngClass]=\"checked ? checkboxIcon : null\"></span>\n            </div>\n        </div>\n        <label (click)=\"onClick($event,cb,true)\" [class]=\"labelStyleClass\"\n                [ngClass]=\"{'ui-chkbox-label': true, 'ui-label-active':checked, 'ui-label-disabled':disabled, 'ui-label-focus':focused}\"\n                *ngIf=\"label\" [attr.for]=\"inputId\">{{label}}</label>\n    `,\n    providers: [CHECKBOX_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Checkbox implements ControlValueAccessor {\n\n    @Input() value: any;\n\n    @Input() name: string;\n\n    @Input() disabled: boolean;\n    \n    @Input() binary: boolean;\n    \n    @Input() label: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() tabindex: number;\n\n    @Input() inputId: string;\n    \n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() labelStyleClass: string;\n    \n    @Input() formControl: FormControl;\n    \n    @Input() checkboxIcon: string = 'pi pi-check';\n    \n    @Input() readonly: boolean;\n\n    @Input() required: boolean;\n\n    @ViewChild('cb') inputViewChild: ElementRef;\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    model: any;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n        \n    focused: boolean = false;\n    \n    checked: boolean = false;\n\n    constructor(private cd: ChangeDetectorRef) {}\n\n    onClick(event,checkbox,focus:boolean) {\n        event.preventDefault();\n        \n        if (this.disabled || this.readonly) {\n            return;\n        }\n        \n        this.checked = !this.checked;\n        this.updateModel(event);\n        \n        if (focus) {\n            checkbox.focus();\n        }\n    }\n    \n    updateModel(event) {\n        if (!this.binary) {\n            if (this.checked)\n                this.addValue();\n            else\n                this.removeValue();\n\n            this.onModelChange(this.model);\n            \n            if (this.formControl) {\n                this.formControl.setValue(this.model);\n            }\n        }\n        else {\n            this.onModelChange(this.checked);\n        }\n        \n        this.onChange.emit({checked:this.checked, originalEvent: event});\n    }\n    \n    handleChange(event)Â {\n        if (!this.readonly) {\n            this.checked = event.target.checked;\n            this.updateModel(event);\n        }\n    }\n\n    isChecked(): boolean {\n        if (this.binary)\n            return this.model;\n        else\n            return this.model && this.model.indexOf(this.value) > -1;\n    }\n\n    removeValue() {\n        this.model = this.model.filter(val => val !== this.value);\n    }\n\n    addValue() {\n        if (this.model)\n            this.model = [...this.model, this.value];\n        else\n            this.model = [this.value];\n    }\n    \n    onFocus() {\n        this.focused = true;\n    }\n\n    onBlur() {\n        this.focused = false;\n        this.onModelTouched();\n    }\n\n    focus() {\n        this.inputViewChild.nativeElement.focus();\n    }\n     \n    writeValue(model: any) : void {\n        this.model = model;\n        this.checked = this.isChecked();\n        this.cd.markForCheck();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Checkbox],\n    declarations: [Checkbox]\n})\nexport class CheckboxModule { }\n"]}