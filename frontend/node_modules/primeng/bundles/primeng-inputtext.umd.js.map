{"version":3,"file":"primeng-inputtext.umd.js","sources":["ng:/primeng/inputtext/inputtext.ts"],"names":["ElementRef","NgModel","Optional","HostListener","Directive","NgModule","CommonModule"],"mappings":";;;;;;;;;;;;;;;AAAA;AAAiD,QAkB7C,mBAAmB,EAAc,EAAqB,OAAgB;AAAI,YAAvD,OAAE,GAAF,EAAE,CAAY;AAAC,YAAoB,YAAO,GAAP,OAAO,CAAS;AAAC,SAAG;AAC9E,QACI,6BAAS,GAAT;AACJ,YAAQ,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACjC,SAAK;AACJ;AAED,QACI,2BAAO,GAAP,UAAQ,CAAC;AACb,YAAQ,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACjC,SAAK;AACJ,QACG,qCAAiB,GAAjB;AAAc,YACV,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM;AACxF,iBAAyB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC7D,SAAK;AACJ;AAIc,oBApBYA,eAAU;AAAI,oBAA0BC,aAAO,uBAAlCC,aAAQ;AAAM;AAAc,QAQhE;AACJ,YAFKC,iBAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;AAAC,gDAGlC;AACJ,QAfY,SAAS,4BAVrBC,cAAS,CAAC,5BAUC,CAI4B,WAAAF,aAAQ,EAAE,CAAA;iBAb9C,jBAa+C,WAJtC,SAAS,CAoBrB;EA7BW,EAAE,cAAc,kBACxB,IAAI,EAAE,sBACF,sBAAsB,EAAE,MAAM,sBAC9B,uBAAuB,EAAE,MAAM,sBAC/B;wBAA0B,EAAE,MAAM,sBAClC,mBAAmB,EAAE,MAAM,sBAC3B,yBAAyB,EAAE,QAAQ,kBACtC,cACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;oBAsBF;AACA,QAFA,gBAAC;AAED,KAtBA,IAoBC;AACD;AAGa,QAGb;AAA6B,SAAG;QAAnB,eAAe,4BAL3BG,aAAQ,CAAC;QACN,OAAO,EAAE,CAACC,mBAAY,CAAC,kBACvB,OAAO,EAAE,CAAC,SAAS,CAAC,kBACpB,YAAY,EAAE,CAAC,SAAS,CAAC,cAC5B,CAAC,YACW,eAAe,CAAI;;;;;;;;;gDAAC;AAAC,QAAH,sBAAC;AAAE,KAAlC;AAAK;AAAC;AAAmC;AAA+C;AAAC;AAAmE;AAAC;AAAM","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,DoCheck,Optional} from '@angular/core';\nimport {NgModel} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pInputText]',\n    host: {\n        '[class.ui-inputtext]': 'true',\n        '[class.ui-corner-all]': 'true',\n        '[class.ui-state-default]': 'true',\n        '[class.ui-widget]': 'true',\n        '[class.ui-state-filled]': 'filled'\n    }\n})\nexport class InputText implements DoCheck {\n\n    filled: boolean;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel) {}\n        \n    ngDoCheck() {\n        this.updateFilledState();\n    }\n    \n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n    @HostListener('input', ['$event']) \n    onInput(e) {\n        this.updateFilledState();\n    }\n    \n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) ||\n                        (this.ngModel && this.ngModel.model);\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputText],\n    declarations: [InputText]\n})\nexport class InputTextModule { }"]}