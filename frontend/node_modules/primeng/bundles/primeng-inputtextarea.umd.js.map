{"version":3,"file":"primeng-inputtextarea.umd.js","sources":["ng:/primeng/inputtextarea/inputtextarea.ts"],"names":["EventEmitter","ElementRef","NgModel","Optional","Input","Output","HostListener","Directive","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,Output,DoCheck,EventEmitter,Optional} from '@angular/core';\nimport {NgModel} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pInputTextarea]',\n    host: {\n        '[class.ui-inputtext]': 'true',\n        '[class.ui-corner-all]': 'true',\n        '[class.ui-inputtextarea-resizable]': 'autoResize',\n        '[class.ui-state-default]': 'true',\n        '[class.ui-widget]': 'true',\n        '[class.ui-state-filled]': 'filled'\n    }\n})\nexport class InputTextarea implements DoCheck {\n    \n    @Input() autoResize: boolean;\n    \n    @Output() onResize: EventEmitter<any> = new EventEmitter();\n        \n    filled: boolean;\n\n    cachedScrollHeight:number;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel) {}\n        \n    ngDoCheck() {\n        this.updateFilledState();\n        \n        if (this.autoResize) {\n            this.resize();\n        }\n    }\n    \n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n    @HostListener('input', ['$event'])\n    onInput(e) {\n        this.updateFilledState();\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) || (this.ngModel && this.ngModel.model);\n    }\n    \n    @HostListener('focus', ['$event'])\n    onFocus(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    @HostListener('blur', ['$event'])\n    onBlur(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    resize(event?: Event) {\n        this.el.nativeElement.style.height = 'auto';\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = \"scroll\";\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        }\n        else {\n            this.el.nativeElement.style.overflow = \"hidden\";\n        }\n\n        this.onResize.emit(event||{});\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputTextarea],\n    declarations: [InputTextarea]\n})\nexport class InputTextareaModule { }\n"]}