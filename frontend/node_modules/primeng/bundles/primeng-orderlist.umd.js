(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/common'),require('primeng/button'),require('primeng/api'),exports, require('@angular/core'), require('@angular/common'), require('primeng/button'), require('primeng/api'), require('primeng/dom'), require('primeng/utils')) :
    typeof define === 'function' && define.amd ? define('primeng/orderlist', ['@angular/core','@angular/common','primeng/button','primeng/api','exports', '@angular/core', '@angular/common', 'primeng/button', 'primeng/api', 'primeng/dom', 'primeng/utils'], factory) :
    (global = global || self, factory(global.ng.core,global.ng.common,global.primeng.button,global.primeng.api,(global.primeng = global.primeng || {}, global.primeng.orderlist = {}), global.ng.core, global.ng.common, global.primeng.button, global.primeng.api, global.primeng.dom, global.primeng.utils));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,exports, core, common, button, api, dom, utils) { 
var _c0 = ["listelement"];
function OrderList_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 12);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r545 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r545.header);
} }
function OrderList_div_8_Template(rf, ctx) { if (rf & 1) {
    var _r550 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵelementStart(1, "input", 14);
    ɵngcc0.ɵɵlistener("keyup", function OrderList_div_8_Template_input_keyup_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r550); var ctx_r549 = ɵngcc0.ɵɵnextContext(); return ctx_r549.onFilterKeyup($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(2, "span", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r546 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("placeholder", ctx_r546.filterPlaceholder)("aria-label", ctx_r546.ariaFilterLabel);
} }
var _c1 = function (a0) { return { "ui-orderlist-droppoint-highlight": a0 }; };
function OrderList_ng_template_11_li_0_Template(rf, ctx) { if (rf & 1) {
    var _r558 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 19);
    ɵngcc0.ɵɵlistener("dragover", function OrderList_ng_template_11_li_0_Template_li_dragover_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r558); var i_r552 = ɵngcc0.ɵɵnextContext().index; var ctx_r557 = ɵngcc0.ɵɵnextContext(); return ctx_r557.onDragOver($event, i_r552); })("drop", function OrderList_ng_template_11_li_0_Template_li_drop_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r558); var i_r552 = ɵngcc0.ɵɵnextContext().index; var ctx_r560 = ɵngcc0.ɵɵnextContext(); return ctx_r560.onDrop($event, i_r552); })("dragleave", function OrderList_ng_template_11_li_0_Template_li_dragleave_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r558); var ctx_r562 = ɵngcc0.ɵɵnextContext(2); return ctx_r562.onDragLeave($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var i_r552 = ɵngcc0.ɵɵnextContext().index;
    var ctx_r554 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c1, i_r552 === ctx_r554.dragOverItemIndex));
} }
function OrderList_ng_template_11_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function OrderList_ng_template_11_li_3_Template(rf, ctx) { if (rf & 1) {
    var _r565 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 19);
    ɵngcc0.ɵɵlistener("dragover", function OrderList_ng_template_11_li_3_Template_li_dragover_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r565); var i_r552 = ɵngcc0.ɵɵnextContext().index; var ctx_r564 = ɵngcc0.ɵɵnextContext(); return ctx_r564.onDragOver($event, i_r552 + 1); })("drop", function OrderList_ng_template_11_li_3_Template_li_drop_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r565); var i_r552 = ɵngcc0.ɵɵnextContext().index; var ctx_r567 = ɵngcc0.ɵɵnextContext(); return ctx_r567.onDrop($event, i_r552 + 1); })("dragleave", function OrderList_ng_template_11_li_3_Template_li_dragleave_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r565); var ctx_r569 = ɵngcc0.ɵɵnextContext(2); return ctx_r569.onDragLeave($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var i_r552 = ɵngcc0.ɵɵnextContext().index;
    var ctx_r556 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c1, i_r552 + 1 === ctx_r556.dragOverItemIndex));
} }
var _c2 = function (a0) { return { "ui-state-highlight": a0 }; };
var _c3 = function (a0, a1) { return { $implicit: a0, index: a1 }; };
function OrderList_ng_template_11_Template(rf, ctx) { if (rf & 1) {
    var _r572 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵtemplate(0, OrderList_ng_template_11_li_0_Template, 1, 3, "li", 16);
    ɵngcc0.ɵɵelementStart(1, "li", 17);
    ɵngcc0.ɵɵlistener("click", function OrderList_ng_template_11_Template_li_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r572); var item_r551 = ctx.$implicit; var i_r552 = ctx.index; var ctx_r571 = ɵngcc0.ɵɵnextContext(); return ctx_r571.onItemClick($event, item_r551, i_r552); })("touchend", function OrderList_ng_template_11_Template_li_touchend_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r572); var ctx_r573 = ɵngcc0.ɵɵnextContext(); return ctx_r573.onItemTouchEnd($event); })("keydown", function OrderList_ng_template_11_Template_li_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r572); var item_r551 = ctx.$implicit; var i_r552 = ctx.index; var ctx_r574 = ɵngcc0.ɵɵnextContext(); return ctx_r574.onItemKeydown($event, item_r551, i_r552); })("dragstart", function OrderList_ng_template_11_Template_li_dragstart_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r572); var i_r552 = ctx.index; var ctx_r575 = ɵngcc0.ɵɵnextContext(); return ctx_r575.onDragStart($event, i_r552); })("dragend", function OrderList_ng_template_11_Template_li_dragend_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r572); var ctx_r576 = ɵngcc0.ɵɵnextContext(); return ctx_r576.onDragEnd($event); });
    ɵngcc0.ɵɵtemplate(2, OrderList_ng_template_11_ng_container_2_Template, 1, 0, "ng-container", 18);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, OrderList_ng_template_11_li_3_Template, 1, 3, "li", 16);
} if (rf & 2) {
    var item_r551 = ctx.$implicit;
    var i_r552 = ctx.index;
    var l_r553 = ctx.last;
    var ctx_r548 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r548.dragdrop && ctx_r548.isItemVisible(item_r551));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("display", ctx_r548.isItemVisible(item_r551) ? "block" : "none");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(9, _c2, ctx_r548.isSelected(item_r551)))("draggable", ctx_r548.dragdrop);
    ɵngcc0.ɵɵattribute("aria-selected", ctx_r548.isSelected(item_r551));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r548.itemTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(11, _c3, item_r551, i_r552));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r548.dragdrop && l_r553);
} }
var _c4 = function (a1, a2) { return { "ui-orderlist ui-widget": true, "ui-orderlist-controls-left": a1, "ui-orderlist-controls-right": a2 }; };
'use strict';

    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __read = (this && this.__read) || function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };
    var __spread = (this && this.__spread) || function () {
        for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
        return ar;
    };
    var OrderList = /** @class */ (function () {
        function OrderList(el) {
            this.el = el;
            this.metaKeySelection = true;
            this.controlsPosition = 'left';
            this.filterMatchMode = "contains";
            this.selectionChange = new core.EventEmitter();
            this.trackBy = function (index, item) { return item; };
            this.onReorder = new core.EventEmitter();
            this.onSelectionChange = new core.EventEmitter();
            this.onFilterEvent = new core.EventEmitter();
        }
        Object.defineProperty(OrderList.prototype, "selection", {
            get: function () {
                return this._selection;
            },
            set: function (val) {
                this._selection = val;
            },
            enumerable: true,
            configurable: true
        });
        OrderList.prototype.ngAfterContentInit = function () {
            var _this = this;
            this.templates.forEach(function (item) {
                switch (item.getType()) {
                    case 'item':
                        _this.itemTemplate = item.template;
                        break;
                    default:
                        _this.itemTemplate = item.template;
                        break;
                }
            });
        };
        OrderList.prototype.ngAfterViewChecked = function () {
            if (this.movedUp || this.movedDown) {
                var listItems = dom.DomHandler.find(this.listViewChild.nativeElement, 'li.ui-state-highlight');
                var listItem = void 0;
                if (listItems.length > 0) {
                    if (this.movedUp)
                        listItem = listItems[0];
                    else
                        listItem = listItems[listItems.length - 1];
                    dom.DomHandler.scrollInView(this.listViewChild.nativeElement, listItem);
                }
                this.movedUp = false;
                this.movedDown = false;
            }
        };
        Object.defineProperty(OrderList.prototype, "value", {
            get: function () {
                return this._value;
            },
            set: function (val) {
                this._value = val;
                if (this.filterValue) {
                    this.filter();
                }
            },
            enumerable: true,
            configurable: true
        });
        OrderList.prototype.onItemClick = function (event, item, index) {
            this.itemTouched = false;
            var selectedIndex = utils.ObjectUtils.findIndexInList(item, this.selection);
            var selected = (selectedIndex != -1);
            var metaSelection = this.itemTouched ? false : this.metaKeySelection;
            if (metaSelection) {
                var metaKey = (event.metaKey || event.ctrlKey || event.shiftKey);
                if (selected && metaKey) {
                    this._selection = this._selection.filter(function (val, index) { return index !== selectedIndex; });
                }
                else {
                    this._selection = (metaKey) ? this._selection ? __spread(this._selection) : [] : [];
                    utils.ObjectUtils.insertIntoOrderedArray(item, index, this._selection, this.value);
                }
            }
            else {
                if (selected) {
                    this._selection = this._selection.filter(function (val, index) { return index !== selectedIndex; });
                }
                else {
                    this._selection = this._selection ? __spread(this._selection) : [];
                    utils.ObjectUtils.insertIntoOrderedArray(item, index, this._selection, this.value);
                }
            }
            //binding
            this.selectionChange.emit(this._selection);
            //event
            this.onSelectionChange.emit({ originalEvent: event, value: this._selection });
        };
        OrderList.prototype.onFilterKeyup = function (event) {
            this.filterValue = event.target.value.trim().toLocaleLowerCase(this.filterLocale);
            this.filter();
            this.onFilterEvent.emit({
                originalEvent: event,
                value: this.visibleOptions
            });
        };
        OrderList.prototype.filter = function () {
            var searchFields = this.filterBy.split(',');
            this.visibleOptions = utils.FilterUtils.filter(this.value, searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);
        };
        OrderList.prototype.isItemVisible = function (item) {
            if (this.filterValue && this.filterValue.trim().length) {
                for (var i = 0; i < this.visibleOptions.length; i++) {
                    if (item == this.visibleOptions[i]) {
                        return true;
                    }
                }
            }
            else {
                return true;
            }
        };
        OrderList.prototype.onItemTouchEnd = function (event) {
            this.itemTouched = true;
        };
        OrderList.prototype.isSelected = function (item) {
            return utils.ObjectUtils.findIndexInList(item, this.selection) != -1;
        };
        OrderList.prototype.moveUp = function (event) {
            if (this.selection) {
                for (var i = 0; i < this.selection.length; i++) {
                    var selectedItem = this.selection[i];
                    var selectedItemIndex = utils.ObjectUtils.findIndexInList(selectedItem, this.value);
                    if (selectedItemIndex != 0) {
                        var movedItem = this.value[selectedItemIndex];
                        var temp = this.value[selectedItemIndex - 1];
                        this.value[selectedItemIndex - 1] = movedItem;
                        this.value[selectedItemIndex] = temp;
                    }
                    else {
                        break;
                    }
                }
                this.movedUp = true;
                this.onReorder.emit(event);
            }
        };
        OrderList.prototype.moveTop = function (event) {
            if (this.selection) {
                for (var i = this.selection.length - 1; i >= 0; i--) {
                    var selectedItem = this.selection[i];
                    var selectedItemIndex = utils.ObjectUtils.findIndexInList(selectedItem, this.value);
                    if (selectedItemIndex != 0) {
                        var movedItem = this.value.splice(selectedItemIndex, 1)[0];
                        this.value.unshift(movedItem);
                    }
                    else {
                        break;
                    }
                }
                this.onReorder.emit(event);
                this.listViewChild.nativeElement.scrollTop = 0;
            }
        };
        OrderList.prototype.moveDown = function (event) {
            if (this.selection) {
                for (var i = this.selection.length - 1; i >= 0; i--) {
                    var selectedItem = this.selection[i];
                    var selectedItemIndex = utils.ObjectUtils.findIndexInList(selectedItem, this.value);
                    if (selectedItemIndex != (this.value.length - 1)) {
                        var movedItem = this.value[selectedItemIndex];
                        var temp = this.value[selectedItemIndex + 1];
                        this.value[selectedItemIndex + 1] = movedItem;
                        this.value[selectedItemIndex] = temp;
                    }
                    else {
                        break;
                    }
                }
                this.movedDown = true;
                this.onReorder.emit(event);
            }
        };
        OrderList.prototype.moveBottom = function (event) {
            if (this.selection) {
                for (var i = 0; i < this.selection.length; i++) {
                    var selectedItem = this.selection[i];
                    var selectedItemIndex = utils.ObjectUtils.findIndexInList(selectedItem, this.value);
                    if (selectedItemIndex != (this.value.length - 1)) {
                        var movedItem = this.value.splice(selectedItemIndex, 1)[0];
                        this.value.push(movedItem);
                    }
                    else {
                        break;
                    }
                }
                this.onReorder.emit(event);
                this.listViewChild.nativeElement.scrollTop = this.listViewChild.nativeElement.scrollHeight;
            }
        };
        OrderList.prototype.onDragStart = function (event, index) {
            event.dataTransfer.setData('text', 'b'); // For firefox
            event.target.blur();
            this.dragging = true;
            this.draggedItemIndex = index;
        };
        OrderList.prototype.onDragOver = function (event, index) {
            if (this.dragging && this.draggedItemIndex !== index && this.draggedItemIndex + 1 !== index) {
                this.dragOverItemIndex = index;
                event.preventDefault();
            }
        };
        OrderList.prototype.onDragLeave = function (event) {
            this.dragOverItemIndex = null;
        };
        OrderList.prototype.onDrop = function (event, index) {
            var dropIndex = (this.draggedItemIndex > index) ? index : (index === 0) ? 0 : index - 1;
            utils.ObjectUtils.reorderArray(this.value, this.draggedItemIndex, dropIndex);
            this.dragOverItemIndex = null;
            this.onReorder.emit(event);
            event.preventDefault();
        };
        OrderList.prototype.onDragEnd = function (event) {
            this.dragging = false;
        };
        OrderList.prototype.onListMouseMove = function (event) {
            if (this.dragging) {
                var offsetY = this.listViewChild.nativeElement.getBoundingClientRect().top + document.body.scrollTop;
                var bottomDiff = (offsetY + this.listViewChild.nativeElement.clientHeight) - event.pageY;
                var topDiff = (event.pageY - offsetY);
                if (bottomDiff < 25 && bottomDiff > 0)
                    this.listViewChild.nativeElement.scrollTop += 15;
                else if (topDiff < 25 && topDiff > 0)
                    this.listViewChild.nativeElement.scrollTop -= 15;
            }
        };
        OrderList.prototype.onItemKeydown = function (event, item, index) {
            var listItem = event.currentTarget;
            switch (event.which) {
                //down
                case 40:
                    var nextItem = this.findNextItem(listItem);
                    if (nextItem) {
                        nextItem.focus();
                    }
                    event.preventDefault();
                    break;
                //up
                case 38:
                    var prevItem = this.findPrevItem(listItem);
                    if (prevItem) {
                        prevItem.focus();
                    }
                    event.preventDefault();
                    break;
                //enter
                case 13:
                    this.onItemClick(event, item, index);
                    event.preventDefault();
                    break;
            }
        };
        OrderList.prototype.findNextItem = function (item) {
            var nextItem = item.nextElementSibling;
            if (nextItem)
                return !dom.DomHandler.hasClass(nextItem, 'ui-orderlist-item') || dom.DomHandler.isHidden(nextItem) ? this.findNextItem(nextItem) : nextItem;
            else
                return null;
        };
        OrderList.prototype.findPrevItem = function (item) {
            var prevItem = item.previousElementSibling;
            if (prevItem)
                return !dom.DomHandler.hasClass(prevItem, 'ui-orderlist-item') || dom.DomHandler.isHidden(prevItem) ? this.findPrevItem(prevItem) : prevItem;
            else
                return null;
        };
        OrderList.ctorParameters = function () { return [
            { type: core.ElementRef }
        ]; };
        __decorate([
            core.Input()
        ], OrderList.prototype, "header", void 0);
        __decorate([
            core.Input()
        ], OrderList.prototype, "style", void 0);
        __decorate([
            core.Input()
        ], OrderList.prototype, "styleClass", void 0);
        __decorate([
            core.Input()
        ], OrderList.prototype, "listStyle", void 0);
        __decorate([
            core.Input()
        ], OrderList.prototype, "responsive", void 0);
        __decorate([
            core.Input()
        ], OrderList.prototype, "filterBy", void 0);
        __decorate([
            core.Input()
        ], OrderList.prototype, "filterPlaceholder", void 0);
        __decorate([
            core.Input()
        ], OrderList.prototype, "filterLocale", void 0);
        __decorate([
            core.Input()
        ], OrderList.prototype, "metaKeySelection", void 0);
        __decorate([
            core.Input()
        ], OrderList.prototype, "dragdrop", void 0);
        __decorate([
            core.Input()
        ], OrderList.prototype, "controlsPosition", void 0);
        __decorate([
            core.Input()
        ], OrderList.prototype, "ariaFilterLabel", void 0);
        __decorate([
            core.Input()
        ], OrderList.prototype, "filterMatchMode", void 0);
        __decorate([
            core.Output()
        ], OrderList.prototype, "selectionChange", void 0);
        __decorate([
            core.Input()
        ], OrderList.prototype, "trackBy", void 0);
        __decorate([
            core.Output()
        ], OrderList.prototype, "onReorder", void 0);
        __decorate([
            core.Output()
        ], OrderList.prototype, "onSelectionChange", void 0);
        __decorate([
            core.Output()
        ], OrderList.prototype, "onFilterEvent", void 0);
        __decorate([
            core.ViewChild('listelement')
        ], OrderList.prototype, "listViewChild", void 0);
        __decorate([
            core.ContentChildren(api.PrimeTemplate)
        ], OrderList.prototype, "templates", void 0);
        __decorate([
            core.Input()
        ], OrderList.prototype, "selection", null);
        __decorate([
            core.Input()
        ], OrderList.prototype, "value", null);
OrderList.ɵfac = function OrderList_Factory(t) { return new (t || OrderList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
OrderList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: OrderList, selectors: [["p-orderList"]], contentQueries: function OrderList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, api.PrimeTemplate, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);
    } }, viewQuery: function OrderList_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.listViewChild = _t.first);
    } }, inputs: { metaKeySelection: "metaKeySelection", controlsPosition: "controlsPosition", filterMatchMode: "filterMatchMode", trackBy: "trackBy", selection: "selection", value: "value", header: "header", style: "style", styleClass: "styleClass", listStyle: "listStyle", responsive: "responsive", filterBy: "filterBy", filterPlaceholder: "filterPlaceholder", filterLocale: "filterLocale", dragdrop: "dragdrop", ariaFilterLabel: "ariaFilterLabel" }, outputs: { selectionChange: "selectionChange", onReorder: "onReorder", onSelectionChange: "onSelectionChange", onFilterEvent: "onFilterEvent" }, decls: 12, vars: 12, consts: [[3, "ngClass", "ngStyle"], [1, "ui-orderlist-controls"], ["type", "button", "pButton", "", "icon", "pi pi-angle-up", 3, "click"], ["type", "button", "pButton", "", "icon", "pi pi-angle-double-up", 3, "click"], ["type", "button", "pButton", "", "icon", "pi pi-angle-down", 3, "click"], ["type", "button", "pButton", "", "icon", "pi pi-angle-double-down", 3, "click"], [1, "ui-orderlist-list-container"], ["class", "ui-orderlist-caption ui-widget-header ui-corner-top", 4, "ngIf"], ["class", "ui-orderlist-filter-container ui-widget-content", 4, "ngIf"], [1, "ui-widget-content", "ui-orderlist-list", "ui-corner-bottom", 3, "ngStyle", "dragover"], ["listelement", ""], ["ngFor", "", 3, "ngForTrackBy", "ngForOf"], [1, "ui-orderlist-caption", "ui-widget-header", "ui-corner-top"], [1, "ui-orderlist-filter-container", "ui-widget-content"], ["type", "text", "role", "textbox", 1, "ui-inputtext", "ui-widget", "ui-state-default", "ui-corner-all", 3, "keyup"], [1, "ui-orderlist-filter-icon", "pi", "pi-search"], ["class", "ui-orderlist-droppoint", 3, "ngClass", "dragover", "drop", "dragleave", 4, "ngIf"], ["tabindex", "0", "role", "option", 1, "ui-orderlist-item", 3, "ngClass", "draggable", "click", "touchend", "keydown", "dragstart", "dragend"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "ui-orderlist-droppoint", 3, "ngClass", "dragover", "drop", "dragleave"]], template: function OrderList_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "button", 2);
        ɵngcc0.ɵɵlistener("click", function OrderList_Template_button_click_2_listener($event) { return ctx.moveUp($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "button", 3);
        ɵngcc0.ɵɵlistener("click", function OrderList_Template_button_click_3_listener($event) { return ctx.moveTop($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "button", 4);
        ɵngcc0.ɵɵlistener("click", function OrderList_Template_button_click_4_listener($event) { return ctx.moveDown($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "button", 5);
        ɵngcc0.ɵɵlistener("click", function OrderList_Template_button_click_5_listener($event) { return ctx.moveBottom($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 6);
        ɵngcc0.ɵɵtemplate(7, OrderList_div_7_Template, 2, 1, "div", 7);
        ɵngcc0.ɵɵtemplate(8, OrderList_div_8_Template, 3, 2, "div", 8);
        ɵngcc0.ɵɵelementStart(9, "ul", 9, 10);
        ɵngcc0.ɵɵlistener("dragover", function OrderList_Template_ul_dragover_9_listener($event) { return ctx.onListMouseMove($event); });
        ɵngcc0.ɵɵtemplate(11, OrderList_ng_template_11_Template, 4, 14, "ng-template", 11);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.styleClass);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(9, _c4, ctx.controlsPosition === "left", ctx.controlsPosition === "right"))("ngStyle", ctx.style);
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵproperty("ngIf", ctx.header);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.filterBy);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngStyle", ctx.listStyle);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForTrackBy", ctx.trackBy)("ngForOf", ctx.value);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle, ɵngcc2.ButtonDirective, ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OrderList, [{
        type: core.Component,
        args: [{
                selector: 'p-orderList',
                template: "\n        <div [ngClass]=\"{'ui-orderlist ui-widget': true, 'ui-orderlist-controls-left': controlsPosition === 'left',\n                    'ui-orderlist-controls-right': controlsPosition === 'right'}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"ui-orderlist-controls\">\n                <button type=\"button\" pButton icon=\"pi pi-angle-up\" (click)=\"moveUp($event)\"></button>\n                <button type=\"button\" pButton icon=\"pi pi-angle-double-up\" (click)=\"moveTop($event)\"></button>\n                <button type=\"button\" pButton icon=\"pi pi-angle-down\" (click)=\"moveDown($event)\"></button>\n                <button type=\"button\" pButton icon=\"pi pi-angle-double-down\" (click)=\"moveBottom($event)\"></button>\n            </div>\n            <div class=\"ui-orderlist-list-container\">\n                <div class=\"ui-orderlist-caption ui-widget-header ui-corner-top\" *ngIf=\"header\">{{header}}</div>\n                <div class=\"ui-orderlist-filter-container ui-widget-content\" *ngIf=\"filterBy\">\n                    <input type=\"text\" role=\"textbox\" (keyup)=\"onFilterKeyup($event)\" class=\"ui-inputtext ui-widget ui-state-default ui-corner-all\" [attr.placeholder]=\"filterPlaceholder\" [attr.aria-label]=\"ariaFilterLabel\">\n                    <span class=\"ui-orderlist-filter-icon pi pi-search\"></span>\n                </div>\n                <ul #listelement class=\"ui-widget-content ui-orderlist-list ui-corner-bottom\" [ngStyle]=\"listStyle\" (dragover)=\"onListMouseMove($event)\">\n                    <ng-template ngFor [ngForTrackBy]=\"trackBy\" let-item [ngForOf]=\"value\" let-i=\"index\" let-l=\"last\">\n                        <li class=\"ui-orderlist-droppoint\" *ngIf=\"dragdrop && isItemVisible(item)\" (dragover)=\"onDragOver($event, i)\" (drop)=\"onDrop($event, i)\" (dragleave)=\"onDragLeave($event)\"\n                            [ngClass]=\"{'ui-orderlist-droppoint-highlight': (i === dragOverItemIndex)}\"></li>\n                        <li class=\"ui-orderlist-item\" tabindex=\"0\"\n                            [ngClass]=\"{'ui-state-highlight':isSelected(item)}\"\n                            (click)=\"onItemClick($event,item,i)\" (touchend)=\"onItemTouchEnd($event)\" (keydown)=\"onItemKeydown($event,item,i)\"\n                            [style.display]=\"isItemVisible(item) ? 'block' : 'none'\" role=\"option\" [attr.aria-selected]=\"isSelected(item)\"\n                            [draggable]=\"dragdrop\" (dragstart)=\"onDragStart($event, i)\" (dragend)=\"onDragEnd($event)\">\n                            <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item, index: i}\"></ng-container>\n                        </li>\n                        <li class=\"ui-orderlist-droppoint\" *ngIf=\"dragdrop && l\" (dragover)=\"onDragOver($event, i + 1)\" (drop)=\"onDrop($event, i + 1)\" (dragleave)=\"onDragLeave($event)\"\n                            [ngClass]=\"{'ui-orderlist-droppoint-highlight': (i + 1 === dragOverItemIndex)}\"></li>\n                    </ng-template>\n                </ul>\n            </div>\n        </div>\n    ",
                changeDetection: core.ChangeDetectionStrategy.Default
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { metaKeySelection: [{
            type: core.Input
        }], controlsPosition: [{
            type: core.Input
        }], filterMatchMode: [{
            type: core.Input
        }], selectionChange: [{
            type: core.Output
        }], trackBy: [{
            type: core.Input
        }], onReorder: [{
            type: core.Output
        }], onSelectionChange: [{
            type: core.Output
        }], onFilterEvent: [{
            type: core.Output
        }], selection: [{
            type: core.Input
        }], value: [{
            type: core.Input
        }], header: [{
            type: core.Input
        }], style: [{
            type: core.Input
        }], styleClass: [{
            type: core.Input
        }], listStyle: [{
            type: core.Input
        }], responsive: [{
            type: core.Input
        }], filterBy: [{
            type: core.Input
        }], filterPlaceholder: [{
            type: core.Input
        }], filterLocale: [{
            type: core.Input
        }], dragdrop: [{
            type: core.Input
        }], ariaFilterLabel: [{
            type: core.Input
        }], listViewChild: [{
            type: core.ViewChild,
            args: ['listelement']
        }], templates: [{
            type: core.ContentChildren,
            args: [api.PrimeTemplate]
        }] }); })();
        return OrderList;
    }());
    var OrderListModule = /** @class */ (function () {
        function OrderListModule() {
        }
OrderListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: OrderListModule });
OrderListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function OrderListModule_Factory(t) { return new (t || OrderListModule)(); }, imports: [[common.CommonModule, button.ButtonModule, api.SharedModule], ɵngcc3.SharedModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OrderListModule, { declarations: [OrderList], imports: [ɵngcc1.CommonModule, ɵngcc2.ButtonModule, ɵngcc3.SharedModule], exports: [OrderList, ɵngcc3.SharedModule] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OrderListModule, [{
        type: core.NgModule,
        args: [{
                imports: [common.CommonModule, button.ButtonModule, api.SharedModule],
                exports: [OrderList, api.SharedModule],
                declarations: [OrderList]
            }]
    }], function () { return []; }, null); })();
        return OrderListModule;
    }());

    exports.OrderList = OrderList;
    exports.OrderListModule = OrderListModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=primeng-orderlist.umd.js.map