(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/common'),require('primeng/api'),exports, require('@angular/core'), require('@angular/animations'), require('@angular/common'), require('primeng/api')) :
    typeof define === 'function' && define.amd ? define('primeng/organizationchart', ['@angular/core','@angular/common','primeng/api','exports', '@angular/core', '@angular/animations', '@angular/common', 'primeng/api'], factory) :
    (global = global || self, factory(global.ng.core,global.ng.common,global.primeng.api,(global.primeng = global.primeng || {}, global.primeng.organizationchart = {}), global.ng.core, global.ng.animations, global.ng.common, global.primeng.api));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,exports, core, animations, common, api) { 
var _c0 = ["pOrganizationChartNode", ""];
function OrganizationChartNode_tr_0_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r612 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r612.node.label);
} }
function OrganizationChartNode_tr_0_div_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
var _c1 = function (a0) { return { $implicit: a0 }; };
function OrganizationChartNode_tr_0_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, OrganizationChartNode_tr_0_div_4_ng_container_1_Template, 1, 0, "ng-container", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r613 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r613.chart.getTemplateForNode(ctx_r613.node))("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r613.node));
} }
var _c2 = function (a0, a1) { return { "pi-chevron-down": a0, "pi-chevron-up": a1 }; };
function OrganizationChartNode_tr_0_a_5_Template(rf, ctx) { if (rf & 1) {
    var _r617 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 8);
    ɵngcc0.ɵɵlistener("click", function OrganizationChartNode_tr_0_a_5_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r617); var ctx_r616 = ɵngcc0.ɵɵnextContext(2); return ctx_r616.toggleNode($event, ctx_r616.node); })("keydown.enter", function OrganizationChartNode_tr_0_a_5_Template_a_keydown_enter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r617); var ctx_r618 = ɵngcc0.ɵɵnextContext(2); return ctx_r618.toggleNode($event, ctx_r618.node); });
    ɵngcc0.ɵɵelement(1, "i", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r614 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(1, _c2, ctx_r614.node.expanded, !ctx_r614.node.expanded));
} }
var _c3 = function (a0, a1) { return { "ui-organizationchart-selectable-node": a0, "ui-state-highlight": a1 }; };
function OrganizationChartNode_tr_0_Template(rf, ctx) { if (rf & 1) {
    var _r620 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵelementStart(1, "td");
    ɵngcc0.ɵɵelementStart(2, "div", 5);
    ɵngcc0.ɵɵlistener("click", function OrganizationChartNode_tr_0_Template_div_click_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r620); var ctx_r619 = ɵngcc0.ɵɵnextContext(); return ctx_r619.onNodeClick($event, ctx_r619.node); });
    ɵngcc0.ɵɵtemplate(3, OrganizationChartNode_tr_0_div_3_Template, 2, 1, "div", 0);
    ɵngcc0.ɵɵtemplate(4, OrganizationChartNode_tr_0_div_4_Template, 2, 4, "div", 0);
    ɵngcc0.ɵɵtemplate(5, OrganizationChartNode_tr_0_a_5_Template, 2, 4, "a", 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r608 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("colspan", ctx_r608.colspan);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("ui-organizationchart-node-content ui-widget-content ui-corner-all ", ctx_r608.node.styleClass, "");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(8, _c3, ctx_r608.chart.selectionMode && ctx_r608.node.selectable !== false, ctx_r608.isSelected()));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r608.chart.getTemplateForNode(ctx_r608.node));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r608.chart.getTemplateForNode(ctx_r608.node));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r608.leaf);
} }
function OrganizationChartNode_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "td");
    ɵngcc0.ɵɵelement(2, "div", 2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r609 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("colspan", ctx_r609.colspan);
} }
var _c4 = function (a0) { return { "ui-organizationchart-line-top": a0 }; };
function OrganizationChartNode_ng_container_6_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 11);
    ɵngcc0.ɵɵtext(1, "\u00A0");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(2, "td", 12);
    ɵngcc0.ɵɵtext(3, "\u00A0");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var first_r623 = ctx.first;
    var last_r624 = ctx.last;
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c4, !first_r623));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(4, _c4, !last_r624));
} }
function OrganizationChartNode_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, OrganizationChartNode_ng_container_6_ng_template_1_Template, 4, 6, "ng-template", 10);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r610 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r610.node.children);
} }
function OrganizationChartNode_td_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 13);
    ɵngcc0.ɵɵelement(1, "table", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var child_r625 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("node", child_r625);
} }
function OrganizationChart_table_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "table", 2);
} if (rf & 2) {
    var ctx_r626 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("node", ctx_r626.root);
} }
var _c5 = function (a1) { return { "ui-organizationchart ui-widget": true, "ui-organizationchart-preservespace": a1 }; };
'use strict';

    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __param = (this && this.__param) || function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };
    var __read = (this && this.__read) || function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };
    var __spread = (this && this.__spread) || function () {
        for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
        return ar;
    };
    var OrganizationChartNode = /** @class */ (function () {
        function OrganizationChartNode(chart) {
            this.chart = chart;
        }
        Object.defineProperty(OrganizationChartNode.prototype, "leaf", {
            get: function () {
                return this.node.leaf == false ? false : !(this.node.children && this.node.children.length);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(OrganizationChartNode.prototype, "colspan", {
            get: function () {
                return (this.node.children && this.node.children.length) ? this.node.children.length * 2 : null;
            },
            enumerable: true,
            configurable: true
        });
        OrganizationChartNode.prototype.onNodeClick = function (event, node) {
            this.chart.onNodeClick(event, node);
        };
        OrganizationChartNode.prototype.toggleNode = function (event, node) {
            node.expanded = !node.expanded;
            if (node.expanded)
                this.chart.onNodeExpand.emit({ originalEvent: event, node: this.node });
            else
                this.chart.onNodeCollapse.emit({ originalEvent: event, node: this.node });
            event.preventDefault();
        };
        OrganizationChartNode.prototype.isSelected = function () {
            return this.chart.isSelected(this.node);
        };
        OrganizationChartNode.ctorParameters = function () { return [
            { type: undefined, decorators: [{ type: core.Inject, args: [core.forwardRef(function () { return OrganizationChart; }),] }] }
        ]; };
        __decorate([
            core.Input()
        ], OrganizationChartNode.prototype, "node", void 0);
        __decorate([
            core.Input()
        ], OrganizationChartNode.prototype, "root", void 0);
        __decorate([
            core.Input()
        ], OrganizationChartNode.prototype, "first", void 0);
        __decorate([
            core.Input()
        ], OrganizationChartNode.prototype, "last", void 0);
        OrganizationChartNode = __decorate([ __param(0, core.Inject(core.forwardRef(function () { return OrganizationChart; })))
        ], OrganizationChartNode);
OrganizationChartNode.ɵfac = function OrganizationChartNode_Factory(t) { return new (t || OrganizationChartNode)(ɵngcc0.ɵɵdirectiveInject(core.forwardRef(function () { return OrganizationChart; }))); };
OrganizationChartNode.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: OrganizationChartNode, selectors: [["", "pOrganizationChartNode", ""]], inputs: { node: "node", root: "root", first: "first", last: "last" }, attrs: _c0, decls: 9, vars: 11, consts: [[4, "ngIf"], [1, "ui-organizationchart-lines", 3, "ngClass"], [1, "ui-organizationchart-line-down"], [1, "ui-organizationchart-nodes", 3, "ngClass"], ["colspan", "2", 4, "ngFor", "ngForOf"], [3, "ngClass", "click"], ["tabindex", "0", "class", "ui-node-toggler", 3, "click", "keydown.enter", 4, "ngIf"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], ["tabindex", "0", 1, "ui-node-toggler", 3, "click", "keydown.enter"], [1, "ui-node-toggler-icon", "pi", 3, "ngClass"], ["ngFor", "", 3, "ngForOf"], [1, "ui-organizationchart-line-left", 3, "ngClass"], [1, "ui-organizationchart-line-right", 3, "ngClass"], ["colspan", "2"], ["pOrganizationChartNode", "", 1, "ui-organizationchart-table", 3, "node"]], template: function OrganizationChartNode_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, OrganizationChartNode_tr_0_Template, 6, 11, "tr", 0);
        ɵngcc0.ɵɵelementStart(1, "tr", 1);
        ɵngcc0.ɵɵelementStart(2, "td");
        ɵngcc0.ɵɵelement(3, "div", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "tr", 1);
        ɵngcc0.ɵɵtemplate(5, OrganizationChartNode_ng_container_5_Template, 3, 1, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(6, OrganizationChartNode_ng_container_6_Template, 2, 1, "ng-container", 0);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "tr", 3);
        ɵngcc0.ɵɵtemplate(8, OrganizationChartNode_td_8_Template, 2, 1, "td", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.node);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", !ctx.leaf && ctx.node.expanded ? "ui-organizationchart-node-visible" : "ui-organizationchart-node-hidden")("@childState", "in");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("colspan", ctx.colspan);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", !ctx.leaf && ctx.node.expanded ? "ui-organizationchart-node-visible" : "ui-organizationchart-node-hidden")("@childState", "in");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.node.children && ctx.node.children.length === 1);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.node.children && ctx.node.children.length > 1);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", !ctx.leaf && ctx.node.expanded ? "ui-organizationchart-node-visible" : "ui-organizationchart-node-hidden")("@childState", "in");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.node.children);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet, OrganizationChartNode], encapsulation: 2, data: { animation: [
            animations.trigger('childState', [
                animations.state('in', animations.style({ opacity: 1 })),
                animations.transition('void => *', [
                    animations.style({ opacity: 0 }),
                    animations.animate(150)
                ]),
                animations.transition('* => void', [
                    animations.animate(150, animations.style({ opacity: 0 }))
                ])
            ])
        ] } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OrganizationChartNode, [{
        type: core.Component,
        args: [{
                selector: '[pOrganizationChartNode]',
                template: "\n        <tr *ngIf=\"node\">\n            <td [attr.colspan]=\"colspan\">\n                <div class=\"ui-organizationchart-node-content ui-widget-content ui-corner-all {{node.styleClass}}\" \n                    [ngClass]=\"{'ui-organizationchart-selectable-node': chart.selectionMode && node.selectable !== false,'ui-state-highlight':isSelected()}\"\n                    (click)=\"onNodeClick($event,node)\">\n                    <div *ngIf=\"!chart.getTemplateForNode(node)\">{{node.label}}</div>\n                    <div *ngIf=\"chart.getTemplateForNode(node)\">\n                        <ng-container *ngTemplateOutlet=\"chart.getTemplateForNode(node); context: {$implicit: node}\"></ng-container>\n                    </div>\n                    <a *ngIf=\"!leaf\" tabindex=\"0\" class=\"ui-node-toggler\" (click)=\"toggleNode($event, node)\" (keydown.enter)=\"toggleNode($event, node)\">\n                        <i class=\"ui-node-toggler-icon pi\" [ngClass]=\"{'pi-chevron-down': node.expanded, 'pi-chevron-up': !node.expanded}\"></i>\n                    </a>\n                </div>\n            </td>\n        </tr>\n        <tr [ngClass]=\"!leaf&&node.expanded ? 'ui-organizationchart-node-visible' : 'ui-organizationchart-node-hidden'\" class=\"ui-organizationchart-lines\" [@childState]=\"'in'\">\n            <td [attr.colspan]=\"colspan\">\n                <div class=\"ui-organizationchart-line-down\"></div>\n            </td>\n        </tr>\n        <tr [ngClass]=\"!leaf&&node.expanded ? 'ui-organizationchart-node-visible' : 'ui-organizationchart-node-hidden'\" class=\"ui-organizationchart-lines\" [@childState]=\"'in'\">\n            <ng-container *ngIf=\"node.children && node.children.length === 1\">\n                <td [attr.colspan]=\"colspan\">\n                    <div class=\"ui-organizationchart-line-down\"></div>\n                </td>\n            </ng-container>\n            <ng-container *ngIf=\"node.children && node.children.length > 1\">\n                <ng-template ngFor let-child [ngForOf]=\"node.children\" let-first=\"first\" let-last=\"last\">\n                    <td class=\"ui-organizationchart-line-left\" [ngClass]=\"{'ui-organizationchart-line-top':!first}\">&nbsp;</td>\n                    <td class=\"ui-organizationchart-line-right\" [ngClass]=\"{'ui-organizationchart-line-top':!last}\">&nbsp;</td>\n                </ng-template>\n            </ng-container>\n        </tr>\n        <tr [ngClass]=\"!leaf&&node.expanded ? 'ui-organizationchart-node-visible' : 'ui-organizationchart-node-hidden'\" class=\"ui-organizationchart-nodes\" [@childState]=\"'in'\">\n            <td *ngFor=\"let child of node.children\" colspan=\"2\">\n                <table class=\"ui-organizationchart-table\" pOrganizationChartNode [node]=\"child\"></table>\n            </td>\n        </tr>\n    ",
                animations: [
                    animations.trigger('childState', [
                        animations.state('in', animations.style({ opacity: 1 })),
                        animations.transition('void => *', [
                            animations.style({ opacity: 0 }),
                            animations.animate(150)
                        ]),
                        animations.transition('* => void', [
                            animations.animate(150, animations.style({ opacity: 0 }))
                        ])
                    ])
                ]
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: core.Inject,
                args: [core.forwardRef(function () { return OrganizationChart; })]
            }] }]; }, { node: [{
            type: core.Input
        }], root: [{
            type: core.Input
        }], first: [{
            type: core.Input
        }], last: [{
            type: core.Input
        }] }); })();
        return OrganizationChartNode;
    }());
    var OrganizationChart = /** @class */ (function () {
        function OrganizationChart(el) {
            this.el = el;
            this.preserveSpace = true;
            this.selectionChange = new core.EventEmitter();
            this.onNodeSelect = new core.EventEmitter();
            this.onNodeUnselect = new core.EventEmitter();
            this.onNodeExpand = new core.EventEmitter();
            this.onNodeCollapse = new core.EventEmitter();
        }
        Object.defineProperty(OrganizationChart.prototype, "root", {
            get: function () {
                return this.value && this.value.length ? this.value[0] : null;
            },
            enumerable: true,
            configurable: true
        });
        OrganizationChart.prototype.ngAfterContentInit = function () {
            var _this = this;
            if (this.templates.length) {
                this.templateMap = {};
            }
            this.templates.forEach(function (item) {
                _this.templateMap[item.getType()] = item.template;
            });
        };
        OrganizationChart.prototype.getTemplateForNode = function (node) {
            if (this.templateMap)
                return node.type ? this.templateMap[node.type] : this.templateMap['default'];
            else
                return null;
        };
        OrganizationChart.prototype.onNodeClick = function (event, node) {
            var eventTarget = event.target;
            if (eventTarget.className && (eventTarget.className.indexOf('ui-node-toggler') !== -1 || eventTarget.className.indexOf('ui-node-toggler-icon') !== -1)) {
                return;
            }
            else if (this.selectionMode) {
                if (node.selectable === false) {
                    return;
                }
                var index_1 = this.findIndexInSelection(node);
                var selected = (index_1 >= 0);
                if (this.selectionMode === 'single') {
                    if (selected) {
                        this.selection = null;
                        this.onNodeUnselect.emit({ originalEvent: event, node: node });
                    }
                    else {
                        this.selection = node;
                        this.onNodeSelect.emit({ originalEvent: event, node: node });
                    }
                }
                else if (this.selectionMode === 'multiple') {
                    if (selected) {
                        this.selection = this.selection.filter(function (val, i) { return i != index_1; });
                        this.onNodeUnselect.emit({ originalEvent: event, node: node });
                    }
                    else {
                        this.selection = __spread(this.selection || [], [node]);
                        this.onNodeSelect.emit({ originalEvent: event, node: node });
                    }
                }
                this.selectionChange.emit(this.selection);
            }
        };
        OrganizationChart.prototype.findIndexInSelection = function (node) {
            var index = -1;
            if (this.selectionMode && this.selection) {
                if (this.selectionMode === 'single') {
                    index = (this.selection == node) ? 0 : -1;
                }
                else if (this.selectionMode === 'multiple') {
                    for (var i = 0; i < this.selection.length; i++) {
                        if (this.selection[i] == node) {
                            index = i;
                            break;
                        }
                    }
                }
            }
            return index;
        };
        OrganizationChart.prototype.isSelected = function (node) {
            return this.findIndexInSelection(node) != -1;
        };
        OrganizationChart.ctorParameters = function () { return [
            { type: core.ElementRef }
        ]; };
        __decorate([
            core.Input()
        ], OrganizationChart.prototype, "value", void 0);
        __decorate([
            core.Input()
        ], OrganizationChart.prototype, "style", void 0);
        __decorate([
            core.Input()
        ], OrganizationChart.prototype, "styleClass", void 0);
        __decorate([
            core.Input()
        ], OrganizationChart.prototype, "selectionMode", void 0);
        __decorate([
            core.Input()
        ], OrganizationChart.prototype, "selection", void 0);
        __decorate([
            core.Input()
        ], OrganizationChart.prototype, "preserveSpace", void 0);
        __decorate([
            core.Output()
        ], OrganizationChart.prototype, "selectionChange", void 0);
        __decorate([
            core.Output()
        ], OrganizationChart.prototype, "onNodeSelect", void 0);
        __decorate([
            core.Output()
        ], OrganizationChart.prototype, "onNodeUnselect", void 0);
        __decorate([
            core.Output()
        ], OrganizationChart.prototype, "onNodeExpand", void 0);
        __decorate([
            core.Output()
        ], OrganizationChart.prototype, "onNodeCollapse", void 0);
        __decorate([
            core.ContentChildren(api.PrimeTemplate)
        ], OrganizationChart.prototype, "templates", void 0);
OrganizationChart.ɵfac = function OrganizationChart_Factory(t) { return new (t || OrganizationChart)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
OrganizationChart.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: OrganizationChart, selectors: [["p-organizationChart"]], contentQueries: function OrganizationChart_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, api.PrimeTemplate, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);
    } }, inputs: { preserveSpace: "preserveSpace", selection: "selection", value: "value", style: "style", styleClass: "styleClass", selectionMode: "selectionMode" }, outputs: { selectionChange: "selectionChange", onNodeSelect: "onNodeSelect", onNodeUnselect: "onNodeUnselect", onNodeExpand: "onNodeExpand", onNodeCollapse: "onNodeCollapse" }, decls: 2, vars: 7, consts: [[3, "ngStyle", "ngClass"], ["class", "ui-organizationchart-table", "pOrganizationChartNode", "", 3, "node", 4, "ngIf"], ["pOrganizationChartNode", "", 1, "ui-organizationchart-table", 3, "node"]], template: function OrganizationChart_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, OrganizationChart_table_1_Template, 1, 1, "table", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.styleClass);
        ɵngcc0.ɵɵproperty("ngStyle", ctx.style)("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c5, ctx.preserveSpace));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.root);
    } }, directives: [ɵngcc1.NgStyle, ɵngcc1.NgClass, ɵngcc1.NgIf, OrganizationChartNode], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OrganizationChart, [{
        type: core.Component,
        args: [{
                selector: 'p-organizationChart',
                template: "\n        <div [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{'ui-organizationchart ui-widget': true, 'ui-organizationchart-preservespace': preserveSpace}\">\n            <table class=\"ui-organizationchart-table\" pOrganizationChartNode [node]=\"root\" *ngIf=\"root\"></table>\n        </div>\n    ",
                changeDetection: core.ChangeDetectionStrategy.Default
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { preserveSpace: [{
            type: core.Input
        }], selectionChange: [{
            type: core.Output
        }], onNodeSelect: [{
            type: core.Output
        }], onNodeUnselect: [{
            type: core.Output
        }], onNodeExpand: [{
            type: core.Output
        }], onNodeCollapse: [{
            type: core.Output
        }], selection: [{
            type: core.Input
        }], value: [{
            type: core.Input
        }], style: [{
            type: core.Input
        }], styleClass: [{
            type: core.Input
        }], selectionMode: [{
            type: core.Input
        }], templates: [{
            type: core.ContentChildren,
            args: [api.PrimeTemplate]
        }] }); })();
        return OrganizationChart;
    }());
    var OrganizationChartModule = /** @class */ (function () {
        function OrganizationChartModule() {
        }
OrganizationChartModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: OrganizationChartModule });
OrganizationChartModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function OrganizationChartModule_Factory(t) { return new (t || OrganizationChartModule)(); }, imports: [[common.CommonModule], ɵngcc2.SharedModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OrganizationChartModule, { declarations: [OrganizationChart,
        OrganizationChartNode], imports: [ɵngcc1.CommonModule], exports: [OrganizationChart, ɵngcc2.SharedModule] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OrganizationChartModule, [{
        type: core.NgModule,
        args: [{
                imports: [common.CommonModule],
                exports: [OrganizationChart, api.SharedModule],
                declarations: [OrganizationChart, OrganizationChartNode]
            }]
    }], function () { return []; }, null); })();
        return OrganizationChartModule;
    }());

    exports.OrganizationChart = OrganizationChart;
    exports.OrganizationChartModule = OrganizationChartModule;
    exports.OrganizationChartNode = OrganizationChartNode;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=primeng-organizationchart.umd.js.map