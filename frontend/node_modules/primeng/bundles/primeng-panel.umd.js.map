{"version":3,"file":"primeng-panel.umd.js","sources":["ng:/primeng/panel/panel.ts"],"names":["EventEmitter","ElementRef","Input","Output","ContentChild","Footer","Component","trigger","state","style","transition","animate","ChangeDetectionStrategy","NgModule","CommonModule","SharedModule"],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,ElementRef,ContentChild,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule,Footer} from 'primeng/api';\nimport {BlockableUI} from 'primeng/api';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\n\nlet idx: number = 0;\n\n@Component({\n    selector: 'p-panel',\n    template: `\n        <div [attr.id]=\"id\" [ngClass]=\"'ui-panel ui-widget ui-widget-content ui-corner-all'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div [ngClass]=\"{'ui-panel-titlebar ui-widget-header ui-helper-clearfix ui-corner-all': true, 'ui-panel-titlebar-clickable': (toggleable && toggler === 'header')}\" \n                *ngIf=\"showHeader\" (click)=\"onHeaderClick($event)\" [attr.id]=\"id + '-titlebar'\">\n                <span class=\"ui-panel-title\" *ngIf=\"header\" [attr.id]=\"id + '_header'\">{{header}}</span>\n                <ng-content select=\"p-header\"></ng-content>\n                <a *ngIf=\"toggleable\" [attr.id]=\"id + '-label'\" class=\"ui-panel-titlebar-icon ui-panel-titlebar-toggler ui-corner-all ui-state-default\" tabindex=\"0\"\n                    (click)=\"onIconClick($event)\" (keydown.enter)=\"onIconClick($event)\" [attr.aria-controls]=\"id + '-content'\" role=\"tab\" [attr.aria-expanded]=\"!collapsed\">\n                    <span [class]=\"collapsed ? expandIcon : collapseIcon\"></span>\n                </a>\n            </div>\n            <div [attr.id]=\"id + '-content'\" class=\"ui-panel-content-wrapper\" [@panelContent]=\"collapsed ? {value: 'hidden', params: {transitionParams: animating ? transitionOptions : '0ms', height: '0', opacity:'0'}} : {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*', opacity: '1'}}\" (@panelContent.done)=\"onToggleDone($event)\"\n                [ngClass]=\"{'ui-panel-content-wrapper-overflown': collapsed||animating}\"\n                role=\"region\" [attr.aria-hidden]=\"collapsed\" [attr.aria-labelledby]=\"id  + '-titlebar'\">\n                <div class=\"ui-panel-content ui-widget-content\">\n                    <ng-content></ng-content>\n                </div>\n                \n                <div class=\"ui-panel-footer ui-widget-content\" *ngIf=\"footerFacet\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                </div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('panelContent', [\n            state('hidden', style({\n                height: '0',\n                opacity: 0\n            })),\n            state('void', style({\n                height: '{{height}}',\n                opacity: '{{opacity}}'\n            }), {params: {height: '0', opacity: '0'}}),\n            state('visible', style({\n                height: '*',\n                opacity: 1\n            })),\n            transition('visible <=> hidden', animate('{{transitionParams}}')),\n            transition('void => hidden', animate('{{transitionParams}}')),\n            transition('void => visible', animate('{{transitionParams}}'))\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Panel implements BlockableUI {\n\n    @Input() toggleable: boolean;\n\n    @Input() header: string;\n\n    @Input() collapsed: boolean = false;\n    \n    @Input() style: any;\n    \n    @Input() styleClass: string;\n    \n    @Input() expandIcon: string = 'pi pi-plus';\n    \n    @Input() collapseIcon: string = 'pi pi-minus';\n  \n    @Input() showHeader: boolean = true;\n\n    @Input() toggler: string = \"icon\";\n    \n    @Output() collapsedChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBeforeToggle: EventEmitter<any> = new EventEmitter();\n\n    @Output() onAfterToggle: EventEmitter<any> = new EventEmitter();\n    \n    @Input() transitionOptions: string = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n\n    @ContentChild(Footer) footerFacet;\n    \n    animating: boolean;\n    \n    id: string = `ui-panel-${idx++}`;\n    \n    constructor(private el: ElementRef) {}\n\n    onHeaderClick(event: Event) {\n        if (this.toggler === 'header') {\n            this.toggle(event);\n        }\n    }\n\n    onIconClick(event: Event) {\n        if (this.toggler === 'icon') {\n            this.toggle(event);\n        }\n    }\n    \n    toggle(event: Event) {\n        if (this.animating) {\n            return false;\n        }\n        \n        this.animating = true;\n        this.onBeforeToggle.emit({originalEvent: event, collapsed: this.collapsed});\n        \n        if (this.toggleable) {\n            if (this.collapsed)\n                this.expand(event);\n            else\n                this.collapse(event);\n        }\n        \n        event.preventDefault();\n    }\n    \n    expand(event) {\n        this.collapsed = false;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    \n    collapse(event) {\n        this.collapsed = true;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    \n    getBlockableElement(): HTMLElementÂ {\n        return this.el.nativeElement.children[0];\n    }\n    \n    onToggleDone(event: Event) {\n        this.animating = false;\n        this.onAfterToggle.emit({originalEvent: event, collapsed: this.collapsed});\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Panel,SharedModule],\n    declarations: [Panel]\n})\nexport class PanelModule { }\n"]}