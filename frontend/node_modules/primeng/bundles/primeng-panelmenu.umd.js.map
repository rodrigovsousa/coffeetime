{"version":3,"file":"primeng-panelmenu.umd.js","sources":["ng:/primeng/panelmenu/panelmenu.ts"],"names":["ChangeDetectorRef","Input","Component","trigger","state","style","transition","animate","ChangeDetectionStrategy","NgModule","CommonModule","RouterModule"],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,ChangeDetectorRef,ChangeDetectionStrategy} from '@angular/core';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\nimport {CommonModule} from '@angular/common';\nimport {MenuItem} from 'primeng/api';\nimport {RouterModule} from '@angular/router';\n\nexport class BasePanelMenuItem {\n\n    constructor(private ref: ChangeDetectorRef) {}\n        \n    handleClick(event, item) {\n        if (item.disabled) {\n            event.preventDefault();\n            return;\n        }\n        \n        item.expanded = !item.expanded;\n        this.ref.detectChanges();\n        \n        if (!item.url) {\n            event.preventDefault();\n        }\n                   \n        if (item.command) {\n            item.command({\n                originalEvent: event,\n                item: item\n            });\n        }\n    }\n}\n\n@Component({\n    selector: 'p-panelMenuSub',\n    template: `\n        <ul class=\"ui-submenu-list\" [@submenu]=\"expanded ? {value: 'visible', params: {transitionParams: transitionOptions, height: '*'}} : {value: 'hidden', params: {transitionParams: transitionOptions, height: '0'}}\" role=\"tree\">\n            <ng-template ngFor let-child [ngForOf]=\"item.items\">\n                <li *ngIf=\"child.separator\" class=\"ui-menu-separator ui-widget-content\" role=\"separator\">\n                <li *ngIf=\"!child.separator\" class=\"ui-menuitem ui-corner-all\" [ngClass]=\"child.styleClass\" [class.ui-helper-hidden]=\"child.visible === false\" [ngStyle]=\"child.style\">\n                    <a *ngIf=\"!child.routerLink\" [attr.href]=\"child.url\" class=\"ui-menuitem-link ui-corner-all\" [attr.tabindex]=\"!item.expanded ? null : child.disabled ? null : '0'\" [attr.id]=\"child.id\"\n                        [ngClass]=\"{'ui-state-disabled':child.disabled, 'ui-state-active': child.expanded}\" role=\"treeitem\" [attr.aria-expanded]=\"child.expanded\"\n                        (click)=\"handleClick($event,child)\" [attr.target]=\"child.target\" [attr.title]=\"child.title\">\n                        <span class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-caret-right':!child.expanded,'pi-caret-down':child.expanded}\" *ngIf=\"child.items\"></span\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"child.icon\" *ngIf=\"child.icon\"></span\n                        ><span class=\"ui-menuitem-text\">{{child.label}}</span>\n                    </a>\n                    <a *ngIf=\"child.routerLink\" [routerLink]=\"child.routerLink\" [queryParams]=\"child.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" [routerLinkActiveOptions]=\"child.routerLinkActiveOptions||{exact:false}\" class=\"ui-menuitem-link ui-corner-all\" \n                        [ngClass]=\"{'ui-state-disabled':child.disabled}\" [attr.tabindex]=\"!item.expanded ? null : child.disabled ? null : '0'\" [attr.id]=\"child.id\" role=\"treeitem\" [attr.aria-expanded]=\"child.expanded\"\n                        (click)=\"handleClick($event,child)\" [attr.target]=\"child.target\" [attr.title]=\"child.title\"\n                        [fragment]=\"child.fragment\" [queryParamsHandling]=\"child.queryParamsHandling\" [preserveFragment]=\"child.preserveFragment\" [skipLocationChange]=\"child.skipLocationChange\" [replaceUrl]=\"child.replaceUrl\" [state]=\"child.state\">\n                        <span class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-caret-right':!child.expanded,'pi-caret-down':child.expanded}\" *ngIf=\"child.items\"></span\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"child.icon\" *ngIf=\"child.icon\"></span\n                        ><span class=\"ui-menuitem-text\">{{child.label}}</span>\n                    </a>\n                    <p-panelMenuSub [item]=\"child\" [expanded]=\"child.expanded\" [transitionOptions]=\"transitionOptions\" *ngIf=\"child.items\"></p-panelMenuSub>\n                </li>\n            </ng-template>\n        </ul>\n    `,\n    animations: [\n        trigger('submenu', [\n            state('hidden', style({\n                height: '0px'\n            })),\n            state('void', style({\n                height: '{{height}}'\n            }), {params: {height: '0'}}),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible => hidden', animate('{{transitionParams}}')),\n            transition('hidden => visible', animate('{{transitionParams}}')),\n            transition('void => hidden', animate('{{transitionParams}}')),\n            transition('void => visible', animate('{{transitionParams}}'))\n        ])\n    ]\n})\nexport class PanelMenuSub extends BasePanelMenuItem {\n    \n    @Input() item: MenuItem;\n    \n    @Input() expanded: boolean;\n\n    @Input() transitionOptions: string;\n\n    constructor(ref: ChangeDetectorRef) {\n        super(ref);\n    }\n}\n\n@Component({\n    selector: 'p-panelMenu',\n    template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'ui-panelmenu ui-widget'\">\n            <ng-container *ngFor=\"let item of model;let f=first;let l=last;\">\n                <div class=\"ui-panelmenu-panel\" [ngClass]=\"{'ui-helper-hidden': item.visible === false}\">\n                    <div [ngClass]=\"{'ui-widget ui-panelmenu-header ui-state-default':true,'ui-corner-top':f,'ui-corner-bottom':l&&!item.expanded,\n                    'ui-state-active':item.expanded,'ui-state-disabled':item.disabled}\" [class]=\"item.styleClass\" [ngStyle]=\"item.style\">\n                        <a *ngIf=\"!item.routerLink\" [attr.href]=\"item.url\" (click)=\"handleClick($event,item)\" [attr.tabindex]=\"item.disabled ? null : '0'\" [attr.id]=\"item.id\"\n                           [attr.target]=\"item.target\" [attr.title]=\"item.title\" class=\"ui-panelmenu-header-link\" [attr.aria-expanded]=\"item.expanded\" [attr.id]=\"item.id + '_header'\" [attr.aria-controls]=\"item.id +'_content'\">\n                        <span *ngIf=\"item.items\" class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-chevron-right':!item.expanded,'pi-chevron-down':item.expanded}\"></span\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"item.icon\" *ngIf=\"item.icon\"></span\n                        ><span class=\"ui-menuitem-text\">{{item.label}}</span>\n                        </a>\n                        <a *ngIf=\"item.routerLink\" [routerLink]=\"item.routerLink\" [queryParams]=\"item.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\"\n                           (click)=\"handleClick($event,item)\" [attr.target]=\"item.target\" [attr.title]=\"item.title\" class=\"ui-panelmenu-header-link\" [attr.id]=\"item.id\" [attr.tabindex]=\"item.disabled ? null : '0'\"\n                           [fragment]=\"item.fragment\" [queryParamsHandling]=\"item.queryParamsHandling\" [preserveFragment]=\"item.preserveFragment\" [skipLocationChange]=\"item.skipLocationChange\" [replaceUrl]=\"item.replaceUrl\" [state]=\"item.state\">\n                        <span *ngIf=\"item.items\" class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-chevron-right':!item.expanded,'pi-chevron-down':item.expanded}\"></span\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"item.icon\" *ngIf=\"item.icon\"></span\n                        ><span class=\"ui-menuitem-text\">{{item.label}}</span>\n                        </a>\n                    </div>\n                    <div *ngIf=\"item.items\" class=\"ui-panelmenu-content-wrapper\" [@rootItem]=\"item.expanded ? {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*'}} : {value: 'hidden', params: {transitionParams: transitionOptions, height: '0'}}\"  (@rootItem.done)=\"onToggleDone()\"\n                         [ngClass]=\"{'ui-panelmenu-content-wrapper-overflown': !item.expanded||animating}\">\n                        <div class=\"ui-panelmenu-content ui-widget-content\" role=\"region\" [attr.id]=\"item.id +'_content' \" [attr.aria-labelledby]=\"item.id +'_header'\">\n                            <p-panelMenuSub [item]=\"item\" [expanded]=\"true\" [transitionOptions]=\"transitionOptions\" class=\"ui-panelmenu-root-submenu\"></p-panelMenuSub>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    animations: [\n        trigger('rootItem', [\n            state('hidden', style({\n                height: '0px'\n            })),\n            state('void', style({\n                height: '{{height}}'\n            }), {params: {height: '0'}}),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible => hidden', animate('{{transitionParams}}')),\n            transition('hidden => visible', animate('{{transitionParams}}')),\n            transition('void => hidden', animate('{{transitionParams}}')),\n            transition('void => visible', animate('{{transitionParams}}'))\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class PanelMenu extends BasePanelMenuItem {\n    \n    @Input() model: MenuItem[];\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() multiple: boolean = true;\n\n    @Input() transitionOptions: string = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n    \n    public animating: boolean;\n\n    constructor(ref: ChangeDetectorRef) {\n        super(ref);\n    }\n                \n    collapseAll() {\n    \tfor(let item of this.model) {\n    \t\tif (item.expanded) {\n    \t\t\titem.expanded = false;\n    \t\t}\n    \t}\n    }\n\n    handleClick(event, item) {\n    \tif (!this.multiple) {\n            for(let modelItem of this.model) {\n        \t\tif (item !== modelItem && modelItem.expanded) {\n        \t\t\tmodelItem.expanded = false;\n        \t\t}\n        \t}\n    \t}\n        \n        this.animating = true;\n        super.handleClick(event, item);\n    }\n    \n    onToggleDone() {\n        this.animating = false;\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule,RouterModule],\n    exports: [PanelMenu,RouterModule],\n    declarations: [PanelMenu,PanelMenuSub]\n})\nexport class PanelMenuModule { }\n"]}