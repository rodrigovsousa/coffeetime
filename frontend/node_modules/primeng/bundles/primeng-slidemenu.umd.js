(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/common'),require('@angular/router'),exports, require('@angular/core'), require('@angular/animations'), require('@angular/common'), require('primeng/dom'), require('@angular/router')) :
    typeof define === 'function' && define.amd ? define('primeng/slidemenu', ['@angular/core','@angular/common','@angular/router','exports', '@angular/core', '@angular/animations', '@angular/common', 'primeng/dom', '@angular/router'], factory) :
    (global = global || self, factory(global.ng.core,global.ng.common,global.ng.router,(global.primeng = global.primeng || {}, global.primeng.slidemenu = {}), global.ng.core, global.ng.animations, global.ng.common, global.primeng.dom, global.ng.router));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,exports, core, animations, common, dom, router) { 
var _c0 = function (a0) { return { "ui-helper-hidden": a0 }; };
function SlideMenuSub_ng_template_1_li_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "li", 4);
} if (rf & 2) {
    var child_r574 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c0, child_r574.visible === false));
} }
function SlideMenuSub_ng_template_1_li_1_a_2_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 14);
} if (rf & 2) {
    var child_r574 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵproperty("ngClass", child_r574.icon);
} }
function SlideMenuSub_ng_template_1_li_1_a_2_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 15);
} }
var _c1 = function (a0) { return { "ui-state-disabled": a0 }; };
function SlideMenuSub_ng_template_1_li_1_a_2_Template(rf, ctx) { if (rf & 1) {
    var _r586 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 10);
    ɵngcc0.ɵɵlistener("click", function SlideMenuSub_ng_template_1_li_1_a_2_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r586); ɵngcc0.ɵɵnextContext(); var _r578 = ɵngcc0.ɵɵreference(1); var child_r574 = ɵngcc0.ɵɵnextContext().$implicit; var ctx_r585 = ɵngcc0.ɵɵnextContext(); return ctx_r585.itemClick($event, child_r574, _r578); });
    ɵngcc0.ɵɵtemplate(1, SlideMenuSub_ng_template_1_li_1_a_2_span_1_Template, 1, 1, "span", 11);
    ɵngcc0.ɵɵelementStart(2, "span", 12);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, SlideMenuSub_ng_template_1_li_1_a_2_span_4_Template, 1, 0, "span", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var child_r574 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(9, _c1, child_r574.disabled));
    ɵngcc0.ɵɵattribute("href", child_r574.url, ɵngcc0.ɵɵsanitizeUrl)("target", child_r574.target)("title", child_r574.title)("id", child_r574.id)("tabindex", child_r574.disabled ? null : "0");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r574.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(child_r574.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r574.items);
} }
function SlideMenuSub_ng_template_1_li_1_a_3_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 14);
} if (rf & 2) {
    var child_r574 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵproperty("ngClass", child_r574.icon);
} }
function SlideMenuSub_ng_template_1_li_1_a_3_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 15);
} }
var _c2 = function () { return { exact: false }; };
function SlideMenuSub_ng_template_1_li_1_a_3_Template(rf, ctx) { if (rf & 1) {
    var _r593 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 16);
    ɵngcc0.ɵɵlistener("click", function SlideMenuSub_ng_template_1_li_1_a_3_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r593); ɵngcc0.ɵɵnextContext(); var _r578 = ɵngcc0.ɵɵreference(1); var child_r574 = ɵngcc0.ɵɵnextContext().$implicit; var ctx_r592 = ɵngcc0.ɵɵnextContext(); return ctx_r592.itemClick($event, child_r574, _r578); });
    ɵngcc0.ɵɵtemplate(1, SlideMenuSub_ng_template_1_li_1_a_3_span_1_Template, 1, 1, "span", 11);
    ɵngcc0.ɵɵelementStart(2, "span", 12);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, SlideMenuSub_ng_template_1_li_1_a_3_span_4_Template, 1, 0, "span", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var child_r574 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("routerLink", child_r574.routerLink)("queryParams", child_r574.queryParams)("routerLinkActive", "ui-menuitem-link-active")("routerLinkActiveOptions", child_r574.routerLinkActiveOptions || ɵngcc0.ɵɵpureFunction0(19, _c2))("href", child_r574.url, ɵngcc0.ɵɵsanitizeUrl)("ngClass", ɵngcc0.ɵɵpureFunction1(20, _c1, child_r574.disabled))("fragment", child_r574.fragment)("queryParamsHandling", child_r574.queryParamsHandling)("preserveFragment", child_r574.preserveFragment)("skipLocationChange", child_r574.skipLocationChange)("replaceUrl", child_r574.replaceUrl)("state", child_r574.state);
    ɵngcc0.ɵɵattribute("target", child_r574.target)("title", child_r574.title)("id", child_r574.id)("tabindex", child_r574.disabled ? null : "0");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r574.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(child_r574.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r574.items);
} }
function SlideMenuSub_ng_template_1_li_1_p_slideMenuSub_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "p-slideMenuSub", 17);
} if (rf & 2) {
    var child_r574 = ɵngcc0.ɵɵnextContext(2).$implicit;
    var ctx_r581 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("item", child_r574)("index", ctx_r581.index + 1)("menuWidth", ctx_r581.menuWidth);
} }
var _c3 = function (a1, a2) { return { "ui-menuitem ui-widget ui-corner-all": true, "ui-menuitem-active": a1, "ui-helper-hidden": a2 }; };
function SlideMenuSub_ng_template_1_li_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 5, 6);
    ɵngcc0.ɵɵtemplate(2, SlideMenuSub_ng_template_1_li_1_a_2_Template, 5, 11, "a", 7);
    ɵngcc0.ɵɵtemplate(3, SlideMenuSub_ng_template_1_li_1_a_3_Template, 5, 22, "a", 8);
    ɵngcc0.ɵɵtemplate(4, SlideMenuSub_ng_template_1_li_1_p_slideMenuSub_4_Template, 1, 3, "p-slideMenuSub", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var _r578 = ɵngcc0.ɵɵreference(1);
    var child_r574 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r576 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(child_r574.styleClass);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(7, _c3, _r578 == ctx_r576.activeItem, child_r574.visible === false))("ngStyle", child_r574.style);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !child_r574.routerLink);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r574.routerLink);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r574.items);
} }
function SlideMenuSub_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, SlideMenuSub_ng_template_1_li_0_Template, 1, 3, "li", 2);
    ɵngcc0.ɵɵtemplate(1, SlideMenuSub_ng_template_1_li_1_Template, 5, 10, "li", 3);
} if (rf & 2) {
    var child_r574 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngIf", child_r574.separator);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !child_r574.separator);
} }
var _c4 = function (a0, a1, a2) { return { "ui-slidemenu-rootlist": a0, "ui-submenu-list": a1, "ui-active-submenu": a2 }; };
var _c5 = ["container"];
var _c6 = ["backward"];
var _c7 = ["slideMenuContent"];
var _c8 = function (a1) { return { "ui-slidemenu ui-widget ui-widget-content ui-corner-all": true, "ui-slidemenu-dynamic ui-shadow": a1 }; };
var _c9 = function (a0, a1) { return { showTransitionParams: a0, hideTransitionParams: a1 }; };
var _c10 = function (a1) { return { value: "visible", params: a1 }; };
function SlideMenu_div_0_Template(rf, ctx) { if (rf & 1) {
    var _r603 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1, 2);
    ɵngcc0.ɵɵlistener("click", function SlideMenu_div_0_Template_div_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r603); var ctx_r602 = ɵngcc0.ɵɵnextContext(); return ctx_r602.onClick($event); })("@overlayAnimation.start", function SlideMenu_div_0_Template_div_animation_overlayAnimation_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r603); var ctx_r604 = ɵngcc0.ɵɵnextContext(); return ctx_r604.onOverlayAnimationStart($event); });
    ɵngcc0.ɵɵelementStart(2, "div", 3);
    ɵngcc0.ɵɵelementStart(3, "div", 4, 5);
    ɵngcc0.ɵɵelement(5, "p-slideMenuSub", 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 7, 8);
    ɵngcc0.ɵɵlistener("click", function SlideMenu_div_0_Template_div_click_6_listener() { ɵngcc0.ɵɵrestoreView(_r603); var ctx_r605 = ɵngcc0.ɵɵnextContext(); return ctx_r605.goBack(); });
    ɵngcc0.ɵɵelement(8, "span", 9);
    ɵngcc0.ɵɵelementStart(9, "span");
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r598 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r598.styleClass);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(16, _c8, ctx_r598.popup))("ngStyle", ctx_r598.style)("@overlayAnimation", ɵngcc0.ɵɵpureFunction1(21, _c10, ɵngcc0.ɵɵpureFunction2(18, _c9, ctx_r598.showTransitionOptions, ctx_r598.hideTransitionOptions)))("@.disabled", ctx_r598.popup !== true);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵstyleProp("height", ctx_r598.left ? ctx_r598.viewportHeight + "px" : "auto");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("item", ctx_r598.model)("index", 0)("menuWidth", ctx_r598.menuWidth)("effectDuration", ctx_r598.effectDuration)("easing", ctx_r598.easing);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("display", ctx_r598.left ? "block" : "none");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ctx_r598.backLabel);
} }
'use strict';

    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __param = (this && this.__param) || function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };
    var SlideMenuSub = /** @class */ (function () {
        function SlideMenuSub(slideMenu) {
            this.backLabel = 'Back';
            this.easing = 'ease-out';
            this.slideMenu = slideMenu;
        }
        SlideMenuSub.prototype.itemClick = function (event, item, listitem) {
            var _this = this;
            if (item.disabled) {
                event.preventDefault();
                return;
            }
            if (!item.url) {
                event.preventDefault();
            }
            if (item.command) {
                item.command({
                    originalEvent: event,
                    item: item
                });
            }
            if (item.items && !this.slideMenu.animating) {
                this.slideMenu.left -= this.slideMenu.menuWidth;
                this.activeItem = listitem;
                this.slideMenu.animating = true;
                setTimeout(function () { return _this.slideMenu.animating = false; }, this.effectDuration);
            }
            if (!item.items && this.slideMenu.popup) {
                this.slideMenu.hide();
            }
        };
        SlideMenuSub.prototype.ngOnDestroy = function () {
            this.activeItem = null;
        };
        SlideMenuSub.ctorParameters = function () { return [
            { type: undefined, decorators: [{ type: core.Inject, args: [core.forwardRef(function () { return SlideMenu; }),] }] }
        ]; };
        __decorate([
            core.Input()
        ], SlideMenuSub.prototype, "item", void 0);
        __decorate([
            core.Input()
        ], SlideMenuSub.prototype, "root", void 0);
        __decorate([
            core.Input()
        ], SlideMenuSub.prototype, "backLabel", void 0);
        __decorate([
            core.Input()
        ], SlideMenuSub.prototype, "menuWidth", void 0);
        __decorate([
            core.Input()
        ], SlideMenuSub.prototype, "effectDuration", void 0);
        __decorate([
            core.Input()
        ], SlideMenuSub.prototype, "easing", void 0);
        __decorate([
            core.Input()
        ], SlideMenuSub.prototype, "index", void 0);
        SlideMenuSub = __decorate([ __param(0, core.Inject(core.forwardRef(function () { return SlideMenu; })))
        ], SlideMenuSub);
SlideMenuSub.ɵfac = function SlideMenuSub_Factory(t) { return new (t || SlideMenuSub)(ɵngcc0.ɵɵdirectiveInject(core.forwardRef(function () { return SlideMenu; }))); };
SlideMenuSub.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SlideMenuSub, selectors: [["p-slideMenuSub"]], inputs: { backLabel: "backLabel", easing: "easing", item: "item", root: "root", menuWidth: "menuWidth", effectDuration: "effectDuration", index: "index" }, decls: 2, vars: 16, consts: [[3, "ngClass"], ["ngFor", "", 3, "ngForOf"], ["class", "ui-menu-separator ui-widget-content", 3, "ngClass", 4, "ngIf"], [3, "ngClass", "class", "ngStyle", 4, "ngIf"], [1, "ui-menu-separator", "ui-widget-content", 3, "ngClass"], [3, "ngClass", "ngStyle"], ["listitem", ""], ["class", "ui-menuitem-link ui-corner-all", 3, "ngClass", "click", 4, "ngIf"], ["class", "ui-menuitem-link ui-corner-all", 3, "routerLink", "queryParams", "routerLinkActive", "routerLinkActiveOptions", "href", "ngClass", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "click", 4, "ngIf"], ["class", "ui-submenu", 3, "item", "index", "menuWidth", 4, "ngIf"], [1, "ui-menuitem-link", "ui-corner-all", 3, "ngClass", "click"], ["class", "ui-menuitem-icon", 3, "ngClass", 4, "ngIf"], [1, "ui-menuitem-text"], ["class", "ui-submenu-icon pi pi-fw pi-caret-right", 4, "ngIf"], [1, "ui-menuitem-icon", 3, "ngClass"], [1, "ui-submenu-icon", "pi", "pi-fw", "pi-caret-right"], [1, "ui-menuitem-link", "ui-corner-all", 3, "routerLink", "queryParams", "routerLinkActive", "routerLinkActiveOptions", "href", "ngClass", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "click"], [1, "ui-submenu", 3, "item", "index", "menuWidth"]], template: function SlideMenuSub_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "ul", 0);
        ɵngcc0.ɵɵtemplate(1, SlideMenuSub_ng_template_1_Template, 2, 2, "ng-template", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.menuWidth, "px")("left", ctx.root ? ctx.slideMenu.left : ctx.slideMenu.menuWidth, "px")("transition-property", ctx.root ? "left" : "none")("transition-duration", ctx.effectDuration + "ms")("transition-timing-function", ctx.easing);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(12, _c4, ctx.root, !ctx.root, 0 - ctx.slideMenu.left == ctx.index * ctx.menuWidth));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.root ? ctx.item : ctx.item.items);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc2.RouterLinkWithHref, ɵngcc2.RouterLinkActive, SlideMenuSub], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SlideMenuSub, [{
        type: core.Component,
        args: [{
                selector: 'p-slideMenuSub',
                template: "\n        <ul [ngClass]=\"{'ui-slidemenu-rootlist':root, 'ui-submenu-list':!root, 'ui-active-submenu': (-slideMenu.left == (index * menuWidth))}\"\n            [style.width.px]=\"menuWidth\" [style.left.px]=\"root ? slideMenu.left : slideMenu.menuWidth\"\n            [style.transitionProperty]=\"root ? 'left' : 'none'\" [style.transitionDuration]=\"effectDuration + 'ms'\" [style.transitionTimingFunction]=\"easing\">\n            <ng-template ngFor let-child [ngForOf]=\"(root ? item : item.items)\">\n                <li *ngIf=\"child.separator\" class=\"ui-menu-separator ui-widget-content\" [ngClass]=\"{'ui-helper-hidden': child.visible === false}\">\n                <li *ngIf=\"!child.separator\" #listitem [ngClass]=\"{'ui-menuitem ui-widget ui-corner-all':true,'ui-menuitem-active':listitem==activeItem,'ui-helper-hidden': child.visible === false}\"\n                    [class]=\"child.styleClass\" [ngStyle]=\"child.style\">\n                    <a *ngIf=\"!child.routerLink\" [attr.href]=\"child.url\" class=\"ui-menuitem-link ui-corner-all\" [attr.target]=\"child.target\" [attr.title]=\"child.title\" [attr.id]=\"child.id\"\n                        [ngClass]=\"{'ui-state-disabled':child.disabled}\" [attr.tabindex]=\"child.disabled ? null : '0'\" \n                        (click)=\"itemClick($event, child, listitem)\">\n                        <span class=\"ui-menuitem-icon\" *ngIf=\"child.icon\" [ngClass]=\"child.icon\"></span>\n                        <span class=\"ui-menuitem-text\">{{child.label}}</span>\n                        <span class=\"ui-submenu-icon pi pi-fw pi-caret-right\" *ngIf=\"child.items\"></span>\n                    </a>\n                    <a *ngIf=\"child.routerLink\" [routerLink]=\"child.routerLink\" [queryParams]=\"child.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" \n                        [routerLinkActiveOptions]=\"child.routerLinkActiveOptions||{exact:false}\" [href]=\"child.url\" class=\"ui-menuitem-link ui-corner-all\" \n                        [attr.target]=\"child.target\" [attr.title]=\"child.title\" [attr.id]=\"child.id\" [attr.tabindex]=\"child.disabled ? null : '0'\" \n                        [ngClass]=\"{'ui-state-disabled':child.disabled}\" \n                        (click)=\"itemClick($event, child, listitem)\"\n                        [fragment]=\"child.fragment\" [queryParamsHandling]=\"child.queryParamsHandling\" [preserveFragment]=\"child.preserveFragment\" [skipLocationChange]=\"child.skipLocationChange\" [replaceUrl]=\"child.replaceUrl\" [state]=\"child.state\">\n                        <span class=\"ui-menuitem-icon\" *ngIf=\"child.icon\" [ngClass]=\"child.icon\"></span>\n                        <span class=\"ui-menuitem-text\">{{child.label}}</span>\n                        <span class=\"ui-submenu-icon pi pi-fw pi-caret-right\" *ngIf=\"child.items\"></span>\n                    </a>\n                    <p-slideMenuSub class=\"ui-submenu\" [item]=\"child\" [index]=\"index + 1\" [menuWidth]=\"menuWidth\" *ngIf=\"child.items\"></p-slideMenuSub>\n                </li>\n            </ng-template>\n        </ul>\n    "
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: core.Inject,
                args: [core.forwardRef(function () { return SlideMenu; })]
            }] }]; }, { backLabel: [{
            type: core.Input
        }], easing: [{
            type: core.Input
        }], item: [{
            type: core.Input
        }], root: [{
            type: core.Input
        }], menuWidth: [{
            type: core.Input
        }], effectDuration: [{
            type: core.Input
        }], index: [{
            type: core.Input
        }] }); })();
        return SlideMenuSub;
    }());
    var SlideMenu = /** @class */ (function () {
        function SlideMenu(el, renderer, cd) {
            this.el = el;
            this.renderer = renderer;
            this.cd = cd;
            this.menuWidth = 190;
            this.viewportHeight = 180;
            this.effectDuration = 250;
            this.easing = 'ease-out';
            this.backLabel = 'Back';
            this.autoZIndex = true;
            this.baseZIndex = 0;
            this.showTransitionOptions = '225ms ease-out';
            this.hideTransitionOptions = '195ms ease-in';
            this.onShow = new core.EventEmitter();
            this.onHide = new core.EventEmitter();
            this.left = 0;
            this.animating = false;
        }
        SlideMenu.prototype.ngAfterViewChecked = function () {
            if (!this.viewportUpdated && !this.popup && this.containerViewChild) {
                this.updateViewPort();
                this.viewportUpdated = true;
            }
        };
        Object.defineProperty(SlideMenu.prototype, "container", {
            set: function (element) {
                this.containerViewChild = element;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SlideMenu.prototype, "backward", {
            set: function (element) {
                this.backwardViewChild = element;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SlideMenu.prototype, "slideMenuContent", {
            set: function (element) {
                this.slideMenuContentViewChild = element;
            },
            enumerable: true,
            configurable: true
        });
        SlideMenu.prototype.updateViewPort = function () {
            this.slideMenuContentViewChild.nativeElement.style.height = this.viewportHeight - dom.DomHandler.getHiddenElementOuterHeight(this.backwardViewChild.nativeElement) + 'px';
        };
        SlideMenu.prototype.toggle = function (event) {
            if (this.visible)
                this.hide();
            else
                this.show(event);
            this.preventDocumentDefault = true;
            this.cd.detectChanges();
        };
        SlideMenu.prototype.show = function (event) {
            this.target = event.currentTarget;
            this.visible = true;
            this.preventDocumentDefault = true;
        };
        SlideMenu.prototype.onOverlayAnimationStart = function (event) {
            switch (event.toState) {
                case 'visible':
                    if (this.popup) {
                        this.updateViewPort();
                        this.moveOnTop();
                        this.onShow.emit({});
                        this.appendOverlay();
                        dom.DomHandler.absolutePosition(this.containerViewChild.nativeElement, this.target);
                        this.bindDocumentClickListener();
                        this.bindDocumentResizeListener();
                    }
                    break;
                case 'void':
                    this.onOverlayHide();
                    this.onHide.emit({});
                    break;
            }
        };
        SlideMenu.prototype.appendOverlay = function () {
            if (this.appendTo) {
                if (this.appendTo === 'body')
                    document.body.appendChild(this.containerViewChild.nativeElement);
                else
                    dom.DomHandler.appendChild(this.containerViewChild.nativeElement, this.appendTo);
            }
        };
        SlideMenu.prototype.restoreOverlayAppend = function () {
            if (this.container && this.appendTo) {
                this.el.nativeElement.appendChild(this.containerViewChild.nativeElement);
            }
        };
        SlideMenu.prototype.moveOnTop = function () {
            if (this.autoZIndex) {
                this.containerViewChild.nativeElement.style.zIndex = String(this.baseZIndex + (++dom.DomHandler.zindex));
            }
        };
        SlideMenu.prototype.hide = function () {
            this.visible = false;
        };
        SlideMenu.prototype.onWindowResize = function () {
            this.hide();
        };
        SlideMenu.prototype.onClick = function (event) {
            this.preventDocumentDefault = true;
        };
        SlideMenu.prototype.goBack = function () {
            this.left += this.menuWidth;
        };
        SlideMenu.prototype.bindDocumentClickListener = function () {
            var _this = this;
            if (!this.documentClickListener) {
                this.documentClickListener = this.renderer.listen('document', 'click', function () {
                    if (!_this.preventDocumentDefault) {
                        _this.hide();
                        _this.cd.detectChanges();
                    }
                    _this.preventDocumentDefault = false;
                });
            }
        };
        SlideMenu.prototype.unbindDocumentClickListener = function () {
            if (this.documentClickListener) {
                this.documentClickListener();
                this.documentClickListener = null;
            }
        };
        SlideMenu.prototype.bindDocumentResizeListener = function () {
            this.documentResizeListener = this.onWindowResize.bind(this);
            window.addEventListener('resize', this.documentResizeListener);
        };
        SlideMenu.prototype.unbindDocumentResizeListener = function () {
            if (this.documentResizeListener) {
                window.removeEventListener('resize', this.documentResizeListener);
                this.documentResizeListener = null;
            }
        };
        SlideMenu.prototype.onOverlayHide = function () {
            this.unbindDocumentClickListener();
            this.unbindDocumentResizeListener();
            this.preventDocumentDefault = false;
            this.target = null;
            this.left = 0;
        };
        SlideMenu.prototype.ngOnDestroy = function () {
            if (this.popup) {
                this.restoreOverlayAppend();
                this.onOverlayHide();
            }
        };
        SlideMenu.ctorParameters = function () { return [
            { type: core.ElementRef },
            { type: core.Renderer2 },
            { type: core.ChangeDetectorRef }
        ]; };
        __decorate([
            core.Input()
        ], SlideMenu.prototype, "model", void 0);
        __decorate([
            core.Input()
        ], SlideMenu.prototype, "popup", void 0);
        __decorate([
            core.Input()
        ], SlideMenu.prototype, "style", void 0);
        __decorate([
            core.Input()
        ], SlideMenu.prototype, "styleClass", void 0);
        __decorate([
            core.Input()
        ], SlideMenu.prototype, "menuWidth", void 0);
        __decorate([
            core.Input()
        ], SlideMenu.prototype, "viewportHeight", void 0);
        __decorate([
            core.Input()
        ], SlideMenu.prototype, "effectDuration", void 0);
        __decorate([
            core.Input()
        ], SlideMenu.prototype, "easing", void 0);
        __decorate([
            core.Input()
        ], SlideMenu.prototype, "backLabel", void 0);
        __decorate([
            core.Input()
        ], SlideMenu.prototype, "appendTo", void 0);
        __decorate([
            core.Input()
        ], SlideMenu.prototype, "autoZIndex", void 0);
        __decorate([
            core.Input()
        ], SlideMenu.prototype, "baseZIndex", void 0);
        __decorate([
            core.Input()
        ], SlideMenu.prototype, "showTransitionOptions", void 0);
        __decorate([
            core.Input()
        ], SlideMenu.prototype, "hideTransitionOptions", void 0);
        __decorate([
            core.Output()
        ], SlideMenu.prototype, "onShow", void 0);
        __decorate([
            core.Output()
        ], SlideMenu.prototype, "onHide", void 0);
        __decorate([
            core.ViewChild('container')
        ], SlideMenu.prototype, "container", null);
        __decorate([
            core.ViewChild('backward')
        ], SlideMenu.prototype, "backward", null);
        __decorate([
            core.ViewChild('slideMenuContent')
        ], SlideMenu.prototype, "slideMenuContent", null);
SlideMenu.ɵfac = function SlideMenu_Factory(t) { return new (t || SlideMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
SlideMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SlideMenu, selectors: [["p-slideMenu"]], viewQuery: function SlideMenu_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c5, true);
        ɵngcc0.ɵɵviewQuery(_c6, true);
        ɵngcc0.ɵɵviewQuery(_c7, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.backward = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.slideMenuContent = _t.first);
    } }, inputs: { menuWidth: "menuWidth", viewportHeight: "viewportHeight", effectDuration: "effectDuration", easing: "easing", backLabel: "backLabel", autoZIndex: "autoZIndex", baseZIndex: "baseZIndex", showTransitionOptions: "showTransitionOptions", hideTransitionOptions: "hideTransitionOptions", model: "model", popup: "popup", style: "style", styleClass: "styleClass", appendTo: "appendTo" }, outputs: { onShow: "onShow", onHide: "onHide" }, decls: 1, vars: 1, consts: [[3, "ngClass", "class", "ngStyle", "click", 4, "ngIf"], [3, "ngClass", "ngStyle", "click"], ["container", ""], [1, "ui-slidemenu-wrapper"], [1, "ui-slidemenu-content"], ["slideMenuContent", ""], ["root", "root", 3, "item", "index", "menuWidth", "effectDuration", "easing"], [1, "ui-slidemenu-backward", "ui-widget-header", "ui-corner-all", 3, "click"], ["backward", ""], [1, "ui-slidemenu-backward-icon", "pi", "pi-fw", "pi-caret-left"]], template: function SlideMenu_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SlideMenu_div_0_Template, 11, 23, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.popup || ctx.visible);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgStyle, SlideMenuSub], encapsulation: 2, data: { animation: [
            animations.trigger('overlayAnimation', [
                animations.state('void', animations.style({
                    transform: 'translateY(5%)',
                    opacity: 0
                })),
                animations.state('visible', animations.style({
                    transform: 'translateY(0)',
                    opacity: 1
                })),
                animations.transition('void => visible', animations.animate('{{showTransitionParams}}')),
                animations.transition('visible => void', animations.animate('{{hideTransitionParams}}'))
            ])
        ] } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SlideMenu, [{
        type: core.Component,
        args: [{
                selector: 'p-slideMenu',
                template: "\n        <div #container [ngClass]=\"{'ui-slidemenu ui-widget ui-widget-content ui-corner-all':true, 'ui-slidemenu-dynamic ui-shadow':popup}\" \n            [class]=\"styleClass\" [ngStyle]=\"style\" (click)=\"onClick($event)\"\n            [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" [@.disabled]=\"popup !== true\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" *ngIf=\"!popup || visible\">\n            <div class=\"ui-slidemenu-wrapper\" [style.height]=\"left ? viewportHeight + 'px' : 'auto'\">\n                <div #slideMenuContent class=\"ui-slidemenu-content\">\n                    <p-slideMenuSub [item]=\"model\" root=\"root\" [index]=\"0\" [menuWidth]=\"menuWidth\" [effectDuration]=\"effectDuration\" [easing]=\"easing\"></p-slideMenuSub>\n                </div>\n                <div #backward class=\"ui-slidemenu-backward ui-widget-header ui-corner-all\" [style.display]=\"left ? 'block' : 'none'\" (click)=\"goBack()\">\n                    <span class=\"ui-slidemenu-backward-icon pi pi-fw pi-caret-left\"></span><span>{{backLabel}}</span>\n                </div>\n            </div>\n        </div>\n    ",
                animations: [
                    animations.trigger('overlayAnimation', [
                        animations.state('void', animations.style({
                            transform: 'translateY(5%)',
                            opacity: 0
                        })),
                        animations.state('visible', animations.style({
                            transform: 'translateY(0)',
                            opacity: 1
                        })),
                        animations.transition('void => visible', animations.animate('{{showTransitionParams}}')),
                        animations.transition('visible => void', animations.animate('{{hideTransitionParams}}'))
                    ])
                ],
                changeDetection: core.ChangeDetectionStrategy.Default
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }]; }, { menuWidth: [{
            type: core.Input
        }], viewportHeight: [{
            type: core.Input
        }], effectDuration: [{
            type: core.Input
        }], easing: [{
            type: core.Input
        }], backLabel: [{
            type: core.Input
        }], autoZIndex: [{
            type: core.Input
        }], baseZIndex: [{
            type: core.Input
        }], showTransitionOptions: [{
            type: core.Input
        }], hideTransitionOptions: [{
            type: core.Input
        }], onShow: [{
            type: core.Output
        }], onHide: [{
            type: core.Output
        }], container: [{
            type: core.ViewChild,
            args: ['container']
        }], backward: [{
            type: core.ViewChild,
            args: ['backward']
        }], slideMenuContent: [{
            type: core.ViewChild,
            args: ['slideMenuContent']
        }], model: [{
            type: core.Input
        }], popup: [{
            type: core.Input
        }], style: [{
            type: core.Input
        }], styleClass: [{
            type: core.Input
        }], appendTo: [{
            type: core.Input
        }] }); })();
        return SlideMenu;
    }());
    var SlideMenuModule = /** @class */ (function () {
        function SlideMenuModule() {
        }
SlideMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SlideMenuModule });
SlideMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SlideMenuModule_Factory(t) { return new (t || SlideMenuModule)(); }, imports: [[common.CommonModule, router.RouterModule], ɵngcc2.RouterModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SlideMenuModule, { declarations: [SlideMenu,
        SlideMenuSub], imports: [ɵngcc1.CommonModule, ɵngcc2.RouterModule], exports: [SlideMenu, ɵngcc2.RouterModule] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SlideMenuModule, [{
        type: core.NgModule,
        args: [{
                imports: [common.CommonModule, router.RouterModule],
                exports: [SlideMenu, router.RouterModule],
                declarations: [SlideMenu, SlideMenuSub]
            }]
    }], function () { return []; }, null); })();
        return SlideMenuModule;
    }());

    exports.SlideMenu = SlideMenu;
    exports.SlideMenuModule = SlideMenuModule;
    exports.SlideMenuSub = SlideMenuSub;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=primeng-slidemenu.umd.js.map