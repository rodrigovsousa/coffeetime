{"version":3,"file":"primeng-spinner.umd.js","sources":["ng:/primeng/spinner/spinner.ts"],"names":["NG_VALUE_ACCESSOR","forwardRef","EventEmitter","ElementRef","ChangeDetectorRef","Output","Input","ViewChild","Component","ChangeDetectionStrategy","NgModule","CommonModule","InputTextModule"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnInit,Input,Output,EventEmitter,forwardRef,ViewChild,ChangeDetectorRef,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const SPINNER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Spinner),\n    multi: true\n};\n\n@Component({\n    selector: 'p-spinner',\n    template: `\n        <span class=\"ui-spinner ui-widget ui-corner-all\">\n            <input #inputfield type=\"text\" [attr.id]=\"inputId\" [value]=\"formattedValue||null\" [attr.name]=\"name\" [attr.aria-valumin]=\"min\" [attr.aria-valuemax]=\"max\" [attr.aria-valuenow]=\"value\" [attr.aria-labelledby]=\"ariaLabelledBy\"\n            [attr.size]=\"size\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [attr.placeholder]=\"placeholder\" [disabled]=\"disabled\" [readonly]=\"readonly\" [attr.required]=\"required\"\n            (keydown)=\"onInputKeydown($event)\" (blur)=\"onInputBlur($event)\" (input)=\"onInput($event)\" (change)=\"onInputChange($event)\" (focus)=\"onInputFocus($event)\"\n            [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [ngClass]=\"'ui-spinner-input ui-inputtext ui-widget ui-state-default ui-corner-all'\">\n            <button type=\"button\" [ngClass]=\"{'ui-spinner-button ui-spinner-up ui-corner-tr ui-button ui-widget ui-state-default':true,'ui-state-disabled':disabled}\" [disabled]=\"disabled||readonly\" tabindex=\"-1\" [attr.readonly]=\"readonly\"\n                (mouseleave)=\"onUpButtonMouseleave($event)\" (mousedown)=\"onUpButtonMousedown($event)\" (mouseup)=\"onUpButtonMouseup($event)\">\n                <span class=\"ui-spinner-button-icon pi pi-caret-up ui-clickable\"></span>\n            </button>\n            <button type=\"button\" [ngClass]=\"{'ui-spinner-button ui-spinner-down ui-corner-br ui-button ui-widget ui-state-default':true,'ui-state-disabled':disabled}\" [disabled]=\"disabled||readonly\" tabindex=\"-1\" [attr.readonly]=\"readonly\"\n                (mouseleave)=\"onDownButtonMouseleave($event)\" (mousedown)=\"onDownButtonMousedown($event)\" (mouseup)=\"onDownButtonMouseup($event)\">\n                <span class=\"ui-spinner-button-icon pi pi-caret-down ui-clickable\"></span>\n            </button>\n        </span>\n    `,\n    host: {\n        '[class.ui-inputwrapper-filled]': 'filled',\n        '[class.ui-inputwrapper-focus]': 'focus'\n    },\n    providers: [SPINNER_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Spinner implements OnInit,ControlValueAccessor {\n    \n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n\n    @Input() min: number;\n\n    @Input() max: number;\n    \n    @Input() maxlength: number;\n    \n    @Input() size: number;\n\n    @Input() placeholder: string;\n\n    @Input() inputId: string;\n\n    @Input() disabled: boolean;\n    \n    @Input() readonly: boolean;\n\n    @Input() tabindex: number;\n            \n    @Input() required: boolean;\n\n    @Input() name: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() inputStyle: any;\n\n    @Input() inputStyleClass: string;\n\n    @Input() formatInput: boolean;\n\n    @Input() decimalSeparator: string;\n\n    @Input() thousandSeparator: string;\n\n    @Input() precision: number;\n    \n    value: any;\n\n    _step: number = 1;\n\n    formattedValue: string;\n        \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    keyPattern: RegExp = /[0-9\\+\\-]/;\n        \n    public timer: any;\n    \n    public focus: boolean;\n    \n    public filled: boolean;\n    \n    public negativeSeparator = '-';\n\n    localeDecimalSeparator: string;\n\n    localeThousandSeparator: string;\n\n    thousandRegExp: RegExp;\n\n    calculatedPrecision: number;\n    \n    @ViewChild('inputfield') inputfieldViewChild: ElementRef;\n\n    @Input() get step(): number {\n        return this._step;\n    }\n    set step(val:number) {\n        this._step = val;\n\n        if (this._step != null) {\n            let tokens = this.step.toString().split(/[,]|[.]/);\n            this.calculatedPrecision = tokens[1] ? tokens[1].length : undefined;\n        }\n    }\n    \n    constructor(public el: ElementRef, public cd: ChangeDetectorRef) {}\n\n    ngOnInit() {\n        if (this.formatInput) {\n            this.localeDecimalSeparator = (1.1).toLocaleString().substring(1, 2);\n            this.localeThousandSeparator = (1000).toLocaleString().substring(1, 2);\n            this.thousandRegExp = new RegExp(`[${this.thousandSeparator || this.localeThousandSeparator}]`, 'gim');\n\n            if (this.decimalSeparator && this.thousandSeparator && this.decimalSeparator === this.thousandSeparator) {\n                console.warn(\"thousandSeparator and decimalSeparator cannot have the same value.\");\n            }\n        }\n    }\n\n    repeat(event: Event, interval: number, dir: number) {\n        let i = interval||500;\n\n        this.clearTimer();\n        this.timer = setTimeout(() => {\n            this.repeat(event, 40, dir);\n        }, i);\n\n        this.spin(event, dir);\n    }\n    \n    spin(event: Event, dir: number) {\n        let step = this.step * dir;\n        let currentValue: number;\n        let precision = this.getPrecision();\n\n        if (this.value)\n            currentValue = (typeof this.value === 'string') ? this.parseValue(this.value) : this.value;\n        else\n            currentValue = 0;\n        \n        if (precision)\n            this.value = parseFloat(this.toFixed(currentValue + step, precision));\n        else\n            this.value = currentValue + step;\n    \n        if (this.maxlength !== undefined && this.value.toString().length > this.maxlength) {\n            this.value = currentValue;\n        }\n    \n        if (this.min !== undefined && this.value < this.min) {\n            this.value = this.min;\n        }\n\n        if (this.max !== undefined && this.value > this.max) {\n            this.value = this.max;\n        }\n        \n        this.formatValue();\n        this.onModelChange(this.value);\n        this.onChange.emit(event);\n    }\n\n    getPrecision() {\n        return this.precision === undefined ? this.calculatedPrecision : this.precision;\n    }\n    \n    toFixed(value: number, precision: number) {\n        let power = Math.pow(10, precision||0);\n        return String(Math.round(value * power) / power);\n    }\n    \n    onUpButtonMousedown(event: Event) {\n        if (!this.disabled) {\n            this.inputfieldViewChild.nativeElement.focus();\n            this.repeat(event, null, 1);\n            this.updateFilledState();\n            event.preventDefault();\n        }\n    }\n    \n    onUpButtonMouseup(event: Event) {\n        if (!this.disabled) {\n            this.clearTimer();\n        }\n    }\n    \n    onUpButtonMouseleave(event: Event) {\n        if (!this.disabled) {\n            this.clearTimer();\n        }\n    }\n    \n    onDownButtonMousedown(event: Event) {\n        if (!this.disabled) {\n            this.inputfieldViewChild.nativeElement.focus();\n            this.repeat(event, null, -1);\n            this.updateFilledState();\n            event.preventDefault();\n        }\n    }\n    \n    onDownButtonMouseup(event: Event) {\n        if (!this.disabled) {\n            this.clearTimer();\n        }\n    }\n    \n    onDownButtonMouseleave(event: Event) {\n        if (!this.disabled) {\n            this.clearTimer();\n        }\n    }\n    \n    onInputKeydown(event: KeyboardEvent) {\n        if (event.which == 38) {\n            this.spin(event, 1);\n            event.preventDefault();\n        }\n        else if (event.which == 40) {\n            this.spin(event, -1);\n            event.preventDefault();\n        }\n    }\n\n    onInputChange(event: Event) {\n        this.onChange.emit(event);\n    }\n\n    onInput(event: KeyboardEvent) {\n        this.value = this.parseValue((<HTMLInputElement> event.target).value);\n        this.onModelChange(this.value);\n        this.updateFilledState();\n    }\n        \n    onInputBlur(event) {\n        this.focus = false;\n        this.formatValue();\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    }\n    \n    onInputFocus(event) {\n        this.focus = true;\n        this.onFocus.emit(event);\n    }\n    \n    parseValue(val: string): number {\n        let value: number;\n        let precision = this.getPrecision();\n                \n        if (val.trim() === '') {\n            value = null;\n        }\n        else {\n            if (this.formatInput) {\n                val = val.replace(this.thousandRegExp, '');\n            }\n\n            if (precision) {\n                val = this.formatInput ? val.replace(this.decimalSeparator || this.localeDecimalSeparator, '.') : val.replace(',', '.');\n                value = parseFloat(val);\n            }\n            else {\n                value = parseInt(val, 10);\n            }\n            \n            if (!isNaN(value)) {\n                if (this.max !== null && value > this.max) {\n                    value = this.max;\n                }\n\n                if (this.min !== null && value < this.min) {\n                    value = this.min;\n                }\n            }\n            else {\n                value = null;\n            }\n        }\n        \n        return value;\n    }\n\n    formatValue() {\n        let value = this.value;\n        let precision = this.getPrecision();\n\n        if (value != null) {\n            if (this.formatInput) {\n                value = value.toLocaleString(undefined, {maximumFractionDigits: 20});\n    \n                if (this.decimalSeparator && this.thousandSeparator) {\n                    value = value.split(this.localeDecimalSeparator);\n    \n                    if (precision && value[1]) {\n                        value[1] = (this.decimalSeparator || this.localeDecimalSeparator) + value[1];\n                    }\n    \n                    if (this.thousandSeparator && value[0].length > 3) {\n                        value[0] = value[0].replace(new RegExp(`[${this.localeThousandSeparator}]`, 'gim'), this.thousandSeparator);\n                    }\n    \n                    value = value.join('');\n                }\n            }\n    \n            this.formattedValue = value.toString();\n        }\n        else {\n            this.formattedValue = null;\n        }\n\n        if (this.inputfieldViewChild && this.inputfieldViewChild.nativeElement) {\n            this.inputfieldViewChild.nativeElement.value = this.formattedValue;\n        }\n    }\n            \n    clearTimer() {\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n    }\n    \n    writeValue(value: any) : void {\n        this.value = value;\n        this.formatValue();\n        this.updateFilledState();\n        this.cd.markForCheck();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    updateFilledState() {\n        this.filled = (this.value !== undefined && this.value != null);\n    }\n}\n\n\n@NgModule({\n    imports: [CommonModule,InputTextModule],\n    exports: [Spinner],\n    declarations: [Spinner]\n})\nexport class SpinnerModule { }\n"]}