import { ElementRef, EventEmitter, AfterContentInit, QueryList, TemplateRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/inputtext';
import * as ɵngcc3 from 'primeng/api';
export declare const CHIPS_VALUE_ACCESSOR: any;
export declare class Chips implements AfterContentInit, ControlValueAccessor {
    el: ElementRef;
    style: any;
    styleClass: string;
    disabled: boolean;
    field: string;
    placeholder: string;
    max: number;
    ariaLabelledBy: string;
    tabindex: number;
    inputId: string;
    allowDuplicate: boolean;
    inputStyle: any;
    inputStyleClass: any;
    addOnTab: boolean;
    addOnBlur: boolean;
    separator: string;
    onAdd: EventEmitter<any>;
    onRemove: EventEmitter<any>;
    onFocus: EventEmitter<any>;
    onBlur: EventEmitter<any>;
    onChipClick: EventEmitter<any>;
    inputViewChild: ElementRef;
    templates: QueryList<any>;
    itemTemplate: TemplateRef<any>;
    value: any;
    onModelChange: Function;
    onModelTouched: Function;
    valueChanged: boolean;
    focus: boolean;
    filled: boolean;
    constructor(el: ElementRef);
    ngAfterContentInit(): void;
    onClick(): void;
    onInput(): void;
    onPaste(event: any): void;
    updateFilledState(): void;
    onItemClick(event: Event, item: any): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(val: boolean): void;
    resolveFieldData(data: any, field: string): any;
    onInputFocus(event: FocusEvent): void;
    onInputBlur(event: FocusEvent): void;
    removeItem(event: Event, index: number): void;
    addItem(event: Event, item: string, preventDefault: boolean): void;
    onKeydown(event: KeyboardEvent): void;
    updateMaxedOut(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Chips, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Chips, "p-chips", never, { "allowDuplicate": "allowDuplicate"; "disabled": "disabled"; "style": "style"; "styleClass": "styleClass"; "field": "field"; "placeholder": "placeholder"; "max": "max"; "ariaLabelledBy": "ariaLabelledBy"; "tabindex": "tabindex"; "inputId": "inputId"; "inputStyle": "inputStyle"; "inputStyleClass": "inputStyleClass"; "addOnTab": "addOnTab"; "addOnBlur": "addOnBlur"; "separator": "separator"; }, { "onAdd": "onAdd"; "onRemove": "onRemove"; "onFocus": "onFocus"; "onBlur": "onBlur"; "onChipClick": "onChipClick"; }, ["templates"], never>;
}
export declare class ChipsModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ChipsModule, [typeof Chips], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.InputTextModule, typeof ɵngcc3.SharedModule], [typeof Chips, typeof ɵngcc2.InputTextModule, typeof ɵngcc3.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ChipsModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hpcHMuZC50cyIsInNvdXJjZXMiOlsiY2hpcHMuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBBZnRlckNvbnRlbnRJbml0LCBRdWVyeUxpc3QsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb250cm9sVmFsdWVBY2Nlc3NvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IENISVBTX1ZBTFVFX0FDQ0VTU09SOiBhbnk7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDaGlwcyBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIENvbnRyb2xWYWx1ZUFjY2Vzc29yIHtcbiAgICBlbDogRWxlbWVudFJlZjtcbiAgICBzdHlsZTogYW55O1xuICAgIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICBmaWVsZDogc3RyaW5nO1xuICAgIHBsYWNlaG9sZGVyOiBzdHJpbmc7XG4gICAgbWF4OiBudW1iZXI7XG4gICAgYXJpYUxhYmVsbGVkQnk6IHN0cmluZztcbiAgICB0YWJpbmRleDogbnVtYmVyO1xuICAgIGlucHV0SWQ6IHN0cmluZztcbiAgICBhbGxvd0R1cGxpY2F0ZTogYm9vbGVhbjtcbiAgICBpbnB1dFN0eWxlOiBhbnk7XG4gICAgaW5wdXRTdHlsZUNsYXNzOiBhbnk7XG4gICAgYWRkT25UYWI6IGJvb2xlYW47XG4gICAgYWRkT25CbHVyOiBib29sZWFuO1xuICAgIHNlcGFyYXRvcjogc3RyaW5nO1xuICAgIG9uQWRkOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvblJlbW92ZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25Gb2N1czogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25CbHVyOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkNoaXBDbGljazogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgaW5wdXRWaWV3Q2hpbGQ6IEVsZW1lbnRSZWY7XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICBpdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgdmFsdWU6IGFueTtcbiAgICBvbk1vZGVsQ2hhbmdlOiBGdW5jdGlvbjtcbiAgICBvbk1vZGVsVG91Y2hlZDogRnVuY3Rpb247XG4gICAgdmFsdWVDaGFuZ2VkOiBib29sZWFuO1xuICAgIGZvY3VzOiBib29sZWFuO1xuICAgIGZpbGxlZDogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZik7XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgb25DbGljaygpOiB2b2lkO1xuICAgIG9uSW5wdXQoKTogdm9pZDtcbiAgICBvblBhc3RlKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHVwZGF0ZUZpbGxlZFN0YXRlKCk6IHZvaWQ7XG4gICAgb25JdGVtQ2xpY2soZXZlbnQ6IEV2ZW50LCBpdGVtOiBhbnkpOiB2b2lkO1xuICAgIHdyaXRlVmFsdWUodmFsdWU6IGFueSk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPbkNoYW5nZShmbjogRnVuY3Rpb24pOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgc2V0RGlzYWJsZWRTdGF0ZSh2YWw6IGJvb2xlYW4pOiB2b2lkO1xuICAgIHJlc29sdmVGaWVsZERhdGEoZGF0YTogYW55LCBmaWVsZDogc3RyaW5nKTogYW55O1xuICAgIG9uSW5wdXRGb2N1cyhldmVudDogRm9jdXNFdmVudCk6IHZvaWQ7XG4gICAgb25JbnB1dEJsdXIoZXZlbnQ6IEZvY3VzRXZlbnQpOiB2b2lkO1xuICAgIHJlbW92ZUl0ZW0oZXZlbnQ6IEV2ZW50LCBpbmRleDogbnVtYmVyKTogdm9pZDtcbiAgICBhZGRJdGVtKGV2ZW50OiBFdmVudCwgaXRlbTogc3RyaW5nLCBwcmV2ZW50RGVmYXVsdDogYm9vbGVhbik6IHZvaWQ7XG4gICAgb25LZXlkb3duKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcbiAgICB1cGRhdGVNYXhlZE91dCgpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2hpcHNNb2R1bGUge1xufVxuIl19