import { ElementRef, OnDestroy, Renderer2, NgZone, ChangeDetectorRef } from '@angular/core';
import { AnimationEvent } from '@angular/animations';
import { Confirmation } from 'primeng/api';
import { ConfirmationService } from 'primeng/api';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/button';
import * as ɵngcc3 from 'primeng/api';
export declare class ConfirmDialog implements OnDestroy {
    el: ElementRef;
    renderer: Renderer2;
    private confirmationService;
    zone: NgZone;
    private cd;
    header: string;
    icon: string;
    message: string;
    style: any;
    styleClass: string;
    maskStyleClass: string;
    acceptIcon: string;
    acceptLabel: string;
    acceptVisible: boolean;
    rejectIcon: string;
    rejectLabel: string;
    rejectVisible: boolean;
    acceptButtonStyleClass: string;
    rejectButtonStyleClass: string;
    closeOnEscape: boolean;
    blockScroll: boolean;
    rtl: boolean;
    closable: boolean;
    appendTo: any;
    key: string;
    autoZIndex: boolean;
    baseZIndex: number;
    transitionOptions: string;
    focusTrap: boolean;
    defaultFocus: string;
    visible: any;
    position: string;
    footer: any;
    contentViewChild: ElementRef;
    confirmation: Confirmation;
    _visible: boolean;
    maskVisible: boolean;
    documentEscapeListener: any;
    container: HTMLDivElement;
    wrapper: HTMLElement;
    contentContainer: HTMLDivElement;
    subscription: Subscription;
    preWidth: number;
    _position: string;
    transformOptions: any;
    confirmationOptions: Confirmation;
    constructor(el: ElementRef, renderer: Renderer2, confirmationService: ConfirmationService, zone: NgZone, cd: ChangeDetectorRef);
    option(name: string): any;
    onAnimationStart(event: AnimationEvent): void;
    onAnimationEnd(event: AnimationEvent): void;
    getElementToFocus(): any;
    appendContainer(): void;
    restoreAppend(): void;
    enableModality(): void;
    disableModality(): void;
    close(event: Event): void;
    hide(): void;
    moveOnTop(): void;
    getMaskClass(): {
        'ui-widget-overlay ui-dialog-mask': boolean;
        'ui-dialog-visible': boolean;
        'ui-dialog-mask-scrollblocker': boolean;
    };
    getPositionClass(): string;
    bindGlobalListeners(): void;
    unbindGlobalListeners(): void;
    onOverlayHide(): void;
    ngOnDestroy(): void;
    accept(): void;
    reject(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ConfirmDialog, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ConfirmDialog, "p-confirmDialog", never, { "acceptIcon": "acceptIcon"; "acceptLabel": "acceptLabel"; "acceptVisible": "acceptVisible"; "rejectIcon": "rejectIcon"; "rejectLabel": "rejectLabel"; "rejectVisible": "rejectVisible"; "closeOnEscape": "closeOnEscape"; "blockScroll": "blockScroll"; "closable": "closable"; "autoZIndex": "autoZIndex"; "baseZIndex": "baseZIndex"; "transitionOptions": "transitionOptions"; "focusTrap": "focusTrap"; "defaultFocus": "defaultFocus"; "visible": "visible"; "position": "position"; "header": "header"; "icon": "icon"; "message": "message"; "style": "style"; "styleClass": "styleClass"; "maskStyleClass": "maskStyleClass"; "acceptButtonStyleClass": "acceptButtonStyleClass"; "rejectButtonStyleClass": "rejectButtonStyleClass"; "rtl": "rtl"; "appendTo": "appendTo"; "key": "key"; }, {}, ["footer"], ["p-footer"]>;
}
export declare class ConfirmDialogModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ConfirmDialogModule, [typeof ConfirmDialog], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.ButtonModule], [typeof ConfirmDialog, typeof ɵngcc2.ButtonModule, typeof ɵngcc3.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ConfirmDialogModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybWRpYWxvZy5kLnRzIiwic291cmNlcyI6WyJjb25maXJtZGlhbG9nLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIE9uRGVzdHJveSwgUmVuZGVyZXIyLCBOZ1pvbmUsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbmltYXRpb25FdmVudCB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHsgQ29uZmlybWF0aW9uIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuaW1wb3J0IHsgQ29uZmlybWF0aW9uU2VydmljZSB9IGZyb20gJ3ByaW1lbmcvYXBpJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ29uZmlybURpYWxvZyBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gICAgZWw6IEVsZW1lbnRSZWY7XG4gICAgcmVuZGVyZXI6IFJlbmRlcmVyMjtcbiAgICBwcml2YXRlIGNvbmZpcm1hdGlvblNlcnZpY2U7XG4gICAgem9uZTogTmdab25lO1xuICAgIHByaXZhdGUgY2Q7XG4gICAgaGVhZGVyOiBzdHJpbmc7XG4gICAgaWNvbjogc3RyaW5nO1xuICAgIG1lc3NhZ2U6IHN0cmluZztcbiAgICBzdHlsZTogYW55O1xuICAgIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBtYXNrU3R5bGVDbGFzczogc3RyaW5nO1xuICAgIGFjY2VwdEljb246IHN0cmluZztcbiAgICBhY2NlcHRMYWJlbDogc3RyaW5nO1xuICAgIGFjY2VwdFZpc2libGU6IGJvb2xlYW47XG4gICAgcmVqZWN0SWNvbjogc3RyaW5nO1xuICAgIHJlamVjdExhYmVsOiBzdHJpbmc7XG4gICAgcmVqZWN0VmlzaWJsZTogYm9vbGVhbjtcbiAgICBhY2NlcHRCdXR0b25TdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgcmVqZWN0QnV0dG9uU3R5bGVDbGFzczogc3RyaW5nO1xuICAgIGNsb3NlT25Fc2NhcGU6IGJvb2xlYW47XG4gICAgYmxvY2tTY3JvbGw6IGJvb2xlYW47XG4gICAgcnRsOiBib29sZWFuO1xuICAgIGNsb3NhYmxlOiBib29sZWFuO1xuICAgIGFwcGVuZFRvOiBhbnk7XG4gICAga2V5OiBzdHJpbmc7XG4gICAgYXV0b1pJbmRleDogYm9vbGVhbjtcbiAgICBiYXNlWkluZGV4OiBudW1iZXI7XG4gICAgdHJhbnNpdGlvbk9wdGlvbnM6IHN0cmluZztcbiAgICBmb2N1c1RyYXA6IGJvb2xlYW47XG4gICAgZGVmYXVsdEZvY3VzOiBzdHJpbmc7XG4gICAgdmlzaWJsZTogYW55O1xuICAgIHBvc2l0aW9uOiBzdHJpbmc7XG4gICAgZm9vdGVyOiBhbnk7XG4gICAgY29udGVudFZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICBjb25maXJtYXRpb246IENvbmZpcm1hdGlvbjtcbiAgICBfdmlzaWJsZTogYm9vbGVhbjtcbiAgICBtYXNrVmlzaWJsZTogYm9vbGVhbjtcbiAgICBkb2N1bWVudEVzY2FwZUxpc3RlbmVyOiBhbnk7XG4gICAgY29udGFpbmVyOiBIVE1MRGl2RWxlbWVudDtcbiAgICB3cmFwcGVyOiBIVE1MRWxlbWVudDtcbiAgICBjb250ZW50Q29udGFpbmVyOiBIVE1MRGl2RWxlbWVudDtcbiAgICBzdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcbiAgICBwcmVXaWR0aDogbnVtYmVyO1xuICAgIF9wb3NpdGlvbjogc3RyaW5nO1xuICAgIHRyYW5zZm9ybU9wdGlvbnM6IGFueTtcbiAgICBjb25maXJtYXRpb25PcHRpb25zOiBDb25maXJtYXRpb247XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGNvbmZpcm1hdGlvblNlcnZpY2U6IENvbmZpcm1hdGlvblNlcnZpY2UsIHpvbmU6IE5nWm9uZSwgY2Q6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBvcHRpb24obmFtZTogc3RyaW5nKTogYW55O1xuICAgIG9uQW5pbWF0aW9uU3RhcnQoZXZlbnQ6IEFuaW1hdGlvbkV2ZW50KTogdm9pZDtcbiAgICBvbkFuaW1hdGlvbkVuZChldmVudDogQW5pbWF0aW9uRXZlbnQpOiB2b2lkO1xuICAgIGdldEVsZW1lbnRUb0ZvY3VzKCk6IGFueTtcbiAgICBhcHBlbmRDb250YWluZXIoKTogdm9pZDtcbiAgICByZXN0b3JlQXBwZW5kKCk6IHZvaWQ7XG4gICAgZW5hYmxlTW9kYWxpdHkoKTogdm9pZDtcbiAgICBkaXNhYmxlTW9kYWxpdHkoKTogdm9pZDtcbiAgICBjbG9zZShldmVudDogRXZlbnQpOiB2b2lkO1xuICAgIGhpZGUoKTogdm9pZDtcbiAgICBtb3ZlT25Ub3AoKTogdm9pZDtcbiAgICBnZXRNYXNrQ2xhc3MoKToge1xuICAgICAgICAndWktd2lkZ2V0LW92ZXJsYXkgdWktZGlhbG9nLW1hc2snOiBib29sZWFuO1xuICAgICAgICAndWktZGlhbG9nLXZpc2libGUnOiBib29sZWFuO1xuICAgICAgICAndWktZGlhbG9nLW1hc2stc2Nyb2xsYmxvY2tlcic6IGJvb2xlYW47XG4gICAgfTtcbiAgICBnZXRQb3NpdGlvbkNsYXNzKCk6IHN0cmluZztcbiAgICBiaW5kR2xvYmFsTGlzdGVuZXJzKCk6IHZvaWQ7XG4gICAgdW5iaW5kR2xvYmFsTGlzdGVuZXJzKCk6IHZvaWQ7XG4gICAgb25PdmVybGF5SGlkZSgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgYWNjZXB0KCk6IHZvaWQ7XG4gICAgcmVqZWN0KCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDb25maXJtRGlhbG9nTW9kdWxlIHtcbn1cbiJdfQ==