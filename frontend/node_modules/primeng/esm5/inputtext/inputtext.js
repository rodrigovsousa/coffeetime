import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/forms';
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
import { NgModule, Directive, ElementRef, HostListener, DoCheck, Optional } from '@angular/core';
import { NgModel } from '@angular/forms';
import { CommonModule } from '@angular/common';
var InputText = /** @class */ (function () {
    function InputText(el, ngModel) {
        this.el = el;
        this.ngModel = ngModel;
    }
    InputText.prototype.ngDoCheck = function () {
        this.updateFilledState();
    };
    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding
    InputText.prototype.onInput = function (e) {
        this.updateFilledState();
    };
    InputText.prototype.updateFilledState = function () {
        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) ||
            (this.ngModel && this.ngModel.model);
    };
    InputText.ctorParameters = function () { return [
        { type: ElementRef },
        { type: NgModel, decorators: [{ type: Optional }] }
    ]; };
    __decorate([
        HostListener('input', ['$event'])
    ], InputText.prototype, "onInput", null);
    InputText = __decorate([ __param(1, Optional())
    ], InputText);
InputText.ɵfac = function InputText_Factory(t) { return new (t || InputText)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgModel, 8)); };
InputText.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: InputText, selectors: [["", "pInputText", ""]], hostVars: 10, hostBindings: function InputText_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("input", function InputText_input_HostBindingHandler($event) { return ctx.onInput($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("ui-inputtext", true)("ui-corner-all", true)("ui-state-default", true)("ui-widget", true)("ui-state-filled", ctx.filled);
    } } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InputText, [{
        type: Directive,
        args: [{
                selector: '[pInputText]',
                host: {
                    '[class.ui-inputtext]': 'true',
                    '[class.ui-corner-all]': 'true',
                    '[class.ui-state-default]': 'true',
                    '[class.ui-widget]': 'true',
                    '[class.ui-state-filled]': 'filled'
                }
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.NgModel, decorators: [{
                type: Optional
            }] }]; }, { onInput: [{
            type: HostListener,
            args: ['input', ['$event']]
        }] }); })();
    return InputText;
}());
export { InputText };
var InputTextModule = /** @class */ (function () {
    function InputTextModule() {
    }
InputTextModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: InputTextModule });
InputTextModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function InputTextModule_Factory(t) { return new (t || InputTextModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InputTextModule, { declarations: function () { return [InputText]; }, imports: function () { return [CommonModule]; }, exports: function () { return [InputText]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InputTextModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                exports: [InputText],
                declarations: [InputText]
            }]
    }], function () { return []; }, null); })();
    return InputTextModule;
}());
export { InputTextModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXR0ZXh0LmpzIiwic291cmNlcyI6WyJuZzovcHJpbWVuZy9pbnB1dHRleHQvaW5wdXR0ZXh0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsT0FBTyxFQUFDLFFBQVEsRUFBQyxTQUFTLEVBQUMsVUFBVSxFQUFDLFlBQVksRUFBQyxPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzFGLE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUN2QyxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFZN0M7QUFFQSxJQUVJLG1CQUFtQixFQUFjLEVBQXFCLE9BQWdCO0FBQUksUUFBdkQsT0FBRSxHQUFGLEVBQUUsQ0FBWTtBQUFDLFFBQW9CLFlBQU8sR0FBUCxPQUFPLENBQVM7QUFBQyxJQUFFLENBQUM7QUFDOUUsSUFDSSw2QkFBUyxHQUFUO0FBQ0osUUFBUSxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztBQUNqQyxJQUFJLENBQUM7QUFDSixJQUNHLDBHQUEwRztBQUM5RyxJQUNJLDJCQUFPLEdBQVAsVUFBUSxDQUFDO0FBQ2IsUUFBUSxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztBQUNqQyxJQUFJLENBQUM7QUFDSixJQUNHLHFDQUFpQixHQUFqQjtBQUFjLFFBQ1YsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDO0FBQ3pGLFlBQXdCLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzdELElBQUksQ0FBQztBQUNKO0FBSVUsZ0JBcEJnQixVQUFVO0FBQUksZ0JBQTBCLE9BQU8sdUJBQWxDLFFBQVE7QUFBTTtBQUFVLElBUTVEO0FBQ0osUUFGSyxZQUFZLENBQUMsT0FBTyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7QUFBQyw0Q0FHbEM7QUFDSixJQWZZLFNBQVMsd0JBVnJCLFNBQVMsQ0FBQyxuQkFVSCxDQUlnQyxXQUFBLFFBQVEsRUFBRSxDQUFBO1NBYjlDLFFBQVEsakJBYXVDLE9BSnRDLFNBQVMsQ0FvQnJCO0FBN0JhLGNBQWMsY0FDeEIsSUFBSSxFQUFFLGtCQUNGLHNCQUFzQixFQUFFLE1BQU0sa0JBQzlCLHVCQUF1QixFQUFFLE1BQU0sa0JBQy9CO0lBQTBCLEVBQUUsTUFBTSxrQkFDbEMsbUJBQW1CLEVBQUUsTUFBTSxrQkFDM0IseUJBQXlCLEVBQUUsUUFBUSxjQUN0QyxVQUNKLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBc0JGO0FBQ0EsSUFGQSxnQkFBQztBQUVELENBRkMsQUFwQkQsSUFvQkM7QUFDRCxTQXJCYSxTQUFTO0FBMkJ0QjtBQUFtRCxJQUFuRDtBQUE2QixJQUFFLENBQUM7SUFBbkIsZUFBZSx3QkFMM0IsUUFBUSxDQUFDLGNBQ04sT0FBTztBQUFFLENBQUMsWUFBWSxDQUFDLGNBQ3ZCLE9BQU8sRUFBRSxDQUFDLFNBQVMsQ0FBQyxjQUNwQixZQUFZLEVBQUUsQ0FBQyxTQUFTLENBQUMsVUFDNUIsQ0FBQyxRQUNXLGVBQWUsQ0FBSTs7Ozs7Ozs7O2dEQUFDO0FBQUMsSUFBSCxzQkFBQztBQUFFLENBQUYsQUFBaEMsSUFBZ0M7QUFBQyxTQUFwQixlQUFlO0FBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge05nTW9kdWxlLERpcmVjdGl2ZSxFbGVtZW50UmVmLEhvc3RMaXN0ZW5lcixEb0NoZWNrLE9wdGlvbmFsfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TmdNb2RlbH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHtDb21tb25Nb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW3BJbnB1dFRleHRdJyxcbiAgICBob3N0OiB7XG4gICAgICAgICdbY2xhc3MudWktaW5wdXR0ZXh0XSc6ICd0cnVlJyxcbiAgICAgICAgJ1tjbGFzcy51aS1jb3JuZXItYWxsXSc6ICd0cnVlJyxcbiAgICAgICAgJ1tjbGFzcy51aS1zdGF0ZS1kZWZhdWx0XSc6ICd0cnVlJyxcbiAgICAgICAgJ1tjbGFzcy51aS13aWRnZXRdJzogJ3RydWUnLFxuICAgICAgICAnW2NsYXNzLnVpLXN0YXRlLWZpbGxlZF0nOiAnZmlsbGVkJ1xuICAgIH1cbn0pXG5leHBvcnQgY2xhc3MgSW5wdXRUZXh0IGltcGxlbWVudHMgRG9DaGVjayB7XG5cbiAgICBmaWxsZWQ6IGJvb2xlYW47XG5cbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgZWw6IEVsZW1lbnRSZWYsIEBPcHRpb25hbCgpIHB1YmxpYyBuZ01vZGVsOiBOZ01vZGVsKSB7fVxuICAgICAgICBcbiAgICBuZ0RvQ2hlY2soKSB7XG4gICAgICAgIHRoaXMudXBkYXRlRmlsbGVkU3RhdGUoKTtcbiAgICB9XG4gICAgXG4gICAgLy9UbyB0cmlnZ2VyIGNoYW5nZSBkZXRlY3Rpb24gdG8gbWFuYWdlIHVpLXN0YXRlLWZpbGxlZCBmb3IgbWF0ZXJpYWwgbGFiZWxzIHdoZW4gdGhlcmUgaXMgbm8gdmFsdWUgYmluZGluZ1xuICAgIEBIb3N0TGlzdGVuZXIoJ2lucHV0JywgWyckZXZlbnQnXSkgXG4gICAgb25JbnB1dChlKSB7XG4gICAgICAgIHRoaXMudXBkYXRlRmlsbGVkU3RhdGUoKTtcbiAgICB9XG4gICAgXG4gICAgdXBkYXRlRmlsbGVkU3RhdGUoKSB7XG4gICAgICAgIHRoaXMuZmlsbGVkID0gKHRoaXMuZWwubmF0aXZlRWxlbWVudC52YWx1ZSAmJiB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQudmFsdWUubGVuZ3RoKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMubmdNb2RlbCAmJiB0aGlzLm5nTW9kZWwubW9kZWwpO1xuICAgIH1cbn1cblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgICBleHBvcnRzOiBbSW5wdXRUZXh0XSxcbiAgICBkZWNsYXJhdGlvbnM6IFtJbnB1dFRleHRdXG59KVxuZXhwb3J0IGNsYXNzIElucHV0VGV4dE1vZHVsZSB7IH0iXX0=