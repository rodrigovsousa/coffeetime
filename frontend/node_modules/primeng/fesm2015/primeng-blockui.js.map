{"version":3,"file":"primeng-blockui.js","sources":["ng:/primeng/blockui/blockui.ts","ng:/primeng/blockui/primeng-blockui.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,AfterViewInit,OnDestroy,ElementRef,ViewChild,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\n\n@Component({\n    selector: 'p-blockUI',\n    template: `\n        <div #mask [class]=\"styleClass\" [ngClass]=\"{'ui-blockui-document':!target, 'ui-blockui ui-widget-overlay': true}\" [ngStyle]=\"{display: blocked ? 'block' : 'none'}\">\n            <ng-content></ng-content>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class BlockUI implements AfterViewInit,OnDestroy {\n\n    @Input() target: any;\n    \n    @Input() autoZIndex: boolean = true;\n    \n    @Input() baseZIndex: number = 0;\n    \n    @Input() styleClass: string;\n    \n    @ViewChild('mask') mask: ElementRef;\n    \n    _blocked: boolean;\n        \n    constructor(public el: ElementRef) {}\n    \n    @Input() get blocked(): boolean {\n        return this._blocked;\n    }\n    \n    set blocked(val: boolean) {\n        this._blocked = val;\n        \n        if (this.mask && this.mask.nativeElement) {\n            if (this._blocked)\n                this.block();\n            else\n                this.unblock();\n        }\n    }\n    \n    ngAfterViewInit() {\n        if (this.target && !this.target.getBlockableElement) {\n            throw 'Target of BlockUI must implement BlockableUI interface';\n        }\n    }\n        \n    block() {\n        if (this.target) {\n            this.target.getBlockableElement().appendChild(this.mask.nativeElement);\n            let style = this.target.style||{};\n            style.position = 'relative';\n            this.target.style = style;\n        }\n        else {\n            document.body.appendChild(this.mask.nativeElement);\n        }\n        \n        if (this.autoZIndex) {\n            this.mask.nativeElement.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n    }\n    \n    unblock() {\n        this.el.nativeElement.appendChild(this.mask.nativeElement);\n    }\n    \n    ngOnDestroy() {\n        this.unblock();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [BlockUI],\n    declarations: [BlockUI]\n})\nexport class BlockUIModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}