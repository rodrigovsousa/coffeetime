{"version":3,"file":"primeng-focustrap.js","sources":["ng:/primeng/focustrap/focustrap.ts","ng:/primeng/focustrap/primeng-focustrap.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,IAOa,SAAS,GAAtB,MAAa,SAAS;AACtB,IAGI,YAAmB,EAAc;AAAI,QAAlB,OAAE,GAAF,EAAE,CAAY;AAAC,KAAG;AACzC,IAGI,SAAS,CAAC,CAAC;AACf,QAAQ,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;AAC9C,YAAY,CAAC,CAAC,cAAc,EAAE,CAAC;AAC/B,YAAY,IAAI,iBAAiB,GAAG,UAAU,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;AAC3F,YAAY,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;AACnE,gBAAgB,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE;AAC7C,oBAAoB,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACjD,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,IAAI,YAAY,GAAG,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;AACzF,oBACoB,IAAI,CAAC,CAAC,QAAQ,EAAE;AACpC,wBAAwB,IAAI,YAAY,IAAI,CAAC,CAAC,IAAI,YAAY,KAAK,CAAC;AACpE,4BAA4B,iBAAiB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACpF;AACA,4BAA4B,iBAAiB,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACxE,qBAAqB;AACrB,yBAAyB;AACzB,wBAAwB,IAAI,YAAY,IAAI,CAAC,CAAC,IAAI,YAAY,MAAM,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC;AACjG,4BAA4B,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACzD;AACA,4BAA4B,iBAAiB,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACxE,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;;;;iEAAA;AACD;AAEsB,YAlCK,UAAU;AAAG;AAF3B;AAAa,IAArB,KAAK,EAAE;AAAC,qDAA4B;AAMrC;AAAa,IAFZ,YAAY,CAAC,aAAa,EAAE,CAAC,QAAQ,CAAC,CAAC;AAC3C,IAAI,YAAY,CAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC,CAAC;AAClD,0CA0BK,CAEL;AApCa,SAAS,oBAHrB,SAAS,CAAC,vCAwCX,IAKa,eAAe,GAA5B,MAAa,eAAe;AAAG,CAAC,CAAA;AA5C5B,QAAQ,EAAE,cAAc,OAC3B,CAAC,IACW,SAAS,CAmCrB,9CAOY,eAAe,oBAL3B,QAAQ,CAAC,UACN,OAAO,EAAE,CAAC;CAAY,CAAC,UACvB,OAAO,EAAE,CAAC,SAAS,CAAC,UACpB,YAAY,EAAE,CAAC,SAAS,CAAC,MAC5B,CAAC,IACW,eAAe,CAAI;;;;;;;;;;;;;;;;;;;;;;;0BAAC;AAAC;ACjDlC;AACA;AACA,GAAG;AACH;AACA;AACS","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener, Input} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\n\n@Directive({\n    selector: '[pFocusTrap]',\n})\nexport class FocusTrap {\n\n    @Input() pFocusTrapDisabled: boolean;\n\n    constructor(public el: ElementRef) {}\n\n    @HostListener('keydown.tab', ['$event'])\n    @HostListener('keydown.shift.tab', ['$event'])\n    onkeydown(e) {\n        if (this.pFocusTrapDisabled !== true) {\n            e.preventDefault();\n            let focusableElements = DomHandler.getFocusableElements(this.el.nativeElement);\n            if (focusableElements && focusableElements.length > 0) {\n                if (!document.activeElement) {\n                    focusableElements[0].focus();\n                }\n                else {\n                    let focusedIndex = focusableElements.indexOf(document.activeElement);\n\n                    if (e.shiftKey) {\n                        if (focusedIndex == -1 || focusedIndex === 0)\n                            focusableElements[focusableElements.length - 1].focus();\n                        else\n                            focusableElements[focusedIndex - 1].focus();\n                    }\n                    else {\n                        if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\n                            focusableElements[0].focus();\n                        else\n                            focusableElements[focusedIndex + 1].focus();\n                    }\n                }\n            }\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [FocusTrap],\n    declarations: [FocusTrap]\n})\nexport class FocusTrapModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}