{"version":3,"file":"primeng-inputtext.js","sources":["ng:/primeng/inputtext/inputtext.ts","ng:/primeng/inputtext/primeng-inputtext.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,IAca,SAAS,GAAtB,MAAa,SAAS;AAAG,IAIrB,YAAmB,EAAc,EAAqB,OAAgB;AAAI,QAAvD,OAAE,GAAF,EAAE,CAAY;AAAC,QAAoB,YAAO,GAAP,OAAO,CAAS;AAAC,KAAG;AAC9E,IACI,SAAS;AACb,QAAQ,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACjC,KAAK;AACL;AAC0G,IAEtG,OAAO,CAAC,CAAC;AACb,QAAQ,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACjC,KAAK;AACL,IACI,iBAAiB;AACrB,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM;AACxF,aAAyB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC7D,KAAK;AACL,CAAC;;;;;;WAAA;AACD;AAEsB,YAnBK,UAAU;AAAI,YAA0B,OAAO,uBAAlC,QAAQ;AAAM;AAQlD;AACJ,IAFK,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;AAAC,wCAGlC;AAdQ,SAAS,oBAVrB,SAAS,CAAC,fAUP,CAIoC,WAAA,QAAQ,EAAE,CAAA;CAb9C,QAAQ,EAAE,XAaqC,GAJtC,SAAS,CAoBrB;UA7B2B,UACxB,IAAI,EAAE,cACF,xCA6BR,IAKa,eAAe,GAA5B,MAAa,eAAe;AAAG,CAAC,CAAA;aAlCF,EAAE,MAAM,cAC9B,uBAAuB,EAAE,MAAM,lEAiC1B,eAAe,oBAL3B,QAAQ,CAAC,UACN,OAAO,EAAE,CAAC;KA5BN,0BAA0B,EAAE,MAAM,cAClC,mBAAmB,EAAE,MAAM,cAC3B,yBAAyB,EAAE,QAAQ,UACtC,MACJ,CAAC,jJAwBwB,CAAC,UACvB,OAAO,EAAE,CAAC,SAAS,CAAC,UACpB,YAAY,EAAE,CAAC,SAAS,CAAC,MAC5B,CAAC,IACW,eAAe,CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAAC;AAAC;ACzClC;AACA;AACA,GAAG;AACH;AACA;AACS","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,DoCheck,Optional} from '@angular/core';\nimport {NgModel} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pInputText]',\n    host: {\n        '[class.ui-inputtext]': 'true',\n        '[class.ui-corner-all]': 'true',\n        '[class.ui-state-default]': 'true',\n        '[class.ui-widget]': 'true',\n        '[class.ui-state-filled]': 'filled'\n    }\n})\nexport class InputText implements DoCheck {\n\n    filled: boolean;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel) {}\n        \n    ngDoCheck() {\n        this.updateFilledState();\n    }\n    \n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n    @HostListener('input', ['$event']) \n    onInput(e) {\n        this.updateFilledState();\n    }\n    \n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) ||\n                        (this.ngModel && this.ngModel.model);\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputText],\n    declarations: [InputText]\n})\nexport class InputTextModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}