{"version":3,"file":"primeng-messages.js","sources":["ng:/primeng/messages/messages.ts","ng:/primeng/messages/primeng-messages.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,OnDestroy,Input,Output,EventEmitter,AfterContentInit,Optional,ElementRef,ChangeDetectionStrategy,ContentChildren,QueryList,TemplateRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\nimport {Message,PrimeTemplate,MessageService} from 'primeng/api';\nimport {Subscription} from 'rxjs';\n\n@Component({\n    selector: 'p-messages',\n    template: `\n        <div *ngIf=\"hasMessages()\" class=\"ui-messages ui-widget ui-corner-all\"\n                    [ngClass]=\"getSeverityClass()\" role=\"alert\" [ngStyle]=\"style\" [class]=\"styleClass\"\n                    [@messageAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\">\n            <a tabindex=\"0\" class=\"ui-messages-close\" (click)=\"clear($event)\" (keydown.enter)=\"clear($event)\" *ngIf=\"closable\">\n                <i class=\"pi pi-times\"></i>\n            </a>\n            <span class=\"ui-messages-icon pi\" [ngClass]=\"icon\"></span>\n            <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            <ul *ngIf=\"value && value.length\">\n                <li *ngFor=\"let msg of value\">\n                    <div *ngIf=\"!escape; else escapeOut\">\n                        <span *ngIf=\"msg.summary\" class=\"ui-messages-summary\" [innerHTML]=\"msg.summary\"></span>\n                        <span *ngIf=\"msg.detail\" class=\"ui-messages-detail\" [innerHTML]=\"msg.detail\"></span>\n                    </div>\n                    <ng-template #escapeOut>\n                        <span *ngIf=\"msg.summary\" class=\"ui-messages-summary\">{{msg.summary}}</span>\n                        <span *ngIf=\"msg.detail\" class=\"ui-messages-detail\">{{msg.detail}}</span>\n                    </ng-template>\n                </li>\n            </ul>\n        </div>\n    `,\n    animations: [\n        trigger('messageAnimation', [\n            state('visible', style({\n                transform: 'translateY(0)',\n                opacity: 1\n            })),\n            transition('void => *', [\n                style({transform: 'translateY(-25%)', opacity: 0}),\n                animate('{{showTransitionParams}}')\n            ]),\n            transition('* => void', [\n                animate(('{{hideTransitionParams}}'), style({\n                    opacity: 0,\n                    transform: 'translateY(-25%)'\n                }))\n            ])\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Messages implements AfterContentInit, OnDestroy {\n\n    @Input() value: Message[];\n\n    @Input() closable: boolean = true;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() enableService: boolean = true;\n\n    @Input() key: string;\n\n    @Input() escape: boolean = true;\n\n    @Input() severity: string;\n\n    @Input() showTransitionOptions: string = '300ms ease-out';\n\n    @Input() hideTransitionOptions: string = '250ms ease-in';\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    @Output() valueChange: EventEmitter<Message[]> = new EventEmitter<Message[]>();\n\n    messageSubscription: Subscription;\n\n    clearSubscription: Subscription;\n\n    contentTemplate: TemplateRef<any>;\n\n    constructor(@Optional() public messageService: MessageService, public el: ElementRef) {}\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n\n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n        });\n\n        if (this.messageService && this.enableService && !this.contentTemplate) {\n            this.messageSubscription = this.messageService.messageObserver.subscribe((messages: any) => {\n                if (messages) {\n                    if (messages instanceof Array) {\n                        let filteredMessages = messages.filter(m => this.key === m.key);\n                        this.value = this.value ? [...this.value, ...filteredMessages] : [...filteredMessages];\n                    }\n                    else if (this.key === messages.key) {\n                        this.value = this.value ? [...this.value, ...[messages]] : [messages];\n                    }\n                }\n            });\n\n            this.clearSubscription = this.messageService.clearObserver.subscribe(key => {\n                if (key) {\n                    if (this.key === key) {\n                        this.value = null;\n                    }\n                }\n                else {\n                    this.value = null;\n                }\n            });\n        }\n    }\n\n    hasMessages() {\n        let parentEl = this.el.nativeElement.parentElement;\n        if (parentEl && parentEl.offsetParent) {\n            return this.contentTemplate != null || this.value && this.value.length > 0;\n        }\n\n        return false;\n    }\n\n    getSeverityClass() {\n        if (this.severity) {\n            return 'ui-messages-' + this.severity;\n        }\n        else {\n            const msg = this.value[0];\n            if (msg) {\n                const severities = ['info', 'warn', 'error', 'success'];\n                const severity = severities.find(item => item === msg.severity);\n\n                return severity && `ui-messages-${severity}`;\n            }\n        }\n\n        return null;\n    }\n\n    clear(event) {\n        this.value = [];\n        this.valueChange.emit(this.value);\n\n        event.preventDefault();\n    }\n\n    get icon(): string {\n        const severity = this.severity || (this.hasMessages() ? this.value[0].severity : null);\n\n        if (this.hasMessages()) {\n            switch(severity) {\n                case 'success':\n                    return 'pi-check';\n                break;\n\n                case 'info':\n                    return 'pi-info-circle';\n                break;\n\n                case 'error':\n                    return 'pi-times';\n                break;\n\n                case 'warn':\n                    return 'pi-exclamation-triangle';\n                break;\n\n                default:\n                    return 'pi-info-circle';\n                break;\n            }\n        }\n\n        return null;\n    }\n\n    ngOnDestroy() {\n        if (this.messageSubscription) {\n            this.messageSubscription.unsubscribe();\n        }\n\n        if (this.clearSubscription) {\n            this.clearSubscription.unsubscribe();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Messages],\n    declarations: [Messages]\n})\nexport class MessagesModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}