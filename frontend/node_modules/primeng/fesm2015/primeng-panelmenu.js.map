{"version":3,"file":"primeng-panelmenu.js","sources":["ng:/primeng/panelmenu/panelmenu.ts","ng:/primeng/panelmenu/primeng-panelmenu.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,ChangeDetectorRef,ChangeDetectionStrategy} from '@angular/core';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\nimport {CommonModule} from '@angular/common';\nimport {MenuItem} from 'primeng/api';\nimport {RouterModule} from '@angular/router';\n\nexport class BasePanelMenuItem {\n\n    constructor(private ref: ChangeDetectorRef) {}\n        \n    handleClick(event, item) {\n        if (item.disabled) {\n            event.preventDefault();\n            return;\n        }\n        \n        item.expanded = !item.expanded;\n        this.ref.detectChanges();\n        \n        if (!item.url) {\n            event.preventDefault();\n        }\n                   \n        if (item.command) {\n            item.command({\n                originalEvent: event,\n                item: item\n            });\n        }\n    }\n}\n\n@Component({\n    selector: 'p-panelMenuSub',\n    template: `\n        <ul class=\"ui-submenu-list\" [@submenu]=\"expanded ? {value: 'visible', params: {transitionParams: transitionOptions, height: '*'}} : {value: 'hidden', params: {transitionParams: transitionOptions, height: '0'}}\" role=\"tree\">\n            <ng-template ngFor let-child [ngForOf]=\"item.items\">\n                <li *ngIf=\"child.separator\" class=\"ui-menu-separator ui-widget-content\" role=\"separator\">\n                <li *ngIf=\"!child.separator\" class=\"ui-menuitem ui-corner-all\" [ngClass]=\"child.styleClass\" [class.ui-helper-hidden]=\"child.visible === false\" [ngStyle]=\"child.style\">\n                    <a *ngIf=\"!child.routerLink\" [attr.href]=\"child.url\" class=\"ui-menuitem-link ui-corner-all\" [attr.tabindex]=\"!item.expanded ? null : child.disabled ? null : '0'\" [attr.id]=\"child.id\"\n                        [ngClass]=\"{'ui-state-disabled':child.disabled, 'ui-state-active': child.expanded}\" role=\"treeitem\" [attr.aria-expanded]=\"child.expanded\"\n                        (click)=\"handleClick($event,child)\" [attr.target]=\"child.target\" [attr.title]=\"child.title\">\n                        <span class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-caret-right':!child.expanded,'pi-caret-down':child.expanded}\" *ngIf=\"child.items\"></span\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"child.icon\" *ngIf=\"child.icon\"></span\n                        ><span class=\"ui-menuitem-text\">{{child.label}}</span>\n                    </a>\n                    <a *ngIf=\"child.routerLink\" [routerLink]=\"child.routerLink\" [queryParams]=\"child.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" [routerLinkActiveOptions]=\"child.routerLinkActiveOptions||{exact:false}\" class=\"ui-menuitem-link ui-corner-all\" \n                        [ngClass]=\"{'ui-state-disabled':child.disabled}\" [attr.tabindex]=\"!item.expanded ? null : child.disabled ? null : '0'\" [attr.id]=\"child.id\" role=\"treeitem\" [attr.aria-expanded]=\"child.expanded\"\n                        (click)=\"handleClick($event,child)\" [attr.target]=\"child.target\" [attr.title]=\"child.title\"\n                        [fragment]=\"child.fragment\" [queryParamsHandling]=\"child.queryParamsHandling\" [preserveFragment]=\"child.preserveFragment\" [skipLocationChange]=\"child.skipLocationChange\" [replaceUrl]=\"child.replaceUrl\" [state]=\"child.state\">\n                        <span class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-caret-right':!child.expanded,'pi-caret-down':child.expanded}\" *ngIf=\"child.items\"></span\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"child.icon\" *ngIf=\"child.icon\"></span\n                        ><span class=\"ui-menuitem-text\">{{child.label}}</span>\n                    </a>\n                    <p-panelMenuSub [item]=\"child\" [expanded]=\"child.expanded\" [transitionOptions]=\"transitionOptions\" *ngIf=\"child.items\"></p-panelMenuSub>\n                </li>\n            </ng-template>\n        </ul>\n    `,\n    animations: [\n        trigger('submenu', [\n            state('hidden', style({\n                height: '0px'\n            })),\n            state('void', style({\n                height: '{{height}}'\n            }), {params: {height: '0'}}),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible => hidden', animate('{{transitionParams}}')),\n            transition('hidden => visible', animate('{{transitionParams}}')),\n            transition('void => hidden', animate('{{transitionParams}}')),\n            transition('void => visible', animate('{{transitionParams}}'))\n        ])\n    ]\n})\nexport class PanelMenuSub extends BasePanelMenuItem {\n    \n    @Input() item: MenuItem;\n    \n    @Input() expanded: boolean;\n\n    @Input() transitionOptions: string;\n\n    constructor(ref: ChangeDetectorRef) {\n        super(ref);\n    }\n}\n\n@Component({\n    selector: 'p-panelMenu',\n    template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'ui-panelmenu ui-widget'\">\n            <ng-container *ngFor=\"let item of model;let f=first;let l=last;\">\n                <div class=\"ui-panelmenu-panel\" [ngClass]=\"{'ui-helper-hidden': item.visible === false}\">\n                    <div [ngClass]=\"{'ui-widget ui-panelmenu-header ui-state-default':true,'ui-corner-top':f,'ui-corner-bottom':l&&!item.expanded,\n                    'ui-state-active':item.expanded,'ui-state-disabled':item.disabled}\" [class]=\"item.styleClass\" [ngStyle]=\"item.style\">\n                        <a *ngIf=\"!item.routerLink\" [attr.href]=\"item.url\" (click)=\"handleClick($event,item)\" [attr.tabindex]=\"item.disabled ? null : '0'\" [attr.id]=\"item.id\"\n                           [attr.target]=\"item.target\" [attr.title]=\"item.title\" class=\"ui-panelmenu-header-link\" [attr.aria-expanded]=\"item.expanded\" [attr.id]=\"item.id + '_header'\" [attr.aria-controls]=\"item.id +'_content'\">\n                        <span *ngIf=\"item.items\" class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-chevron-right':!item.expanded,'pi-chevron-down':item.expanded}\"></span\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"item.icon\" *ngIf=\"item.icon\"></span\n                        ><span class=\"ui-menuitem-text\">{{item.label}}</span>\n                        </a>\n                        <a *ngIf=\"item.routerLink\" [routerLink]=\"item.routerLink\" [queryParams]=\"item.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\"\n                           (click)=\"handleClick($event,item)\" [attr.target]=\"item.target\" [attr.title]=\"item.title\" class=\"ui-panelmenu-header-link\" [attr.id]=\"item.id\" [attr.tabindex]=\"item.disabled ? null : '0'\"\n                           [fragment]=\"item.fragment\" [queryParamsHandling]=\"item.queryParamsHandling\" [preserveFragment]=\"item.preserveFragment\" [skipLocationChange]=\"item.skipLocationChange\" [replaceUrl]=\"item.replaceUrl\" [state]=\"item.state\">\n                        <span *ngIf=\"item.items\" class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-chevron-right':!item.expanded,'pi-chevron-down':item.expanded}\"></span\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"item.icon\" *ngIf=\"item.icon\"></span\n                        ><span class=\"ui-menuitem-text\">{{item.label}}</span>\n                        </a>\n                    </div>\n                    <div *ngIf=\"item.items\" class=\"ui-panelmenu-content-wrapper\" [@rootItem]=\"item.expanded ? {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*'}} : {value: 'hidden', params: {transitionParams: transitionOptions, height: '0'}}\"  (@rootItem.done)=\"onToggleDone()\"\n                         [ngClass]=\"{'ui-panelmenu-content-wrapper-overflown': !item.expanded||animating}\">\n                        <div class=\"ui-panelmenu-content ui-widget-content\" role=\"region\" [attr.id]=\"item.id +'_content' \" [attr.aria-labelledby]=\"item.id +'_header'\">\n                            <p-panelMenuSub [item]=\"item\" [expanded]=\"true\" [transitionOptions]=\"transitionOptions\" class=\"ui-panelmenu-root-submenu\"></p-panelMenuSub>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    animations: [\n        trigger('rootItem', [\n            state('hidden', style({\n                height: '0px'\n            })),\n            state('void', style({\n                height: '{{height}}'\n            }), {params: {height: '0'}}),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible => hidden', animate('{{transitionParams}}')),\n            transition('hidden => visible', animate('{{transitionParams}}')),\n            transition('void => hidden', animate('{{transitionParams}}')),\n            transition('void => visible', animate('{{transitionParams}}'))\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class PanelMenu extends BasePanelMenuItem {\n    \n    @Input() model: MenuItem[];\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() multiple: boolean = true;\n\n    @Input() transitionOptions: string = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n    \n    public animating: boolean;\n\n    constructor(ref: ChangeDetectorRef) {\n        super(ref);\n    }\n                \n    collapseAll() {\n    \tfor(let item of this.model) {\n    \t\tif (item.expanded) {\n    \t\t\titem.expanded = false;\n    \t\t}\n    \t}\n    }\n\n    handleClick(event, item) {\n    \tif (!this.multiple) {\n            for(let modelItem of this.model) {\n        \t\tif (item !== modelItem && modelItem.expanded) {\n        \t\t\tmodelItem.expanded = false;\n        \t\t}\n        \t}\n    \t}\n        \n        this.animating = true;\n        super.handleClick(event, item);\n    }\n    \n    onToggleDone() {\n        this.animating = false;\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule,RouterModule],\n    exports: [PanelMenu,RouterModule],\n    declarations: [PanelMenu,PanelMenuSub]\n})\nexport class PanelMenuModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}