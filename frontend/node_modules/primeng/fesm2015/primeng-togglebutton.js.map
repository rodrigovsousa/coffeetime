{"version":3,"file":"primeng-togglebutton.js","sources":["ng:/primeng/togglebutton/togglebutton.ts","ng:/primeng/togglebutton/primeng-togglebutton.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,forwardRef,AfterViewInit,ViewChild,ElementRef,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const TOGGLEBUTTON_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ToggleButton),\n  multi: true\n};\n\n@Component({\n    selector: 'p-toggleButton',\n    template: `\n        <div [ngClass]=\"{'ui-button ui-togglebutton ui-widget ui-state-default ui-corner-all': true, 'ui-button-text-only': (!onIcon && !offIcon), \n                'ui-button-text-icon-left': (onIcon && offIcon && hasOnLabel && hasOffLabel && iconPos === 'left'), \n                'ui-button-text-icon-right': (onIcon && offIcon && hasOnLabel && hasOffLabel && iconPos === 'right'),'ui-button-icon-only': (onIcon && offIcon && !hasOnLabel && !hasOffLabel),\n                'ui-state-active': checked,'ui-state-focus':focus,'ui-state-disabled':disabled}\" [ngStyle]=\"style\" [class]=\"styleClass\" \n                (click)=\"toggle($event)\" (keydown.enter)=\"toggle($event)\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #checkbox type=\"checkbox\" [attr.id]=\"inputId\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [attr.tabindex]=\"tabindex\"\n                    role=\"button\" [attr.aria-pressed]=\"checked\" [attr.aria-labelledby]=\"ariaLabelledBy\" [disabled]=\"disabled\">\n            </div>\n            <span *ngIf=\"onIcon||offIcon\" class=\"ui-button-icon-left\" [class]=\"checked ? this.onIcon : this.offIcon\" [ngClass]=\"{'ui-button-icon-left': (iconPos === 'left'), \n            'ui-button-icon-right': (iconPos === 'right')}\"></span>\n            <span class=\"ui-button-text ui-unselectable-text\">{{checked ? hasOnLabel ? onLabel : 'ui-btn' : hasOffLabel ? offLabel : 'ui-btn'}}</span>\n        </div>\n    `,\n    providers: [TOGGLEBUTTON_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class ToggleButton implements ControlValueAccessor,AfterViewInit {\n\n    @Input() onLabel: string = 'Yes';\n\n    @Input() offLabel: string = 'No';\n\n    @Input() onIcon: string;\n\n    @Input() offIcon: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() disabled: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() inputId: string;\n\n    @Input() tabindex: number;\n\n    @Input() iconPos: string = 'left';\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    @ViewChild('checkbox') checkboxViewChild: ElementRef;\n    \n    checkbox: HTMLInputElement;\n    \n    checked: boolean = false;\n\n    focus: boolean = false;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    ngAfterViewInit() {\n        if (this.checkboxViewChild){\n            this.checkbox = <HTMLInputElement> this.checkboxViewChild.nativeElement;\n        }\n    }\n    \n    toggle(event: Event) {\n        if (!this.disabled) {\n            this.checked = !this.checked;\n            this.onModelChange(this.checked);\n            this.onModelTouched();\n            this.onChange.emit({\n                originalEvent: event,\n                checked: this.checked\n            });\n            if (this.checkbox) {\n                this.checkbox.focus();\n            }\n        }\n    }\n\n    onFocus() {\n        this.focus = true;\n    }\n    \n    onBlur() {\n        this.focus = false;\n        this.onModelTouched();\n    }\n    \n    writeValue(value: any) : void {\n        this.checked = value;\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    get hasOnLabel():boolean {\n        return this.onLabel && this.onLabel.length > 0;\n    }\n    \n    get hasOffLabel():boolean {\n        return this.onLabel && this.onLabel.length > 0;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ToggleButton],\n    declarations: [ToggleButton]\n})\nexport class ToggleButtonModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}