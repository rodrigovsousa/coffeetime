import { EventEmitter, ElementRef } from '@angular/core';
import { BlockableUI } from 'primeng/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
export declare class Fieldset implements BlockableUI {
    private el;
    legend: string;
    toggleable: boolean;
    collapsed: boolean;
    collapsedChange: EventEmitter<any>;
    onBeforeToggle: EventEmitter<any>;
    onAfterToggle: EventEmitter<any>;
    style: any;
    styleClass: string;
    transitionOptions: string;
    animating: boolean;
    constructor(el: ElementRef);
    id: string;
    toggle(event: any): boolean;
    expand(event: any): void;
    collapse(event: any): void;
    getBlockableElement(): HTMLElement;
    onToggleDone(event: Event): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Fieldset, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Fieldset, "p-fieldset", never, { "collapsed": "collapsed"; "transitionOptions": "transitionOptions"; "legend": "legend"; "toggleable": "toggleable"; "style": "style"; "styleClass": "styleClass"; }, { "collapsedChange": "collapsedChange"; "onBeforeToggle": "onBeforeToggle"; "onAfterToggle": "onAfterToggle"; }, never, ["p-header", "*"]>;
}
export declare class FieldsetModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<FieldsetModule, [typeof Fieldset], [typeof ɵngcc1.CommonModule], [typeof Fieldset, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<FieldsetModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmllbGRzZXQuZC50cyIsInNvdXJjZXMiOlsiZmllbGRzZXQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCbG9ja2FibGVVSSB9IGZyb20gJ3ByaW1lbmcvYXBpJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEZpZWxkc2V0IGltcGxlbWVudHMgQmxvY2thYmxlVUkge1xuICAgIHByaXZhdGUgZWw7XG4gICAgbGVnZW5kOiBzdHJpbmc7XG4gICAgdG9nZ2xlYWJsZTogYm9vbGVhbjtcbiAgICBjb2xsYXBzZWQ6IGJvb2xlYW47XG4gICAgY29sbGFwc2VkQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkJlZm9yZVRvZ2dsZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25BZnRlclRvZ2dsZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgc3R5bGU6IGFueTtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgdHJhbnNpdGlvbk9wdGlvbnM6IHN0cmluZztcbiAgICBhbmltYXRpbmc6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYpO1xuICAgIGlkOiBzdHJpbmc7XG4gICAgdG9nZ2xlKGV2ZW50OiBhbnkpOiBib29sZWFuO1xuICAgIGV4cGFuZChldmVudDogYW55KTogdm9pZDtcbiAgICBjb2xsYXBzZShldmVudDogYW55KTogdm9pZDtcbiAgICBnZXRCbG9ja2FibGVFbGVtZW50KCk6IEhUTUxFbGVtZW50O1xuICAgIG9uVG9nZ2xlRG9uZShldmVudDogRXZlbnQpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRmllbGRzZXRNb2R1bGUge1xufVxuIl19