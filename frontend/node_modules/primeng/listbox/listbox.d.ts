import { ElementRef, EventEmitter, AfterContentInit, QueryList, TemplateRef, ChangeDetectorRef } from '@angular/core';
import { SelectItem } from 'primeng/api';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
export declare const LISTBOX_VALUE_ACCESSOR: any;
export declare class Listbox implements AfterContentInit, ControlValueAccessor {
    el: ElementRef;
    cd: ChangeDetectorRef;
    multiple: boolean;
    style: any;
    styleClass: string;
    listStyle: any;
    listStyleClass: string;
    readonly: boolean;
    disabled: boolean;
    checkbox: boolean;
    filter: boolean;
    filterMode: string;
    filterLocale: string;
    metaKeySelection: boolean;
    dataKey: string;
    showToggleAll: boolean;
    optionLabel: string;
    ariaFilterLabel: string;
    filterPlaceHolder: string;
    onChange: EventEmitter<any>;
    onClick: EventEmitter<any>;
    onDblClick: EventEmitter<any>;
    headerCheckboxViewChild: ElementRef;
    headerFacet: any;
    footerFacet: any;
    templates: QueryList<any>;
    itemTemplate: TemplateRef<any>;
    _filterValue: string;
    filtered: boolean;
    value: any;
    onModelChange: Function;
    onModelTouched: Function;
    optionTouched: boolean;
    focus: boolean;
    _options: any[];
    headerCheckboxFocus: boolean;
    disabledSelectedOptions: SelectItem[];
    constructor(el: ElementRef, cd: ChangeDetectorRef);
    options: any[];
    filterValue: string;
    ngAfterContentInit(): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(val: boolean): void;
    onOptionClick(event: any, option: any): void;
    onOptionTouchEnd(event: any, option: any): void;
    onOptionDoubleClick(event: Event, option: SelectItem): any;
    onOptionClickSingle(event: any, option: any): void;
    onOptionClickMultiple(event: any, option: any): void;
    onOptionClickCheckbox(event: any, option: any): void;
    removeOption(option: any): void;
    isSelected(option: SelectItem): boolean;
    readonly allChecked: boolean;
    getEnabledOptionCount(): number;
    allFilteredSelected(): boolean;
    onFilter(event: any): void;
    toggleAll(event: any): void;
    isItemVisible(option: SelectItem): boolean;
    onInputFocus(event: any): void;
    onInputBlur(event: any): void;
    onOptionKeyDown(event: KeyboardEvent, option: any): void;
    findNextItem(item: any): any;
    findPrevItem(item: any): any;
    getFilteredOptions(): any[];
    onHeaderCheckboxFocus(): void;
    onHeaderCheckboxBlur(): void;
    setDisabledSelectedOptions(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Listbox, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Listbox, "p-listbox", never, { "checkbox": "checkbox"; "filter": "filter"; "filterMode": "filterMode"; "metaKeySelection": "metaKeySelection"; "showToggleAll": "showToggleAll"; "options": "options"; "filterValue": "filterValue"; "disabled": "disabled"; "multiple": "multiple"; "style": "style"; "styleClass": "styleClass"; "listStyle": "listStyle"; "listStyleClass": "listStyleClass"; "readonly": "readonly"; "filterLocale": "filterLocale"; "dataKey": "dataKey"; "optionLabel": "optionLabel"; "ariaFilterLabel": "ariaFilterLabel"; "filterPlaceHolder": "filterPlaceHolder"; }, { "onChange": "onChange"; "onClick": "onClick"; "onDblClick": "onDblClick"; }, ["headerFacet", "footerFacet", "templates"], ["p-header", "p-footer"]>;
}
export declare class ListboxModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ListboxModule, [typeof Listbox], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.SharedModule], [typeof Listbox, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ListboxModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdGJveC5kLnRzIiwic291cmNlcyI6WyJsaXN0Ym94LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOzs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBBZnRlckNvbnRlbnRJbml0LCBRdWVyeUxpc3QsIFRlbXBsYXRlUmVmLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU2VsZWN0SXRlbSB9IGZyb20gJ3ByaW1lbmcvYXBpJztcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgTElTVEJPWF9WQUxVRV9BQ0NFU1NPUjogYW55O1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTGlzdGJveCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIENvbnRyb2xWYWx1ZUFjY2Vzc29yIHtcbiAgICBlbDogRWxlbWVudFJlZjtcbiAgICBjZDogQ2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgbXVsdGlwbGU6IGJvb2xlYW47XG4gICAgc3R5bGU6IGFueTtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgbGlzdFN0eWxlOiBhbnk7XG4gICAgbGlzdFN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICByZWFkb25seTogYm9vbGVhbjtcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICBjaGVja2JveDogYm9vbGVhbjtcbiAgICBmaWx0ZXI6IGJvb2xlYW47XG4gICAgZmlsdGVyTW9kZTogc3RyaW5nO1xuICAgIGZpbHRlckxvY2FsZTogc3RyaW5nO1xuICAgIG1ldGFLZXlTZWxlY3Rpb246IGJvb2xlYW47XG4gICAgZGF0YUtleTogc3RyaW5nO1xuICAgIHNob3dUb2dnbGVBbGw6IGJvb2xlYW47XG4gICAgb3B0aW9uTGFiZWw6IHN0cmluZztcbiAgICBhcmlhRmlsdGVyTGFiZWw6IHN0cmluZztcbiAgICBmaWx0ZXJQbGFjZUhvbGRlcjogc3RyaW5nO1xuICAgIG9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkNsaWNrOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkRibENsaWNrOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBoZWFkZXJDaGVja2JveFZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICBoZWFkZXJGYWNldDogYW55O1xuICAgIGZvb3RlckZhY2V0OiBhbnk7XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICBpdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgX2ZpbHRlclZhbHVlOiBzdHJpbmc7XG4gICAgZmlsdGVyZWQ6IGJvb2xlYW47XG4gICAgdmFsdWU6IGFueTtcbiAgICBvbk1vZGVsQ2hhbmdlOiBGdW5jdGlvbjtcbiAgICBvbk1vZGVsVG91Y2hlZDogRnVuY3Rpb247XG4gICAgb3B0aW9uVG91Y2hlZDogYm9vbGVhbjtcbiAgICBmb2N1czogYm9vbGVhbjtcbiAgICBfb3B0aW9uczogYW55W107XG4gICAgaGVhZGVyQ2hlY2tib3hGb2N1czogYm9vbGVhbjtcbiAgICBkaXNhYmxlZFNlbGVjdGVkT3B0aW9uczogU2VsZWN0SXRlbVtdO1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG9wdGlvbnM6IGFueVtdO1xuICAgIGZpbHRlclZhbHVlOiBzdHJpbmc7XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KTogdm9pZDtcbiAgICByZWdpc3Rlck9uQ2hhbmdlKGZuOiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IEZ1bmN0aW9uKTogdm9pZDtcbiAgICBzZXREaXNhYmxlZFN0YXRlKHZhbDogYm9vbGVhbik6IHZvaWQ7XG4gICAgb25PcHRpb25DbGljayhldmVudDogYW55LCBvcHRpb246IGFueSk6IHZvaWQ7XG4gICAgb25PcHRpb25Ub3VjaEVuZChldmVudDogYW55LCBvcHRpb246IGFueSk6IHZvaWQ7XG4gICAgb25PcHRpb25Eb3VibGVDbGljayhldmVudDogRXZlbnQsIG9wdGlvbjogU2VsZWN0SXRlbSk6IGFueTtcbiAgICBvbk9wdGlvbkNsaWNrU2luZ2xlKGV2ZW50OiBhbnksIG9wdGlvbjogYW55KTogdm9pZDtcbiAgICBvbk9wdGlvbkNsaWNrTXVsdGlwbGUoZXZlbnQ6IGFueSwgb3B0aW9uOiBhbnkpOiB2b2lkO1xuICAgIG9uT3B0aW9uQ2xpY2tDaGVja2JveChldmVudDogYW55LCBvcHRpb246IGFueSk6IHZvaWQ7XG4gICAgcmVtb3ZlT3B0aW9uKG9wdGlvbjogYW55KTogdm9pZDtcbiAgICBpc1NlbGVjdGVkKG9wdGlvbjogU2VsZWN0SXRlbSk6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgYWxsQ2hlY2tlZDogYm9vbGVhbjtcbiAgICBnZXRFbmFibGVkT3B0aW9uQ291bnQoKTogbnVtYmVyO1xuICAgIGFsbEZpbHRlcmVkU2VsZWN0ZWQoKTogYm9vbGVhbjtcbiAgICBvbkZpbHRlcihldmVudDogYW55KTogdm9pZDtcbiAgICB0b2dnbGVBbGwoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgaXNJdGVtVmlzaWJsZShvcHRpb246IFNlbGVjdEl0ZW0pOiBib29sZWFuO1xuICAgIG9uSW5wdXRGb2N1cyhldmVudDogYW55KTogdm9pZDtcbiAgICBvbklucHV0Qmx1cihldmVudDogYW55KTogdm9pZDtcbiAgICBvbk9wdGlvbktleURvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQsIG9wdGlvbjogYW55KTogdm9pZDtcbiAgICBmaW5kTmV4dEl0ZW0oaXRlbTogYW55KTogYW55O1xuICAgIGZpbmRQcmV2SXRlbShpdGVtOiBhbnkpOiBhbnk7XG4gICAgZ2V0RmlsdGVyZWRPcHRpb25zKCk6IGFueVtdO1xuICAgIG9uSGVhZGVyQ2hlY2tib3hGb2N1cygpOiB2b2lkO1xuICAgIG9uSGVhZGVyQ2hlY2tib3hCbHVyKCk6IHZvaWQ7XG4gICAgc2V0RGlzYWJsZWRTZWxlY3RlZE9wdGlvbnMoKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIExpc3Rib3hNb2R1bGUge1xufVxuIl19