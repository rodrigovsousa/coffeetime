import { ElementRef, AfterContentInit, EventEmitter, TemplateRef, QueryList } from '@angular/core';
import { TreeNode } from 'primeng/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
export declare class OrganizationChartNode {
    node: TreeNode;
    root: boolean;
    first: boolean;
    last: boolean;
    chart: OrganizationChart;
    constructor(chart: any);
    readonly leaf: boolean;
    readonly colspan: number;
    onNodeClick(event: Event, node: TreeNode): void;
    toggleNode(event: Event, node: TreeNode): void;
    isSelected(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OrganizationChartNode, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<OrganizationChartNode, "[pOrganizationChartNode]", never, { "node": "node"; "root": "root"; "first": "first"; "last": "last"; }, {}, never, never>;
}
export declare class OrganizationChart implements AfterContentInit {
    el: ElementRef;
    value: TreeNode[];
    style: any;
    styleClass: string;
    selectionMode: string;
    selection: any;
    preserveSpace: boolean;
    selectionChange: EventEmitter<any>;
    onNodeSelect: EventEmitter<any>;
    onNodeUnselect: EventEmitter<any>;
    onNodeExpand: EventEmitter<any>;
    onNodeCollapse: EventEmitter<any>;
    templates: QueryList<any>;
    templateMap: any;
    constructor(el: ElementRef);
    readonly root: TreeNode;
    ngAfterContentInit(): void;
    getTemplateForNode(node: TreeNode): TemplateRef<any>;
    onNodeClick(event: Event, node: TreeNode): void;
    findIndexInSelection(node: TreeNode): number;
    isSelected(node: TreeNode): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OrganizationChart, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<OrganizationChart, "p-organizationChart", never, { "preserveSpace": "preserveSpace"; "selection": "selection"; "value": "value"; "style": "style"; "styleClass": "styleClass"; "selectionMode": "selectionMode"; }, { "selectionChange": "selectionChange"; "onNodeSelect": "onNodeSelect"; "onNodeUnselect": "onNodeUnselect"; "onNodeExpand": "onNodeExpand"; "onNodeCollapse": "onNodeCollapse"; }, ["templates"], never>;
}
export declare class OrganizationChartModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<OrganizationChartModule, [typeof OrganizationChart, typeof OrganizationChartNode], [typeof ɵngcc1.CommonModule], [typeof OrganizationChart, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<OrganizationChartModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JnYW5pemF0aW9uY2hhcnQuZC50cyIsInNvdXJjZXMiOlsib3JnYW5pemF0aW9uY2hhcnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEFmdGVyQ29udGVudEluaXQsIEV2ZW50RW1pdHRlciwgVGVtcGxhdGVSZWYsIFF1ZXJ5TGlzdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVHJlZU5vZGUgfSBmcm9tICdwcmltZW5nL2FwaSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBPcmdhbml6YXRpb25DaGFydE5vZGUge1xuICAgIG5vZGU6IFRyZWVOb2RlO1xuICAgIHJvb3Q6IGJvb2xlYW47XG4gICAgZmlyc3Q6IGJvb2xlYW47XG4gICAgbGFzdDogYm9vbGVhbjtcbiAgICBjaGFydDogT3JnYW5pemF0aW9uQ2hhcnQ7XG4gICAgY29uc3RydWN0b3IoY2hhcnQ6IGFueSk7XG4gICAgcmVhZG9ubHkgbGVhZjogYm9vbGVhbjtcbiAgICByZWFkb25seSBjb2xzcGFuOiBudW1iZXI7XG4gICAgb25Ob2RlQ2xpY2soZXZlbnQ6IEV2ZW50LCBub2RlOiBUcmVlTm9kZSk6IHZvaWQ7XG4gICAgdG9nZ2xlTm9kZShldmVudDogRXZlbnQsIG5vZGU6IFRyZWVOb2RlKTogdm9pZDtcbiAgICBpc1NlbGVjdGVkKCk6IGJvb2xlYW47XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBPcmdhbml6YXRpb25DaGFydCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQge1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIHZhbHVlOiBUcmVlTm9kZVtdO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIHNlbGVjdGlvbk1vZGU6IHN0cmluZztcbiAgICBzZWxlY3Rpb246IGFueTtcbiAgICBwcmVzZXJ2ZVNwYWNlOiBib29sZWFuO1xuICAgIHNlbGVjdGlvbkNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25Ob2RlU2VsZWN0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbk5vZGVVbnNlbGVjdDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25Ob2RlRXhwYW5kOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbk5vZGVDb2xsYXBzZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICB0ZW1wbGF0ZU1hcDogYW55O1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmKTtcbiAgICByZWFkb25seSByb290OiBUcmVlTm9kZTtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICBnZXRUZW1wbGF0ZUZvck5vZGUobm9kZTogVHJlZU5vZGUpOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIG9uTm9kZUNsaWNrKGV2ZW50OiBFdmVudCwgbm9kZTogVHJlZU5vZGUpOiB2b2lkO1xuICAgIGZpbmRJbmRleEluU2VsZWN0aW9uKG5vZGU6IFRyZWVOb2RlKTogbnVtYmVyO1xuICAgIGlzU2VsZWN0ZWQobm9kZTogVHJlZU5vZGUpOiBib29sZWFuO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgT3JnYW5pemF0aW9uQ2hhcnRNb2R1bGUge1xufVxuIl19