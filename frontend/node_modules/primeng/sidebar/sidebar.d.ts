import { AfterViewInit, AfterViewChecked, OnDestroy, EventEmitter, ElementRef, Renderer2 } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export declare class Sidebar implements AfterViewInit, AfterViewChecked, OnDestroy {
    el: ElementRef;
    renderer: Renderer2;
    position: string;
    fullScreen: boolean;
    appendTo: string;
    blockScroll: boolean;
    style: any;
    styleClass: string;
    ariaCloseLabel: string;
    autoZIndex: boolean;
    baseZIndex: number;
    modal: boolean;
    dismissible: boolean;
    showCloseIcon: boolean;
    closeOnEscape: boolean;
    containerViewChild: ElementRef;
    onShow: EventEmitter<any>;
    onHide: EventEmitter<any>;
    visibleChange: EventEmitter<any>;
    initialized: boolean;
    _visible: boolean;
    preventVisibleChangePropagation: boolean;
    mask: HTMLDivElement;
    maskClickListener: Function;
    documentEscapeListener: Function;
    executePostDisplayActions: boolean;
    constructor(el: ElementRef, renderer: Renderer2);
    ngAfterViewInit(): void;
    visible: boolean;
    ngAfterViewChecked(): void;
    show(): void;
    hide(): void;
    close(event: Event): void;
    enableModality(): void;
    disableModality(): void;
    onAnimationStart(event: any): void;
    bindDocumentEscapeListener(): void;
    unbindDocumentEscapeListener(): void;
    unbindMaskClickListener(): void;
    unbindGlobalListeners(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Sidebar, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Sidebar, "p-sidebar", never, { "position": "position"; "blockScroll": "blockScroll"; "autoZIndex": "autoZIndex"; "baseZIndex": "baseZIndex"; "modal": "modal"; "dismissible": "dismissible"; "showCloseIcon": "showCloseIcon"; "closeOnEscape": "closeOnEscape"; "visible": "visible"; "fullScreen": "fullScreen"; "appendTo": "appendTo"; "style": "style"; "styleClass": "styleClass"; "ariaCloseLabel": "ariaCloseLabel"; }, { "onShow": "onShow"; "onHide": "onHide"; "visibleChange": "visibleChange"; }, never, ["*"]>;
}
export declare class SidebarModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<SidebarModule, [typeof Sidebar], [typeof ɵngcc1.CommonModule], [typeof Sidebar]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<SidebarModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci5kLnRzIiwic291cmNlcyI6WyJzaWRlYmFyLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBBZnRlclZpZXdDaGVja2VkLCBPbkRlc3Ryb3ksIEV2ZW50RW1pdHRlciwgRWxlbWVudFJlZiwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTaWRlYmFyIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgQWZ0ZXJWaWV3Q2hlY2tlZCwgT25EZXN0cm95IHtcbiAgICBlbDogRWxlbWVudFJlZjtcbiAgICByZW5kZXJlcjogUmVuZGVyZXIyO1xuICAgIHBvc2l0aW9uOiBzdHJpbmc7XG4gICAgZnVsbFNjcmVlbjogYm9vbGVhbjtcbiAgICBhcHBlbmRUbzogc3RyaW5nO1xuICAgIGJsb2NrU2Nyb2xsOiBib29sZWFuO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIGFyaWFDbG9zZUxhYmVsOiBzdHJpbmc7XG4gICAgYXV0b1pJbmRleDogYm9vbGVhbjtcbiAgICBiYXNlWkluZGV4OiBudW1iZXI7XG4gICAgbW9kYWw6IGJvb2xlYW47XG4gICAgZGlzbWlzc2libGU6IGJvb2xlYW47XG4gICAgc2hvd0Nsb3NlSWNvbjogYm9vbGVhbjtcbiAgICBjbG9zZU9uRXNjYXBlOiBib29sZWFuO1xuICAgIGNvbnRhaW5lclZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICBvblNob3c6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uSGlkZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgdmlzaWJsZUNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgaW5pdGlhbGl6ZWQ6IGJvb2xlYW47XG4gICAgX3Zpc2libGU6IGJvb2xlYW47XG4gICAgcHJldmVudFZpc2libGVDaGFuZ2VQcm9wYWdhdGlvbjogYm9vbGVhbjtcbiAgICBtYXNrOiBIVE1MRGl2RWxlbWVudDtcbiAgICBtYXNrQ2xpY2tMaXN0ZW5lcjogRnVuY3Rpb247XG4gICAgZG9jdW1lbnRFc2NhcGVMaXN0ZW5lcjogRnVuY3Rpb247XG4gICAgZXhlY3V0ZVBvc3REaXNwbGF5QWN0aW9uczogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMik7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgdmlzaWJsZTogYm9vbGVhbjtcbiAgICBuZ0FmdGVyVmlld0NoZWNrZWQoKTogdm9pZDtcbiAgICBzaG93KCk6IHZvaWQ7XG4gICAgaGlkZSgpOiB2b2lkO1xuICAgIGNsb3NlKGV2ZW50OiBFdmVudCk6IHZvaWQ7XG4gICAgZW5hYmxlTW9kYWxpdHkoKTogdm9pZDtcbiAgICBkaXNhYmxlTW9kYWxpdHkoKTogdm9pZDtcbiAgICBvbkFuaW1hdGlvblN0YXJ0KGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGJpbmREb2N1bWVudEVzY2FwZUxpc3RlbmVyKCk6IHZvaWQ7XG4gICAgdW5iaW5kRG9jdW1lbnRFc2NhcGVMaXN0ZW5lcigpOiB2b2lkO1xuICAgIHVuYmluZE1hc2tDbGlja0xpc3RlbmVyKCk6IHZvaWQ7XG4gICAgdW5iaW5kR2xvYmFsTGlzdGVuZXJzKCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFNpZGViYXJNb2R1bGUge1xufVxuIl19