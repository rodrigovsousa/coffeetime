import { ElementRef, OnDestroy, EventEmitter, Renderer2, NgZone, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export declare const SLIDER_VALUE_ACCESSOR: any;
export declare class Slider implements OnDestroy, ControlValueAccessor {
    el: ElementRef;
    renderer: Renderer2;
    private ngZone;
    cd: ChangeDetectorRef;
    animate: boolean;
    disabled: boolean;
    min: number;
    max: number;
    orientation: string;
    step: number;
    range: boolean;
    style: any;
    styleClass: string;
    ariaLabelledBy: string;
    tabindex: number;
    onChange: EventEmitter<any>;
    onSlideEnd: EventEmitter<any>;
    sliderHandle: ElementRef;
    sliderHandleStart: ElementRef;
    sliderHandleEnd: ElementRef;
    value: number;
    values: number[];
    handleValue: number;
    handleValues: number[];
    onModelChange: Function;
    onModelTouched: Function;
    dragging: boolean;
    dragListener: any;
    mouseupListener: any;
    initX: number;
    initY: number;
    barWidth: number;
    barHeight: number;
    sliderHandleClick: boolean;
    handleIndex: number;
    startHandleValue: any;
    startx: number;
    starty: number;
    constructor(el: ElementRef, renderer: Renderer2, ngZone: NgZone, cd: ChangeDetectorRef);
    onMouseDown(event: any, index?: number): void;
    onTouchStart(event: any, index?: number): void;
    onTouchMove(event: any, index?: number): void;
    onTouchEnd(event: any, index?: number): void;
    onBarClick(event: any): void;
    onHandleKeydown(event: any, handleIndex?: number): void;
    spin(event: any, dir: number, handleIndex?: number): void;
    handleChange(event: Event): void;
    bindDragListeners(): void;
    unbindDragListeners(): void;
    setValueFromHandle(event: Event, handleValue: any): void;
    handleStepChange(newValue: number, oldValue: number): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(val: boolean): void;
    readonly rangeStartLeft: string;
    readonly rangeStartBottom: string;
    readonly rangeEndLeft: string;
    readonly rangeEndBottom: string;
    isVertical(): boolean;
    updateDomData(): void;
    calculateHandleValue(event: any): number;
    updateHandleValue(): void;
    updateValue(val: number, event?: Event): void;
    getValueFromHandle(handleValue: number): number;
    getDecimalsCount(value: number): number;
    getNormalizedValue(val: number): number;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Slider, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Slider, "p-slider", never, { "min": "min"; "max": "max"; "orientation": "orientation"; "tabindex": "tabindex"; "disabled": "disabled"; "animate": "animate"; "step": "step"; "range": "range"; "style": "style"; "styleClass": "styleClass"; "ariaLabelledBy": "ariaLabelledBy"; }, { "onChange": "onChange"; "onSlideEnd": "onSlideEnd"; }, never, never>;
}
export declare class SliderModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<SliderModule, [typeof Slider], [typeof ɵngcc1.CommonModule], [typeof Slider]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<SliderModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLmQudHMiLCJzb3VyY2VzIjpbInNsaWRlci5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIE9uRGVzdHJveSwgRXZlbnRFbWl0dGVyLCBSZW5kZXJlcjIsIE5nWm9uZSwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgU0xJREVSX1ZBTFVFX0FDQ0VTU09SOiBhbnk7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTbGlkZXIgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIENvbnRyb2xWYWx1ZUFjY2Vzc29yIHtcbiAgICBlbDogRWxlbWVudFJlZjtcbiAgICByZW5kZXJlcjogUmVuZGVyZXIyO1xuICAgIHByaXZhdGUgbmdab25lO1xuICAgIGNkOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICBhbmltYXRlOiBib29sZWFuO1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIG1pbjogbnVtYmVyO1xuICAgIG1heDogbnVtYmVyO1xuICAgIG9yaWVudGF0aW9uOiBzdHJpbmc7XG4gICAgc3RlcDogbnVtYmVyO1xuICAgIHJhbmdlOiBib29sZWFuO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIGFyaWFMYWJlbGxlZEJ5OiBzdHJpbmc7XG4gICAgdGFiaW5kZXg6IG51bWJlcjtcbiAgICBvbkNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25TbGlkZUVuZDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgc2xpZGVySGFuZGxlOiBFbGVtZW50UmVmO1xuICAgIHNsaWRlckhhbmRsZVN0YXJ0OiBFbGVtZW50UmVmO1xuICAgIHNsaWRlckhhbmRsZUVuZDogRWxlbWVudFJlZjtcbiAgICB2YWx1ZTogbnVtYmVyO1xuICAgIHZhbHVlczogbnVtYmVyW107XG4gICAgaGFuZGxlVmFsdWU6IG51bWJlcjtcbiAgICBoYW5kbGVWYWx1ZXM6IG51bWJlcltdO1xuICAgIG9uTW9kZWxDaGFuZ2U6IEZ1bmN0aW9uO1xuICAgIG9uTW9kZWxUb3VjaGVkOiBGdW5jdGlvbjtcbiAgICBkcmFnZ2luZzogYm9vbGVhbjtcbiAgICBkcmFnTGlzdGVuZXI6IGFueTtcbiAgICBtb3VzZXVwTGlzdGVuZXI6IGFueTtcbiAgICBpbml0WDogbnVtYmVyO1xuICAgIGluaXRZOiBudW1iZXI7XG4gICAgYmFyV2lkdGg6IG51bWJlcjtcbiAgICBiYXJIZWlnaHQ6IG51bWJlcjtcbiAgICBzbGlkZXJIYW5kbGVDbGljazogYm9vbGVhbjtcbiAgICBoYW5kbGVJbmRleDogbnVtYmVyO1xuICAgIHN0YXJ0SGFuZGxlVmFsdWU6IGFueTtcbiAgICBzdGFydHg6IG51bWJlcjtcbiAgICBzdGFydHk6IG51bWJlcjtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgbmdab25lOiBOZ1pvbmUsIGNkOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgb25Nb3VzZURvd24oZXZlbnQ6IGFueSwgaW5kZXg/OiBudW1iZXIpOiB2b2lkO1xuICAgIG9uVG91Y2hTdGFydChldmVudDogYW55LCBpbmRleD86IG51bWJlcik6IHZvaWQ7XG4gICAgb25Ub3VjaE1vdmUoZXZlbnQ6IGFueSwgaW5kZXg/OiBudW1iZXIpOiB2b2lkO1xuICAgIG9uVG91Y2hFbmQoZXZlbnQ6IGFueSwgaW5kZXg/OiBudW1iZXIpOiB2b2lkO1xuICAgIG9uQmFyQ2xpY2soZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25IYW5kbGVLZXlkb3duKGV2ZW50OiBhbnksIGhhbmRsZUluZGV4PzogbnVtYmVyKTogdm9pZDtcbiAgICBzcGluKGV2ZW50OiBhbnksIGRpcjogbnVtYmVyLCBoYW5kbGVJbmRleD86IG51bWJlcik6IHZvaWQ7XG4gICAgaGFuZGxlQ2hhbmdlKGV2ZW50OiBFdmVudCk6IHZvaWQ7XG4gICAgYmluZERyYWdMaXN0ZW5lcnMoKTogdm9pZDtcbiAgICB1bmJpbmREcmFnTGlzdGVuZXJzKCk6IHZvaWQ7XG4gICAgc2V0VmFsdWVGcm9tSGFuZGxlKGV2ZW50OiBFdmVudCwgaGFuZGxlVmFsdWU6IGFueSk6IHZvaWQ7XG4gICAgaGFuZGxlU3RlcENoYW5nZShuZXdWYWx1ZTogbnVtYmVyLCBvbGRWYWx1ZTogbnVtYmVyKTogdm9pZDtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25DaGFuZ2UoZm46IEZ1bmN0aW9uKTogdm9pZDtcbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbjogRnVuY3Rpb24pOiB2b2lkO1xuICAgIHNldERpc2FibGVkU3RhdGUodmFsOiBib29sZWFuKTogdm9pZDtcbiAgICByZWFkb25seSByYW5nZVN0YXJ0TGVmdDogc3RyaW5nO1xuICAgIHJlYWRvbmx5IHJhbmdlU3RhcnRCb3R0b206IHN0cmluZztcbiAgICByZWFkb25seSByYW5nZUVuZExlZnQ6IHN0cmluZztcbiAgICByZWFkb25seSByYW5nZUVuZEJvdHRvbTogc3RyaW5nO1xuICAgIGlzVmVydGljYWwoKTogYm9vbGVhbjtcbiAgICB1cGRhdGVEb21EYXRhKCk6IHZvaWQ7XG4gICAgY2FsY3VsYXRlSGFuZGxlVmFsdWUoZXZlbnQ6IGFueSk6IG51bWJlcjtcbiAgICB1cGRhdGVIYW5kbGVWYWx1ZSgpOiB2b2lkO1xuICAgIHVwZGF0ZVZhbHVlKHZhbDogbnVtYmVyLCBldmVudD86IEV2ZW50KTogdm9pZDtcbiAgICBnZXRWYWx1ZUZyb21IYW5kbGUoaGFuZGxlVmFsdWU6IG51bWJlcik6IG51bWJlcjtcbiAgICBnZXREZWNpbWFsc0NvdW50KHZhbHVlOiBudW1iZXIpOiBudW1iZXI7XG4gICAgZ2V0Tm9ybWFsaXplZFZhbHVlKHZhbDogbnVtYmVyKTogbnVtYmVyO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTbGlkZXJNb2R1bGUge1xufVxuIl19